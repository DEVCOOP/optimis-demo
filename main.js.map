{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth-routing.module.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/login/login.component.html","webpack:///./src/app/auth/login/login.component.scss","webpack:///./src/app/auth/login/login.component.ts","webpack:///./src/app/auth/register/register.component.html","webpack:///./src/app/auth/register/register.component.scss","webpack:///./src/app/auth/register/register.component.ts","webpack:///./src/app/auth/services/authentication.service.ts","webpack:///./src/app/auth/services/token-storage.service.ts","webpack:///./src/app/backoffice/backoffice-routing.module.ts","webpack:///./src/app/backoffice/backoffice.component.html","webpack:///./src/app/backoffice/backoffice.component.scss","webpack:///./src/app/backoffice/backoffice.component.ts","webpack:///./src/app/backoffice/backoffice.module.ts","webpack:///./src/app/backoffice/pages/user-account/user-account-edit/user-account-edit.component.html","webpack:///./src/app/backoffice/pages/user-account/user-account-edit/user-account-edit.component.scss","webpack:///./src/app/backoffice/pages/user-account/user-account-edit/user-account-edit.component.ts","webpack:///./src/app/backoffice/pages/user-account/user-account-list/user-account-list.component.html","webpack:///./src/app/backoffice/pages/user-account/user-account-list/user-account-list.component.scss","webpack:///./src/app/backoffice/pages/user-account/user-account-list/user-account-list.component.ts","webpack:///./src/app/backoffice/services/user.service.ts","webpack:///./src/app/core/components/dialog/confirm-dialog/confirm-dialog.component.html","webpack:///./src/app/core/components/dialog/confirm-dialog/confirm-dialog.component.scss","webpack:///./src/app/core/components/dialog/confirm-dialog/confirm-dialog.component.ts","webpack:///./src/app/core/components/loading/loading.component.html","webpack:///./src/app/core/components/loading/loading.component.scss","webpack:///./src/app/core/components/loading/loading.component.ts","webpack:///./src/app/core/components/speed-dial-fab/speed-dial-fab.animations.ts","webpack:///./src/app/core/components/speed-dial-fab/speed-dial-fab.component.html","webpack:///./src/app/core/components/speed-dial-fab/speed-dial-fab.component.scss","webpack:///./src/app/core/components/speed-dial-fab/speed-dial-fab.component.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/directives/google-place.directive.ts","webpack:///./src/app/core/model/configurationModel.ts","webpack:///./src/app/core/model/model.ts","webpack:///./src/app/core/pipes/center.pipe.ts","webpack:///./src/app/core/pipes/datetime.pipe.ts","webpack:///./src/app/core/pipes/patient.pipe.ts","webpack:///./src/app/core/pipes/user.pipe.ts","webpack:///./src/app/core/pipes/vse.pipe.ts","webpack:///./src/app/core/services/center.service.ts","webpack:///./src/app/core/services/configuration.service.ts","webpack:///./src/app/core/services/google-place.service.ts","webpack:///./src/app/core/services/loading.service.ts","webpack:///./src/app/core/services/patient.service.ts","webpack:///./src/app/core/services/ps-info.service.ts","webpack:///./src/app/core/services/value-set.service.ts","webpack:///./src/app/core/utils/DateUtils.ts","webpack:///./src/app/core/validators/requiredIfOtherFIeldHasValue.ts","webpack:///./src/app/shared/footer/footer.component.html","webpack:///./src/app/shared/footer/footer.component.scss","webpack:///./src/app/shared/footer/footer.component.ts","webpack:///./src/app/shared/header/header.component.html","webpack:///./src/app/shared/header/header.component.scss","webpack:///./src/app/shared/header/header.component.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/teleexpertise/components/request-ask-informations/request-ask-informations.component.html","webpack:///./src/app/teleexpertise/components/request-ask-informations/request-ask-informations.component.scss","webpack:///./src/app/teleexpertise/components/request-ask-informations/request-ask-informations.component.ts","webpack:///./src/app/teleexpertise/components/request-close/request-close.component.html","webpack:///./src/app/teleexpertise/components/request-close/request-close.component.scss","webpack:///./src/app/teleexpertise/components/request-close/request-close.component.ts","webpack:///./src/app/teleexpertise/components/request-comments/request-comments.component.html","webpack:///./src/app/teleexpertise/components/request-comments/request-comments.component.scss","webpack:///./src/app/teleexpertise/components/request-comments/request-comments.component.ts","webpack:///./src/app/teleexpertise/components/request-result/request-result.component.html","webpack:///./src/app/teleexpertise/components/request-result/request-result.component.scss","webpack:///./src/app/teleexpertise/components/request-result/request-result.component.ts","webpack:///./src/app/teleexpertise/components/request-select-population/request-select-population.component.html","webpack:///./src/app/teleexpertise/components/request-select-population/request-select-population.component.scss","webpack:///./src/app/teleexpertise/components/request-select-population/request-select-population.component.ts","webpack:///./src/app/teleexpertise/pages/dashboard/dashboard.component.html","webpack:///./src/app/teleexpertise/pages/dashboard/dashboard.component.scss","webpack:///./src/app/teleexpertise/pages/dashboard/dashboard.component.ts","webpack:///./src/app/teleexpertise/pages/home/home.component.html","webpack:///./src/app/teleexpertise/pages/home/home.component.scss","webpack:///./src/app/teleexpertise/pages/home/home.component.ts","webpack:///./src/app/teleexpertise/pages/patient/patient-create/patient-create.component.html","webpack:///./src/app/teleexpertise/pages/patient/patient-create/patient-create.component.scss","webpack:///./src/app/teleexpertise/pages/patient/patient-create/patient-create.component.ts","webpack:///./src/app/teleexpertise/pages/patient/patient-edit/patient-edit.component.html","webpack:///./src/app/teleexpertise/pages/patient/patient-edit/patient-edit.component.scss","webpack:///./src/app/teleexpertise/pages/patient/patient-edit/patient-edit.component.ts","webpack:///./src/app/teleexpertise/pages/patient/patient-list/patient-list.component.html","webpack:///./src/app/teleexpertise/pages/patient/patient-list/patient-list.component.scss","webpack:///./src/app/teleexpertise/pages/patient/patient-list/patient-list.component.ts","webpack:///./src/app/teleexpertise/pages/publication/publication.component.html","webpack:///./src/app/teleexpertise/pages/publication/publication.component.scss","webpack:///./src/app/teleexpertise/pages/publication/publication.component.ts","webpack:///./src/app/teleexpertise/pages/request/request-create/request-create.component.html","webpack:///./src/app/teleexpertise/pages/request/request-create/request-create.component.scss","webpack:///./src/app/teleexpertise/pages/request/request-create/request-create.component.ts","webpack:///./src/app/teleexpertise/pages/request/request-edit/request-edit.component.html","webpack:///./src/app/teleexpertise/pages/request/request-edit/request-edit.component.scss","webpack:///./src/app/teleexpertise/pages/request/request-edit/request-edit.component.ts","webpack:///./src/app/teleexpertise/pages/request/request-list/request-list.component.html","webpack:///./src/app/teleexpertise/pages/request/request-list/request-list.component.scss","webpack:///./src/app/teleexpertise/pages/request/request-list/request-list.component.ts","webpack:///./src/app/teleexpertise/services/request.service.ts","webpack:///./src/app/teleexpertise/teleexpertise-routing.module.ts","webpack:///./src/app/teleexpertise/teleexpertise.component.html","webpack:///./src/app/teleexpertise/teleexpertise.component.scss","webpack:///./src/app/teleexpertise/teleexpertise.component.ts","webpack:///./src/app/teleexpertise/teleexpertise.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {CommonModule} from '@angular/common';\r\n\r\n\r\nconst routes: Routes = [\r\n  // Fallback when no prior route is matched\r\n  { path: '**', redirectTo: '', pathMatch: 'full' }\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule, RouterModule.forRoot(routes)\r\n  ],\r\n  declarations: [],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n\r\n\r\n\r\n}\r\n","module.exports = \"<router-outlet></router-outlet>\\r\\n<app-loading></app-loading>\\r\\n\"","module.exports = \"\"","import {Component} from '@angular/core';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport * as moment from 'moment' ;\r\nimport {MomentDateAdapter} from '@angular/material-moment-adapter';\r\nimport {DateAdapter} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n\r\n  constructor(private translate: TranslateService, private adapter: DateAdapter<any>) {\r\n    translate.setDefaultLang('en');\r\n    const locale = window.navigator['userLanguage'] || window.navigator.language;\r\n    console.log('Locale format = ' + locale);\r\n    moment.locale(locale);\r\n    adapter.setLocale(locale);\r\n    if (navigator.language) {\r\n      translate.use(navigator.language.split('-')[0]);\r\n    }\r\n    console.log('language = ' + navigator.language);\r\n  }\r\n\r\n}\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AuthModule} from './auth/auth.module';\r\nimport {CoreModule} from './core/core.module';\r\nimport {TeleexpertiseModule} from './teleexpertise/teleexpertise.module';\r\nimport {BackofficeModule} from './backoffice/backoffice.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    CoreModule,\r\n    AuthModule,\r\n    BackofficeModule,\r\n    TeleexpertiseModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {PublicGuard} from 'ngx-auth';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {RegisterComponent} from './register/register.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent,\r\n    canActivate: [PublicGuard]\r\n  },\r\n  {\r\n    path: 'register',\r\n    component: RegisterComponent,\r\n    canActivate: [PublicGuard]\r\n  }\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n","import {NgModule} from '@angular/core';\r\n\r\nimport {AUTH_SERVICE, AuthModule as NgxAuthModule, PROTECTED_FALLBACK_PAGE_URI, PUBLIC_FALLBACK_PAGE_URI} from 'ngx-auth';\r\nimport {TokenStorage} from './services/token-storage.service';\r\nimport {AuthRoutingModule} from './auth-routing.module';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {RegisterComponent} from './register/register.component';\r\nimport {AuthenticationService} from './services/authentication.service';\r\nimport {SharedModule} from '../shared/shared.module';\r\nimport {CoreModule} from '../core/core.module';\r\nimport {ConfirmDialogComponent} from '../core/components/dialog/confirm-dialog/confirm-dialog.component';\r\n\r\nexport function factory(authenticationService: AuthenticationService) {\r\n  return authenticationService;\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    CoreModule,\r\n    NgxAuthModule,\r\n    AuthRoutingModule,\r\n  ],\r\n  providers: [\r\n    TokenStorage,\r\n    AuthenticationService,\r\n    {provide: PROTECTED_FALLBACK_PAGE_URI, useValue: '/'},\r\n    {provide: PUBLIC_FALLBACK_PAGE_URI, useValue: '/login'},\r\n    {\r\n      provide: AUTH_SERVICE,\r\n      deps: [AuthenticationService],\r\n      useFactory: factory\r\n    }\r\n  ],\r\n  declarations: [LoginComponent, RegisterComponent],\r\n  entryComponents: [ConfirmDialogComponent]\r\n})\r\n// @ts-ignore\r\nexport class AuthModule {\r\n}\r\n","module.exports = \"<div fxLayout=\\\"row\\\"\\r\\n     fxLayout.xs=\\\"column\\\"\\r\\n     fxLayout.sm=\\\"column\\\" class=\\\"login\\\">\\r\\n\\r\\n  <div fxFlex.gt-sm=\\\"35%\\\" fxHide.lt-md class=\\\"leftDiv\\\" fxLayoutAlign=\\\"center center\\\" fxLayout=\\\"column\\\">\\r\\n      <h1><b>Bienvenue sur la<br/>plateforme</b> Optim'Care</h1>\\r\\n      <br/><br/>\\r\\n      <img src=\\\"assets/images/login-symbol.svg\\\"/>\\r\\n      <br/><br/>\\r\\n      <div>Aenean lacinia bibendum nulla sed consectetur. Nullam id dolor id nibh ultricies vehicula ut id elit. Maecenas sed diam eget risus varius blandit sit\\r\\n        amet non magna. Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Donec ullamcorper nulla non metus auctor fringilla.\\r\\n      </div>\\r\\n  </div>\\r\\n  <div fxFlex.gt-sm=\\\"65%\\\" *ngIf=\\\"!otp\\\" fxLayoutAlign=\\\"center center\\\" fxLayout=\\\"column\\\">\\r\\n      <img src=\\\"assets/images/logo-color.svg\\\" width=\\\"150px\\\">\\r\\n      <form class=\\\"login-form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n        <mat-card class=\\\"mat-card-primary\\\">\\r\\n          <mat-card-header>\\r\\n            <mat-card-title>{{'login.title' | translate}}</mat-card-title>\\r\\n          </mat-card-header>\\r\\n          <mat-card-content>\\r\\n\\r\\n            <mat-form-field>\\r\\n              <mat-label>\\r\\n                <mat-icon>perm_identity</mat-icon>\\r\\n                Identifiant\\r\\n              </mat-label>\\r\\n              <input matInput formControlName=\\\"login\\\"/>\\r\\n              <mat-error *ngIf=\\\"form.get('login')?.invalid\\\">{{getErrorMessage('login')}}</mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field>\\r\\n              <mat-label>\\r\\n                <mat-icon>lock</mat-icon>\\r\\n                Mot de passe\\r\\n              </mat-label>\\r\\n              <input type=\\\"password\\\" id=\\\"password\\\" matInput autocomplete=\\\"new-password\\\" formControlName=\\\"password\\\"/>\\r\\n              <mat-error *ngIf=\\\"form.get('password')?.invalid\\\">{{getErrorMessage('password')}}</mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n          </mat-card-content>\\r\\n          <mat-card align=\\\"center\\\" *ngIf=\\\"errorMessage\\\" class=\\\"alert\\\">\\r\\n            {{errorMessage}}\\r\\n          </mat-card>\\r\\n          <mat-card-actions align=\\\"center\\\">\\r\\n            <button mat-raised-button color=\\\"accent\\\">{{'login.submitButton' | translate}}</button>\\r\\n            <br/>\\r\\n            <button mat-button>{{'login.passwordForgotten' | translate}}</button>\\r\\n          </mat-card-actions>\\r\\n        </mat-card>\\r\\n      </form>\\r\\n        <h3>{{'login.createAccountTitle' | translate}} </h3>\\r\\n        <button mat-stroked-button color=\\\"accent\\\" routerLink=\\\"/register\\\">{{'login.createAccountButton' | translate}}</button>\\r\\n  </div>\\r\\n  <div fxFlex.gt-sm=\\\"60%\\\" *ngIf=\\\"otp\\\" fxLayoutAlign=\\\"center center\\\" fxLayout=\\\"column\\\">\\r\\n    <form class=\\\"login-form\\\" [formGroup]=\\\"formOtp\\\" (ngSubmit)=\\\"onSubmitOtp()\\\">\\r\\n      <mat-card fxFlex class=\\\"mat-card-text mat-card-accent\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card-title>{{'otp.title' | translate}}</mat-card-title>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content>\\r\\n\\r\\n          {{'otp.message' | translate}}\\r\\n\\r\\n          <mat-form-field>\\r\\n            <mat-label>\\r\\n              <mat-icon>lock</mat-icon>\\r\\n              Code OTP\\r\\n            </mat-label>\\r\\n            <input matInput formControlName=\\\"otp\\\"/>\\r\\n            <mat-error *ngIf=\\\"form.get('otp')?.invalid\\\">{{getErrorMessage('otp')}}</mat-error>\\r\\n          </mat-form-field>\\r\\n\\r\\n        </mat-card-content>\\r\\n        <mat-card align=\\\"center\\\" *ngIf=\\\"errorMessage\\\" class=\\\"alert\\\">\\r\\n          {{errorMessage}}\\r\\n        </mat-card>\\r\\n        <mat-card-actions align=\\\"center\\\">\\r\\n          <button mat-raised-button color=\\\"accent\\\">{{'login.submitButton' | translate}}</button>\\r\\n        </mat-card-actions>\\r\\n      </mat-card>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\nbody {\\n  margin: 0; }\\n.login {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0; }\\nimg {\\n  max-width: 50%; }\\n.leftDiv {\\n  color: white;\\n  text-align: center;\\n  text-align: -webkit-center;\\n  background: #699fd5 url('bg-login.png') no-repeat center center;\\n  background-size: 100% 100%;\\n  padding: 30px; }\\n.leftDiv h1 {\\n    color: white; }\\n.login-form {\\n  margin-bottom: 30px;\\n  margin-top: 50px; }\\n.login-form button {\\n    width: 100%; }\\n/* @2x Images (Pixel Ratio of 1.25+) */\\n@media only screen and (-webkit-min-device-pixel-ratio: 1.25), only screen and (min-device-pixel-ratio: 1.25), only screen and (min-resolution: 1.25dppx) {\\n  .leftDiv {\\n    background-image: url('bg-login@2x.png'); } }\\n/* @3x Images (Pixel Ratio of 2.25+) */\\n@media only screen and (-webkit-min-device-pixel-ratio: 2.25), only screen and (min-device-pixel-ratio: 2.25), only screen and (min-resolution: 2.25dppx) {\\n  .leftDiv {\\n    background-image: url('bg-login@3x.png'); } }\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {AuthenticationService} from '../services/authentication.service';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {Router} from '@angular/router';\r\nimport {TranslateService} from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  form: FormGroup;\r\n  formOtp: FormGroup;\r\n  errorMessage: String;\r\n  otp: boolean = false;\r\n\r\n  constructor(private router: Router, private authenticationService: AuthenticationService, private fb: FormBuilder, private translate: TranslateService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      login: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n    });\r\n\r\n    this.formOtp = this.fb.group({\r\n      otp: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n\r\n  getErrorMessage(field: string) {\r\n    return this.form.get(field).hasError('required') ? this.translate.instant('form.field.required') :\r\n      this.form.get(field).hasError('email') ? this.translate.instant('form.field.emailInvalid') :\r\n        '';\r\n    // return (\r\n    //   (!this.form.get(field).valid && this.form.get(field).touched) ||\r\n    //   (this.form.get(field).untouched && this.formSubmitAttempt)\r\n    // );\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.valid) {\r\n      this.authenticationService.login(this.form.value.login, this.form.value.password).subscribe(\r\n        value => this.router.navigateByUrl('/teleexpertise/requests'),\r\n        error => {\r\n          if (error.error.error_description.indexOf('OTP') !== -1) {\r\n            this.otp = true;\r\n            this.errorMessage = '';\r\n          } else {\r\n            this.errorMessage = error.error.error_description;\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  onSubmitOtp() {\r\n    if (this.formOtp.valid) {\r\n      this.authenticationService.login(this.form.value.login, this.form.value.password, this.formOtp.value.otp).subscribe(\r\n        value => this.router.navigateByUrl('/teleexpertise/dashboard'),\r\n        error => {\r\n          this.errorMessage = error.error.error_description;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"<div fxLayout=\\\"row\\\"\\r\\n     fxLayout.xs=\\\"column\\\"\\r\\n     fxLayout.sm=\\\"column\\\" class=\\\"login\\\">\\r\\n\\r\\n  <div fxFlex.gt-sm=\\\"35%\\\" fxHide.lt-md class=\\\"leftDiv\\\" fxLayoutAlign=\\\"center center\\\" fxLayout=\\\"column\\\">\\r\\n    <h1><b>Bienvenue sur la<br/>plateforme</b> Optim'Care</h1>\\r\\n    <br/><br/>\\r\\n    <img src=\\\"assets/images/login-symbol.svg\\\"/>\\r\\n    <br/><br/>\\r\\n    <div>Aenean lacinia bibendum nulla sed consectetur. Nullam id dolor id nibh ultricies vehicula ut id elit. Maecenas sed diam eget risus varius blandit sit\\r\\n      amet non magna. Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Donec ullamcorper nulla non metus auctor fringilla.\\r\\n    </div>\\r\\n  </div>\\r\\n  <div fxFlex.gt-sm=\\\"65%\\\" *ngIf=\\\"!otp\\\" class=\\\"rightDiv\\\" fxLayoutAlign=\\\"center center\\\" fxLayout=\\\"column\\\">\\r\\n    <img src=\\\"assets/images/logo-color.svg\\\" width=\\\"150px\\\">\\r\\n    <form class=\\\"register-form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n      <mat-card class=\\\"mat-card-primary\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card-title>{{'register.title' | translate}}</mat-card-title>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\">\\r\\n          <mat-radio-group>\\r\\n            &nbsp;&nbsp;<mat-radio-button [value]=true [checked]=\\\"userFrench\\\" (change)=\\\"userFrench=true\\\">{{'register.user.french' | translate}}</mat-radio-button>\\r\\n            &nbsp;&nbsp;<mat-radio-button [value]=false [checked]=\\\"!userFrench\\\" (change)=\\\"userFrench=false\\\">{{'register.user.foreign' | translate}}</mat-radio-button>\\r\\n          </mat-radio-group>\\r\\n          <mat-hint fxFlexAlign=\\\"end\\\">{{'register.user.country' | translate}}</mat-hint>\\r\\n\\r\\n          &nbsp;\\r\\n          <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" *ngIf=\\\"userFrench\\\">\\r\\n            <mat-form-field>\\r\\n              <mat-label>\\r\\n                {{'register.user.identifiant.label' | translate}}*\\r\\n              </mat-label>\\r\\n              <input type=\\\"text\\\" matInput [formControl]=\\\"nationalId\\\" [matAutocomplete]=\\\"auto\\\">\\r\\n              <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\r\\n                <mat-option *ngFor=\\\"let ps of psInfosOptions | async\\\" [value]=\\\"ps.identificationNationalePp\\\" (onSelectionChange)=\\\"selectPs(ps)\\\">\\r\\n                  {{ps.identificationNationalePp+' - '+ ps.nomExercice+' '+ps.prenomExercice}}\\r\\n                  <small>{{ps.infos['column19']}}</small>\\r\\n                </mat-option>\\r\\n              </mat-autocomplete>\\r\\n              <mat-hint>{{'register.user.identifiant.explain' | translate}}</mat-hint>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          &nbsp;\\r\\n          <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\">\\r\\n            <mat-form-field fxFlex.gt-xs=\\\"15%\\\">\\r\\n              <mat-label>\\r\\n                {{'user.title' | translate}}*\\r\\n              </mat-label>\\r\\n              <mat-select formControlName=\\\"title\\\">\\r\\n                <mat-option *ngFor=\\\"let title of titles\\\" [value]=\\\"title\\\">\\r\\n                  {{title | vse | translate}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field fxFlex.gt-xs=\\\"40%\\\">\\r\\n              <mat-label>\\r\\n                <mat-icon>perm_identity</mat-icon>\\r\\n                {{'user.lastName' | translate}}*\\r\\n              </mat-label>\\r\\n              <input matInput formControlName=\\\"lastName\\\"/>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field fxFlex.gt-xs=\\\"45%\\\">\\r\\n              <mat-label>\\r\\n                <mat-icon>perm_identity</mat-icon>\\r\\n                {{'user.firstName' | translate}}*\\r\\n              </mat-label>\\r\\n              <input matInput formControlName=\\\"firstName\\\"/>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\">\\r\\n            <mat-form-field fxFlex.gt-xs=\\\"55%\\\">\\r\\n              <mat-label>\\r\\n                <mat-icon>email</mat-icon>\\r\\n                {{'user.email' | translate}}*\\r\\n              </mat-label>\\r\\n              <input matInput formControlName=\\\"email\\\"/>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field fxFlex.gt-xs=\\\"45%\\\">\\r\\n              <mat-label>\\r\\n                <mat-icon>domain</mat-icon>\\r\\n                {{'user.department' | translate}}\\r\\n              </mat-label>\\r\\n              <input matInput formControlName=\\\"department\\\"/>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <!--------------------  Centre ------------------------------------------>\\r\\n\\r\\n          <div formGroupName=\\\"center\\\">\\r\\n\\r\\n            <mat-expansion-panel hideToggle [disabled]=\\\"true\\\" [expanded]=\\\"centerPanelOpened.value\\\">\\r\\n              <mat-expansion-panel-header fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\">\\r\\n                <mat-form-field fxFlex *ngIf=\\\"!centerPanelOpened.value\\\">\\r\\n                  <mat-label>\\r\\n                    <mat-icon>local_hospital</mat-icon>\\r\\n                    {{'register.center.choice.info' | translate}}*\\r\\n                  </mat-label>\\r\\n                  <mat-select formControlName=\\\"id\\\">\\r\\n                    <mat-option>---</mat-option>\\r\\n                    <mat-option *ngFor=\\\"let center of centers\\\" [value]=\\\"center.id\\\">\\r\\n                      {{center.name}}\\r\\n                    </mat-option>\\r\\n                  </mat-select>\\r\\n                  <mat-hint>{{'register.center.choice.explanation' | translate}}</mat-hint>\\r\\n                </mat-form-field>\\r\\n                <div *ngIf=\\\"centerPanelOpened.value\\\" class=\\\"spacer\\\">{{'register.center.create.explanation' | translate}}</div>\\r\\n                <button mat-mini-fab color=\\\"accent\\\" *ngIf=\\\"!centerPanelOpened.value\\\" matTooltip=\\\"{{'register.center.create.button' | translate}}\\\"\\r\\n                        (click)=\\\"centerPanelOpened.value=true\\\">\\r\\n                  <mat-icon>add</mat-icon>\\r\\n                </button>\\r\\n                <button mat-mini-fab color=\\\"accent\\\" *ngIf=\\\"centerPanelOpened.value\\\"\\r\\n                        (click)=\\\"centerPanelOpened.value=false\\\">\\r\\n                  <mat-icon>remove</mat-icon>\\r\\n                </button>\\r\\n              </mat-expansion-panel-header>\\r\\n\\r\\n              <div formGroupName=\\\"address\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\">\\r\\n                <mat-form-field fxFlex>\\r\\n                  <mat-label>\\r\\n                    <mat-icon>my_location</mat-icon>\\r\\n                    {{'register.address.selection' | translate}}\\r\\n                  </mat-label>\\r\\n                  <input matInput formControlName=\\\"addressComplete\\\"\\r\\n                         [attr.placeholder]=\\\"'register.address.selection.placeholder' | translate\\\"\\r\\n                         autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" autocomplete=\\\"off\\\"\\r\\n                         aria-autocomplete=\\\"list\\\"\\r\\n                         appGooglePlace (setAddress)=\\\"setAddressOnChange($event)\\\"/>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\">\\r\\n                <mat-form-field fxFlex>\\r\\n                  <mat-label>\\r\\n                    <mat-icon>add_box</mat-icon>\\r\\n                    {{'center.name' | translate}}*\\r\\n                  </mat-label>\\r\\n                  <input matInput formControlName=\\\"name\\\"/>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div formGroupName=\\\"address\\\">\\r\\n                <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\">\\r\\n                  <mat-form-field fxFlex.gt-xs=\\\"10%\\\">\\r\\n                    <mat-label>\\r\\n                      {{'address.number' | translate}}\\r\\n                    </mat-label>\\r\\n                    <input matInput formControlName=\\\"number\\\"/>\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field fxFlex>\\r\\n                    <mat-label>\\r\\n                      {{'address.street' | translate}}\\r\\n                    </mat-label>\\r\\n                    <input matInput formControlName=\\\"street\\\"/>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\">\\r\\n                  <mat-form-field fxFlex>\\r\\n                    <mat-label>\\r\\n                      {{'address.additional' | translate}}\\r\\n                    </mat-label>\\r\\n                    <input matInput formControlName=\\\"additional\\\"/>\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field fxFlex>\\r\\n                    <mat-label>\\r\\n                      {{'address.postalBox' | translate}}\\r\\n                    </mat-label>\\r\\n                    <input matInput formControlName=\\\"postalBox\\\"/>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\">\\r\\n                  <mat-form-field fxFlex.gt-xs=\\\"30%\\\">\\r\\n                    <mat-label>\\r\\n                      {{'address.postalCode' | translate}}*\\r\\n                    </mat-label>\\r\\n                    <input matInput formControlName=\\\"postalCode\\\"/>\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field fxFlex>\\r\\n                    <mat-label>\\r\\n                      {{'address.city' | translate}}*\\r\\n                    </mat-label>\\r\\n                    <input matInput formControlName=\\\"city\\\"/>\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field fxFlex.gt-xs=\\\"20%\\\">\\r\\n                    <mat-label>\\r\\n                      {{'address.cedex' | translate}}\\r\\n                    </mat-label>\\r\\n                    <input matInput formControlName=\\\"cedex\\\"/>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\">\\r\\n                  <mat-form-field fxFlex>\\r\\n                    <mat-label>\\r\\n                      {{'address.country' | translate}}*\\r\\n                    </mat-label>\\r\\n                    <input matInput formControlName=\\\"country\\\"/>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n            </mat-expansion-panel>\\r\\n\\r\\n\\r\\n          </div>\\r\\n        </mat-card-content>\\r\\n        <mat-card align=\\\"center\\\" *ngIf=\\\"errorMessage\\\" class=\\\"alert\\\">\\r\\n          {{errorMessage}}\\r\\n        </mat-card>\\r\\n        <mat-card-actions align=\\\"center\\\">\\r\\n          <button mat-raised-button\\r\\n                  routerLink=\\\"/login\\\">{{'button.cancel' | translate}}\\r\\n          </button>\\r\\n          <div fxFlex.gt-xs></div>\\r\\n          <button mat-raised-button color=\\\"accent\\\">{{'button.submit' | translate}}</button>\\r\\n        </mat-card-actions>\\r\\n      </mat-card>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\nbody {\\n  margin: 0; }\\n.login {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0; }\\nimg {\\n  max-width: 50%; }\\n.leftDiv {\\n  color: white;\\n  text-align: center;\\n  text-align: -webkit-center;\\n  background: #699fd5 url('bg-login.png') no-repeat center center;\\n  background-size: 100% 100%;\\n  padding: 30px; }\\n.leftDiv h1 {\\n    color: white; }\\n.rightDiv {\\n  padding: 10px; }\\n.login-form {\\n  margin-bottom: 30px;\\n  margin-top: 50px; }\\n/* @2x Images (Pixel Ratio of 1.25+) */\\n@media only screen and (-webkit-min-device-pixel-ratio: 1.25), only screen and (min-device-pixel-ratio: 1.25), only screen and (min-resolution: 1.25dppx) {\\n  .leftDiv {\\n    background-image: url('bg-login@2x.png'); } }\\n/* @3x Images (Pixel Ratio of 2.25+) */\\n@media only screen and (-webkit-min-device-pixel-ratio: 2.25), only screen and (min-device-pixel-ratio: 2.25), only screen and (min-resolution: 2.25dppx) {\\n  .leftDiv {\\n    background-image: url('bg-login@3x.png'); } }\\n.mat-expansion-panel {\\n  background: transparent !important;\\n  padding: 20px 0; }\\n\"","import {ChangeDetectorRef, Component, OnInit} from '@angular/core';\r\nimport {AbstractControl, FormBuilder, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators} from '@angular/forms';\r\nimport {Router} from '@angular/router';\r\nimport {AuthenticationService} from '../services/authentication.service';\r\nimport {Address, Center, Location, PsInfo, User, ValueSetEntry} from '../../core/model/model';\r\nimport {GooglePlaceService} from '../../core/services/google-place.service';\r\nimport {CenterService} from '../../core/services/center.service';\r\nimport {MatDialog} from '@angular/material';\r\nimport {ConfirmDialogComponent} from '../../core/components/dialog/confirm-dialog/confirm-dialog.component';\r\nimport {Observable} from 'rxjs';\r\nimport {debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\r\nimport {PsInfoService} from '../../core/services/ps-info.service';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {UserService} from '../../backoffice/services/user.service';\r\nimport {LoadingService} from '../../core/services/loading.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  errorMessage: String;\r\n  private place: google.maps.places.PlaceResult;\r\n  centers: Array<Center>;\r\n  titles = [{code: 'DR', vsCode: 'TITLE'},\r\n    {code: 'PR', vsCode: 'TITLE'},\r\n    {code: 'MR', vsCode: 'TITLE'},\r\n    {code: 'MRS', vsCode: 'TITLE'}];\r\n  userFrench = true;\r\n  psInfosOptions: Observable<PsInfo[]>;\r\n  nationalId: AbstractControl;\r\n  centerPanelOpened = {value: false};\r\n\r\n  constructor(private googlePlaceService: GooglePlaceService, private router: Router, private cdr: ChangeDetectorRef, public dialog: MatDialog,\r\n              private authenticationService: AuthenticationService, private fb: FormBuilder, private centerService: CenterService,\r\n              private psInfoService: PsInfoService, private translate: TranslateService, private loadingService: LoadingService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      nationalId: ['', this.nationalIdRequired()],\r\n      title: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      firstName: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      department: [''],\r\n      center: this.fb.group({\r\n        name: ['', this.centerRequired()],\r\n        id: ['', this.centerRequired('id')],\r\n        address: this.fb.group({\r\n          addressComplete: [''],\r\n          number: [''],\r\n          street: [''],\r\n          additional: [''],\r\n          postalBox: [''],\r\n          postalCode: ['', this.centerRequired()],\r\n          city: ['', this.centerRequired()],\r\n          cedex: [''],\r\n          location: this.fb.group({\r\n            lat: '',\r\n            lng: '',\r\n          }),\r\n          country: ['', this.centerRequired()],\r\n        }),\r\n      })\r\n    });\r\n\r\n    this.loadData();\r\n\r\n    this.nationalId = this.form.get('nationalId');\r\n    this.psInfosOptions = this.nationalId.valueChanges\r\n      .pipe(\r\n        debounceTime(200),\r\n        distinctUntilChanged(),\r\n        switchMap(val => {\r\n          return this.loadPsInfos(val || '');\r\n        })\r\n      );\r\n  }\r\n\r\n  centerRequired(name: string = null): ValidatorFn {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n      if ((this.centerPanelOpened.value && name !== 'id') || (!this.centerPanelOpened.value && name === 'id')) {\r\n        return Validators.required(control);\r\n      }\r\n      return null;\r\n    };\r\n  }\r\n\r\n  nationalIdRequired(name: string = null): ValidatorFn {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n      if (this.userFrench) {\r\n        return Validators.required(control);\r\n      }\r\n      return null;\r\n    };\r\n  }\r\n\r\n\r\n  loadPsInfos(val: string): Observable<PsInfo[]> {\r\n    return this.psInfoService.getPsInfosByIdentifiant(val);\r\n  }\r\n\r\n\r\n  loadData() {\r\n    this.centerService.getCenters().subscribe(centers => {\r\n      this.centers = centers;\r\n    });\r\n  }\r\n\r\n  selectPs(ps: PsInfo) {\r\n    if (ps) {\r\n      let center;\r\n      const centerName: string = ps.infos['column19'];\r\n      if (centerName) {\r\n        center = this.centers.find(cen => cen.name.toUpperCase() === centerName.toUpperCase());\r\n      }\r\n      if (center) {\r\n        this.form.patchValue({center: {code: center.code}});\r\n        this.centerPanelOpened.value = false;\r\n      } else {\r\n        const newUser: User = new User();\r\n        if (!!ps.infos['column3']) {\r\n          const title = ps.infos['column3'].toUpperCase() as string;\r\n          newUser.title = new ValueSetEntry();\r\n          newUser.title.code = title;\r\n          newUser.title.vsCode = 'TITLE';\r\n        }\r\n        newUser.nationalId = ps.identificationNationalePp;\r\n        newUser.lastName = ps.nomExercice;\r\n        newUser.firstName = ps.prenomExercice;\r\n        newUser.specialty = ps.infos['column12'];\r\n        newUser.email = ps.infos['column39'];\r\n        newUser.phone = ps.infos['column37'];\r\n        const newCenter: Center = new Center();\r\n        newCenter.name = centerName;\r\n        newCenter.phone = ps.infos['column36'];\r\n        newCenter.fax = ps.infos['column38'];\r\n        newCenter.address = new Address();\r\n        newCenter.address.number = ps.infos['column24'];\r\n        newCenter.address.street = '';\r\n        if (!!ps.infos['column27']) {\r\n          newCenter.address.street = ps.infos['column27'];\r\n        }\r\n        if (!!ps.infos['column28']) {\r\n          newCenter.address.street += ' ' + ps.infos['column28'];\r\n          newCenter.address.street = newCenter.address.street.trim();\r\n        }\r\n        newCenter.address.additional = '';\r\n        if (!!ps.infos['column22']) {\r\n          newCenter.address.additional = ps.infos['column22'];\r\n        }\r\n        if (!!ps.infos['column23']) {\r\n          newCenter.address.additional += ' ' + ps.infos['column23'];\r\n          newCenter.address.additional = newCenter.address.additional.trim();\r\n        }\r\n        newCenter.address.postalBox = ps.infos['column29'];\r\n        if (!!ps.infos['column30'] && ps.infos['column30'].indexOf('CEDEX') !== -1) {\r\n          const cedex = ps.infos['column30'] as string;\r\n          newCenter.address.cedex = cedex.substring(cedex.toUpperCase().indexOf('CEDEX'), cedex.length);\r\n        }\r\n        newCenter.address.postalCode = ps.infos['column31'];\r\n        newCenter.address.city = ps.infos['column33'];\r\n        newCenter.code = ps.infos['column15'] ? ps.infos['column15'] : ps.infos['column17'];\r\n        newCenter.address.country = 'France';\r\n        newUser.center = newCenter;\r\n        this.form.patchValue(newUser);\r\n        this.centerPanelOpened.value = true;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  getErrorMessage(field: string) {\r\n    return this.form.get(field).hasError('required') ? this.translate.instant('form.field.required') :\r\n      this.form.get(field).hasError('email') ? this.translate.instant('form.field.emailInvalid') :\r\n        '';\r\n  }\r\n\r\n  onSubmit() {\r\n    this.validateAllFormFields(this.form);\r\n    if (this.form.valid) {\r\n      const user = this.form.getRawValue();\r\n      this.loadingService.show();\r\n      this.authenticationService.register(user as User).subscribe(\r\n        value => {\r\n          this.loadingService.hide();\r\n          const dialogRef = this.dialog.open(ConfirmDialogComponent, {\r\n            data: {\r\n              title: this.translate.instant('register.confirm.title'),\r\n              content: this.translate.instant('register.confirm.content')\r\n            }\r\n          });\r\n\r\n          dialogRef.afterClosed().subscribe(result => {\r\n            this.router.navigateByUrl('/teleexpertise/dashboard');\r\n          });\r\n        },\r\n        error => {\r\n          this.loadingService.hide();\r\n          this.errorMessage = error.error.message;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  validateAllFormFields(formGroup: FormGroup) {\r\n    Object.keys(formGroup.controls).forEach(field => {\r\n      const control = formGroup.get(field);\r\n      if (control instanceof FormControl) {\r\n        control.updateValueAndValidity({onlySelf: true});\r\n      } else if (control instanceof FormGroup) {\r\n        this.validateAllFormFields(control);\r\n        control.updateValueAndValidity({onlySelf: true});\r\n      }\r\n    });\r\n    formGroup.updateValueAndValidity({onlySelf: true});\r\n  }\r\n\r\n\r\n  setAddressOnChange(place: google.maps.places.PlaceResult) {\r\n    this.place = place;\r\n    if (this.place) {\r\n      // set latitude, longitude and zoom\r\n      const address: Address = new Address();\r\n      address.location = new Location();\r\n      address.location.lat = this.googlePlaceService.latitude(this.place);\r\n      address.location.lng = this.googlePlaceService.longitude(this.place);\r\n      address.number = this.googlePlaceService.street_number(this.place);\r\n      address.street = this.googlePlaceService.street(this.place);\r\n      address.postalCode = this.googlePlaceService.postal_code(this.place);\r\n      address.city = this.googlePlaceService.city(this.place);\r\n      address.postalBox = this.googlePlaceService.post_box(this.place);\r\n      const centerName = this.googlePlaceService.name(this.place);\r\n      address.additional = this.googlePlaceService.floor(this.place);\r\n      address.cedex = this.googlePlaceService.postal_town(this.place);\r\n      address.country = this.googlePlaceService.country(this.place);\r\n      address['adresseComplete'] = null;\r\n      this.form.get('center').get('address').patchValue(address);\r\n      this.form.get('center').get('name').patchValue(centerName);\r\n    } else {\r\n      this.form.get('center').get('address').get('location').setValue(new Location());\r\n    }\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse, HttpHandler, HttpHeaders} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {catchError, map, switchMap, tap} from 'rxjs/operators';\r\nimport {AuthService} from 'ngx-auth';\r\n\r\nimport {TokenStorage} from './token-storage.service';\r\nimport {environment} from '../../../environments/environment';\r\nimport {User} from '../../core/model/model';\r\n\r\ninterface AccessData {\r\n  access_token: string;\r\n  refreshToken: string;\r\n}\r\n\r\n@Injectable()\r\nexport class AuthenticationService implements AuthService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private tokenStorage: TokenStorage\r\n  ) {\r\n  }\r\n\r\n  /**\r\n   * Check, if user already authorized.\r\n   * @description Should return Observable with true or false values\r\n   * @returns {Observable<boolean>}\r\n   * @memberOf AuthService\r\n   */\r\n  public isAuthorized(): Observable<boolean> {\r\n    return this.tokenStorage\r\n      .getAccessToken()\r\n      .pipe(map(token => !!token));\r\n  }\r\n\r\n  /**\r\n   * Get access token\r\n   * @description Should return access token in Observable from e.g.\r\n   * localStorage\r\n   * @returns {Observable<string>}\r\n   */\r\n  public getAccessToken(): Observable<string> {\r\n    return this.tokenStorage.getAccessToken();\r\n  }\r\n\r\n  /**\r\n   * Function, that should perform refresh token verifyTokenRequest\r\n   * @description Should be successfully completed so interceptor\r\n   * can execute pending requests or retry original one\r\n   * @returns {Observable<any>}\r\n   */\r\n  public refreshToken(): Observable<AccessData> {\r\n    return this.tokenStorage\r\n      .getRefreshToken()\r\n      .pipe(\r\n        switchMap((refreshToken: string) =>\r\n          this.http.post(`http://localhost:3000/refresh`, {refreshToken})\r\n        ),\r\n        tap((tokens: AccessData) => this.saveAccessData(tokens)),\r\n        catchError((err) => {\r\n          this.logout();\r\n\r\n          return Observable.throw(err);\r\n        })\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Function, checks response of failed request-list to determine,\r\n   * whether token be refreshed or not.\r\n   * @description Essentialy checks status\r\n   * @param {Response} response\r\n   * @returns {boolean}\r\n   */\r\n  public refreshShouldHappen(response: HttpErrorResponse): boolean {\r\n    return response.status === 401;\r\n  }\r\n\r\n  /**\r\n   * Verify that outgoing request-list is refresh-token,\r\n   * so interceptor won't intercept this request-list\r\n   * @param {string} url\r\n   * @returns {boolean}\r\n   */\r\n  public verifyTokenRequest(url: string): boolean {\r\n    return url.endsWith('/refresh');\r\n  }\r\n\r\n  /**\r\n   * EXTRA AUTH METHODS\r\n   */\r\n\r\n  public login(login: string, password: string, otp: string = null): Observable<any> {\r\n    // return new Observable(subscriber => {\r\n    //   if(login!==\"test\" && password!=\"care33\") {\r\n    //     subscriber.error(\"Identifiant ou mot de passe invalide\")\r\n    //   }  else if(!otp){\r\n    //     subscriber.error(\"OTP\")\r\n    //   } else if(otp && otp!==\"1234\"){\r\n    //     subscriber.error(\"Code otp invalide\")\r\n    //   } else {\r\n    //     subscriber.next({accessToken: '1651561231532', refreshToken:'556161651561651'});\r\n    //     subscriber.complete();\r\n    //   }\r\n    // }).pipe(tap((tokens: AccessData) => this.saveAccessData(tokens)));\r\n\r\n    const params = new URLSearchParams();\r\n    params.append('username', login);\r\n    params.append('password', password);\r\n    params.append('otp', otp);\r\n    params.append('grant_type', 'password');\r\n    params.append('client_id', 'optimis-frontend');\r\n    const headers = new HttpHeaders({\r\n      'Content-type': 'application/x-www-form-urlencoded; charset=utf-8',\r\n      'Authorization': 'Basic ' + btoa('optimis-frontend:secret')\r\n    });\r\n\r\n    return this.http.post(environment.oauth_url + '/oauth/token', params.toString(), {headers: headers})\r\n      .pipe(tap((tokens: AccessData) => this.saveAccessData(tokens)));\r\n  }\r\n\r\n\r\n  /**\r\n   * Logout\r\n   */\r\n  public logout(): void {\r\n    this.tokenStorage.clear();\r\n    location.replace('/teleexpertise/home');\r\n    // location.reload(true);\r\n  }\r\n\r\n  /**\r\n   * Save access data in the storage\r\n   *\r\n   * @private\r\n   * @param {AccessData} data\r\n   */\r\n  private saveAccessData({access_token, refreshToken}: AccessData) {\r\n    this.tokenStorage\r\n      .setAccessToken(access_token)\r\n      .setRefreshToken(refreshToken);\r\n  }\r\n\r\n  register(user: User): Observable<any> {\r\n    return this.http.put(environment.oauth_url + '/userRequest', user);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class TokenStorage {\r\n\r\n  /**\r\n   * Get access token\r\n   * @returns {Observable<string>}\r\n   */\r\n  public getAccessToken(): Observable<string> {\r\n    const token: string = <string>localStorage.getItem('accessToken');\r\n    return of(token);\r\n  }\r\n\r\n  /**\r\n   * Get refresh token\r\n   * @returns {Observable<string>}\r\n   */\r\n  public getRefreshToken(): Observable<string> {\r\n    const token: string = <string>localStorage.getItem('refreshToken');\r\n    return of(token);\r\n  }\r\n\r\n  /**\r\n   * Set access token\r\n   * @returns {TokenStorage}\r\n   */\r\n  public setAccessToken(token: string): TokenStorage {\r\n    localStorage.setItem('accessToken', token);\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Set refresh token\r\n   * @returns {TokenStorage}\r\n   */\r\n  public setRefreshToken(token: string): TokenStorage {\r\n    localStorage.setItem('refreshToken', token);\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Remove tokens\r\n   */\r\n  public clear() {\r\n    localStorage.removeItem('accessToken');\r\n    localStorage.removeItem('refreshToken');\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {CommonModule} from '@angular/common';\r\nimport {BackofficeComponent} from './backoffice.component';\r\nimport {UserAccountListComponent} from './pages/user-account/user-account-list/user-account-list.component';\r\nimport {ProtectedGuard} from 'ngx-auth';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'backoffice', component: BackofficeComponent, canActivate: [ProtectedGuard],\r\n    children: [\r\n      {path: '', redirectTo: 'users', pathMatch: 'full'},\r\n      {path: 'users', component: UserAccountListComponent}\r\n    ]\r\n  },\r\n\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule, RouterModule.forRoot(routes)\r\n  ],\r\n  declarations: [],\r\n  exports: [RouterModule]\r\n})\r\nexport class BackofficeRoutingModule {\r\n}\r\n","module.exports = \"<app-header ></app-header>\\r\\n\\r\\n\\r\\n<mat-sidenav-container id=\\\"container\\\"><!--[style.marginTop.px]=\\\"mobileQuery.matches ? 56 : 0\\\"-->\\r\\n  <mat-sidenav #snav mode='side' opened=\\\"true\\\"><!-- [mode]=\\\"mobileQuery.matches ? 'over' : 'side'\\\">-->\\r\\n    <mat-nav-list>\\r\\n      <a mat-list-item><mat-icon class=\\\"mat-icon material-icons\\\">perm_identity</mat-icon> {{'backoffice.user' | translate}}</a>\\r\\n      <a mat-list-item><mat-icon class=\\\"mat-icon material-icons\\\">accessibility</mat-icon> {{'backoffice.patient' | translate}}</a>\\r\\n      <a mat-list-item><mat-icon class=\\\"mat-icon material-icons\\\">assignment</mat-icon> {{'backoffice.form' | translate}}</a>\\r\\n      <a mat-list-item><mat-icon class=\\\"mat-icon material-icons\\\">list</mat-icon> {{'backoffice.list' | translate}}</a>\\r\\n      <a mat-list-item><mat-icon class=\\\"mat-icon material-icons\\\">settings</mat-icon> {{'backoffice.settings' | translate}}</a>\\r\\n    </mat-nav-list>\\r\\n  </mat-sidenav>\\r\\n\\r\\n  <mat-sidenav-content>\\r\\n    <router-outlet></router-outlet>\\r\\n  </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n\\r\\n\\r\\n<app-footer></app-footer>\\r\\n\"","module.exports = \"\"","import {Component, OnDestroy} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-backoffice',\r\n  templateUrl: './backoffice.component.html',\r\n  styleUrls: ['./backoffice.component.scss']\r\n})\r\nexport class BackofficeComponent implements OnDestroy {\r\n\r\n  // mobileQuery: MediaQueryList;\r\n\r\n  // private _mobileQueryListener: () => void;\r\n\r\n  constructor() {\r\n    // this.mobileQuery = media.matchMedia('(max-width: 600px)');\r\n    // this._mobileQueryListener = () => changeDetectorRef.detectChanges();\r\n    // this.mobileQuery.addListener(this._mobileQueryListener);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // this.mobileQuery.removeListener(this._mobileQueryListener);\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {BackofficeRoutingModule} from './backoffice-routing.module';\r\nimport {UserAccountListComponent} from './pages/user-account/user-account-list/user-account-list.component';\r\nimport {CoreModule} from '../core/core.module';\r\nimport {SharedModule} from '../shared/shared.module';\r\nimport {BackofficeComponent} from './backoffice.component';\r\nimport {UserAccountEditComponent} from './pages/user-account/user-account-edit/user-account-edit.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CoreModule,\r\n    SharedModule,\r\n    BackofficeRoutingModule\r\n  ],\r\n  declarations: [UserAccountEditComponent, UserAccountListComponent, BackofficeComponent]\r\n})\r\nexport class BackofficeModule { }\r\n","module.exports = \"<p>\\r\\n  user-account works!\\r\\n</p>\\r\\n\"","module.exports = \"\"","import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user-account-edit',\r\n  templateUrl: './user-account-edit.component.html',\r\n  styleUrls: ['./user-account-edit.component.scss']\r\n})\r\nexport class UserAccountEditComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<mat-card fxFlex class=\\\"mat-card-text\\\" color=\\\"primary\\\">\\r\\n  <mat-card-header>\\r\\n    <mat-card-title>{{'backoffice.users.title' | translate}}</mat-card-title>\\r\\n    <mat-card-subtitle>\\r\\n      <button mat-mini-fab color=\\\"accent\\\" matTooltip=\\\"{{'backoffice.users.newUserButton' | translate}}\\\">\\r\\n        <mat-icon>add</mat-icon>\\r\\n      </button>\\r\\n    </mat-card-subtitle>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content>\\r\\n    <mat-tab-group>\\r\\n      <mat-tab label=\\\"{{'backoffice.users.tabs.toValidate' | translate}}\\\">\\r\\n        <ng-template matTabContent>\\r\\n          <table mat-table [dataSource]=\\\"dataSourceToValidate\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n            <!-- title Column -->\\r\\n            <ng-container matColumnDef=\\\"title\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef>{{'user.title' | translate}}</th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.title}}</td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- lastName Column -->\\r\\n            <ng-container matColumnDef=\\\"lastName\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> {{'user.lastName' | translate}}</th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.lastName}}</td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- firstName Column -->\\r\\n            <ng-container matColumnDef=\\\"firstName\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> {{'user.firstName' | translate}}</th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.firstName}}</td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- lastName Column -->\\r\\n            <ng-container matColumnDef=\\\"email\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> {{'user.email' | translate}}</th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.email}}</td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- lastName Column -->\\r\\n            <ng-container matColumnDef=\\\"center.name\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> {{'center.name' | translate}}</th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.center.name}}</td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- action Column -->\\r\\n            <ng-container matColumnDef=\\\"actions\\\">\\r\\n              <th width=\\\"20%\\\" mat-header-cell *matHeaderCellDef> {{'actions' | translate}}</th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"right\\\">\\r\\n                <div>\\r\\n                  <button mat-icon-button>\\r\\n                    <mat-icon [attr.aria-label]=\\\"'backoffice.users.actions.edit' | translate\\\">edit</mat-icon>\\r\\n                  </button>\\r\\n                  <button mat-icon-button color=\\\"primary\\\">\\r\\n                    <mat-icon [attr.aria-label]=\\\"'backoffice.users.actions.check' | translate\\\" (click)=\\\"validateRegister(element.id)\\\">check</mat-icon>\\r\\n                  </button>\\r\\n                  <button mat-icon-button color=\\\"accent\\\">\\r\\n                    <mat-icon [attr.aria-label]=\\\"'backoffice.users.actions.cancel' | translate\\\">cancel</mat-icon>\\r\\n                  </button>\\r\\n                </div>\\r\\n              </td>\\r\\n            </ng-container>\\r\\n\\r\\n\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n          </table>\\r\\n          <mat-paginator [length]=\\\"dataSourceToValidate.length\\\"\\r\\n                         [pageSize]=\\\"20\\\">\\r\\n          </mat-paginator>\\r\\n        </ng-template>\\r\\n      </mat-tab>\\r\\n      <mat-tab label=\\\"{{'backoffice.users.tabs.validated' | translate}}\\\">\\r\\n        <ng-template matTabContent>\\r\\n          <table mat-table [dataSource]=\\\"dataSourceValidated\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n            <!-- title Column -->\\r\\n            <ng-container matColumnDef=\\\"title\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef>{{'user.title' | translate}}</th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.title}}</td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- lastName Column -->\\r\\n            <ng-container matColumnDef=\\\"lastName\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> {{'user.lastName' | translate}}</th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.lastName}}</td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- firstName Column -->\\r\\n            <ng-container matColumnDef=\\\"firstName\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> {{'user.firstName' | translate}}</th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.firstName}}</td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- email Column -->\\r\\n            <ng-container matColumnDef=\\\"email\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> {{'user.email' | translate}}</th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.email}}</td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- center Column -->\\r\\n            <ng-container matColumnDef=\\\"center.name\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> {{'center.name' | translate}}</th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.center?element.center.name:''}}</td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- action Column -->\\r\\n            <ng-container matColumnDef=\\\"actions\\\">\\r\\n              <th width=\\\"20%\\\" mat-header-cell *matHeaderCellDef> {{'actions' | translate}}</th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"right\\\">\\r\\n                <div>\\r\\n                  <button mat-icon-button>\\r\\n                    <mat-icon [attr.aria-label]=\\\"'backoffice.users.actions.edit' | translate\\\">edit</mat-icon>\\r\\n                  </button>\\r\\n                  <button mat-icon-button color=\\\"accent\\\">\\r\\n                    <mat-icon [attr.aria-label]=\\\"'backoffice.users.actions.cancel' | translate\\\">cancel</mat-icon>\\r\\n                  </button>\\r\\n                </div>\\r\\n              </td>\\r\\n            </ng-container>\\r\\n\\r\\n\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n          </table>\\r\\n          <mat-paginator [length]=\\\"dataSourceValidated.length\\\"\\r\\n                         [pageSize]=\\\"20\\\">\\r\\n          </mat-paginator>\\r\\n        </ng-template>\\r\\n      </mat-tab>\\r\\n    </mat-tab-group>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","module.exports = \"\"","import {Component, OnInit} from '@angular/core';\r\nimport {UserService} from '../../../services/user.service';\r\nimport {LoadingService} from '../../../../core/services/loading.service';\r\n\r\n@Component({\r\n  selector: 'app-user-account-list',\r\n  templateUrl: './user-account-list.component.html',\r\n  styleUrls: ['./user-account-list.component.scss']\r\n})\r\nexport class UserAccountListComponent implements OnInit {\r\n\r\n\r\n  displayedColumns: string[] = [\r\n    'title',\r\n    'lastName',\r\n    'firstName',\r\n    'email',\r\n    'center.name',\r\n    'actions'];\r\n  dataSourceToValidate = [];\r\n  dataSourceValidated = [];\r\n\r\n  constructor(private userService: UserService, private loadingService: LoadingService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadUsersInPending();\r\n    this.loadUsers();\r\n  }\r\n\r\n  loadUsersInPending() {\r\n    this.userService.getUsersInPending().subscribe(value => {\r\n      this.loadingService.hide();\r\n      this.dataSourceToValidate = value;\r\n    });\r\n    ;\r\n  }\r\n\r\n  loadUsers() {\r\n    this.userService.getUsers().subscribe(value => {\r\n      this.dataSourceValidated = value;\r\n      this.loadingService.hide();\r\n    });\r\n  }\r\n\r\n  validateRegister(id: string) {\r\n    this.loadingService.show();\r\n    this.userService.validateUser(id).subscribe(value => {\r\n        this.loadUsersInPending();\r\n        this.loadUsers();\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Center, User} from '../../core/model/model';\r\nimport {environment} from '../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n\r\n  getUsersInPending(): Observable<Array<User>> {\r\n    return this.http.get(environment.oauth_url + '/userRequest/pending') as Observable<Array<User>>;\r\n  }\r\n\r\n  getUsers(): Observable<Array<User>> {\r\n    return this.http.get(environment.oauth_url + '/user') as Observable<Array<User>>;\r\n  }\r\n\r\n  validateUser(userRequestId: string): Observable<Object> {\r\n    return this.http.get(environment.oauth_url + '/userRequest/validate/' + userRequestId) as Observable<Object>;\r\n  }\r\n}\r\n","module.exports = \"<h2 mat-dialog-title>{{data.title}}</h2>\\r\\n\\r\\n<mat-dialog-content>\\r\\n\\r\\n  {{data.content}}\\r\\n\\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions align=\\\"center\\\">\\r\\n  <button class=\\\"mat-raised-button\\\" (click)=\\\"close()\\\">{{'button.close'| translate}}</button>\\r\\n  <div fxFlex *ngIf=\\\"data.confirm\\\"></div>\\r\\n  <button mat-raised-button color=\\\"accent\\\" *ngIf=\\\"data.confirm\\\" (click)=\\\"confirm()\\\">{{'button.ok'| translate}}</button>\\r\\n</mat-dialog-actions>\\r\\n\"","module.exports = \"\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\r\n\r\nexport interface Data {\r\n  confirm: boolean;\r\n  title: string;\r\n  content: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-confirm-modal',\r\n  templateUrl: './confirm-dialog.component.html',\r\n  styleUrls: ['./confirm-dialog.component.scss']\r\n})\r\nexport class ConfirmDialogComponent implements OnInit {\r\n  data: Data;\r\n\r\n  constructor(private dialogRef: MatDialogRef<ConfirmDialogComponent>, @Inject(MAT_DIALOG_DATA) data : Data) {\r\n    this.data = data;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  confirm() {\r\n    this.dialogRef.close(true);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"black-overlay\\\" *ngIf=\\\"show\\\" [ngStyle]=\\\"{'background-color': bdColor}\\\">\\r\\n  <mat-spinner></mat-spinner>\\r\\n</div>\\r\\n<div class=\\\"loading\\\" *ngIf=\\\"show\\\">\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \".black-overlay {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  z-index: 99999 !important;\\n  background-color: rgba(10, 10, 10, 0.5); }\\n\\n.black-overlay > mat-spinner {\\n  top: 50%;\\n  left: 50%;\\n  margin: 0;\\n  position: absolute; }\\n\"","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {LoadingService} from '../../services/loading.service';\r\nimport {Subscription} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-loading',\r\n  templateUrl: './loading.component.html',\r\n  styleUrls: ['./loading.component.scss']\r\n})\r\nexport class LoadingComponent implements OnInit, OnDestroy {\r\n  show = false;\r\n  private subscription: Subscription;\r\n  constructor(\r\n    private loadingService: LoadingService\r\n  ) { }\r\n  ngOnInit() {\r\n    this.subscription = this.loadingService.loadingSubject\r\n      .subscribe(value => {\r\n        this.show = value;\r\n      });\r\n  }\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","import {\r\n  animate,\r\n  keyframes,\r\n  query,\r\n  stagger,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger\r\n} from '@angular/animations';\r\n\r\nexport const speedDialFabAnimations = [\r\n  trigger('fabToggler', [\r\n    state('inactive', style({\r\n      transform: 'rotate(0deg)'\r\n    })),\r\n    state('active', style({\r\n      transform: 'rotate(225deg)'\r\n    })),\r\n    transition('* <=> *', animate('200ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n  ]),\r\n  trigger('speedDialStagger', [\r\n    transition('* => *', [\r\n\r\n      query(':enter', style({ opacity: 0 }), {optional: true}),\r\n\r\n      query(':enter', stagger('40ms',\r\n        [\r\n          animate('200ms cubic-bezier(0.4, 0.0, 0.2, 1)',\r\n            keyframes(\r\n              [\r\n                style({opacity: 0, transform: 'translateY(10px)'}),\r\n                style({opacity: 1, transform: 'translateY(0)'}),\r\n              ]\r\n            )\r\n          )\r\n        ]\r\n      ), {optional: true}),\r\n\r\n      query(':leave',\r\n        animate('200ms cubic-bezier(0.4, 0.0, 0.2, 1)',\r\n          keyframes([\r\n            style({opacity: 1}),\r\n            style({opacity: 0}),\r\n          ])\r\n        ), {optional: true}\r\n      )\r\n\r\n    ])\r\n  ])\r\n];\r\n","module.exports = \"<div class=\\\"speed-dial-container\\\" [ngClass]=\\\"position\\\">\\r\\n  <div id=\\\"fab-dismiss\\\"\\r\\n       *ngIf=\\\"fabTogglerState==='active'\\\"\\r\\n       (click)=\\\"onToggleFab()\\\">\\r\\n  </div>\\r\\n  <div class='fab-container' [style.flexDirection]=\\\"position===SpeedDialFabPosition.Bottom?'column-reverse':'column'\\\">\\r\\n    <button mat-fab class=\\\"fab-toggler\\\"\\r\\n            (click)=\\\"onToggleFab()\\\">\\r\\n      <i class=\\\"material-icons\\\" [@fabToggler]=\\\"{value: fabTogglerState}\\\">add</i>\\r\\n    </button>\\r\\n    <div [className]=\\\"position===SpeedDialFabPosition.Bottom?'column-reverse':'column'\\\" [@speedDialStagger]=\\\"buttons.length\\\">\\r\\n      <button *ngFor=\\\"let btn of buttons\\\"\\r\\n              mat-mini-fab\\r\\n              matTooltip=\\\"{{btn.tooltip | translate}}\\\"\\r\\n              matTooltipPosition=\\\"left\\\"\\r\\n              class=\\\"fab-secondary\\\"\\r\\n              color=\\\"accent\\\"\\r\\n              (click)=\\\"onClickFab(btn)\\\">\\r\\n        <i class=\\\"material-icons\\\">{{btn.icon}}</i>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".fab-container {\\n  position: relative;\\n  z-index: 100;\\n  display: flex;\\n  align-items: center; }\\n  .fab-container > div.column {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    margin-top: 5px; }\\n  .fab-container > div.column button {\\n      margin-top: 17px; }\\n  .fab-container > div.column-reverse {\\n    display: flex;\\n    flex-direction: column-reverse;\\n    align-items: center;\\n    margin-bottom: 5px; }\\n  .fab-container > div.column-reverse button {\\n      margin-bottom: 17px; }\\n  .fab-toggler {\\n  float: right;\\n  z-index: 100; }\\n  #fab-dismiss {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  z-index: 99; }\\n  .speed-dial-container {\\n  position: fixed;\\n  right: 20px; }\\n  .speed-dial-container.top {\\n  top: 15px; }\\n  .speed-dial-container.bottom {\\n  bottom: 65px; }\\n\"","import {Component, EventEmitter, Input, Output} from '@angular/core';\r\n\r\nimport {speedDialFabAnimations} from './speed-dial-fab.animations';\r\n\r\nexport interface FabButton {\r\n  icon: string;\r\n  tooltip: string;\r\n  clickHandler: () => void;\r\n}\r\n\r\nexport enum SpeedDialFabPosition {\r\n  Top = 'top',\r\n  Bottom = 'bottom',\r\n  Left = 'left',\r\n  Right = 'right'\r\n}\r\n\r\n@Component({\r\n  selector: 'speed-dial-fab',\r\n  templateUrl: './speed-dial-fab.component.html',\r\n  styleUrls: ['./speed-dial-fab.component.scss'],\r\n  animations: speedDialFabAnimations\r\n})\r\nexport class SpeedDialFabComponent {\r\n\r\n  @Input('position') position: string = SpeedDialFabPosition.Top;\r\n  @Input('buttons') fabButtons: FabButton[];\r\n  @Output('fabClick') fabClick = new EventEmitter();\r\n  SpeedDialFabPosition: typeof SpeedDialFabPosition = SpeedDialFabPosition;\r\n\r\n  buttons = [];\r\n  fabTogglerState = 'inactive';\r\n\r\n  constructor() {\r\n  }\r\n\r\n  private showItems() {\r\n    this.fabTogglerState = 'active';\r\n    this.buttons = this.fabButtons;\r\n  }\r\n\r\n  private hideItems() {\r\n    this.fabTogglerState = 'inactive';\r\n    this.buttons = [];\r\n  }\r\n\r\n  public onToggleFab() {\r\n    this.buttons.length ? this.hideItems() : this.showItems();\r\n  }\r\n\r\n  public onClickFab(btn: FabButton) {\r\n    this.hideItems();\r\n    if (btn.clickHandler) {\r\n      btn.clickHandler();\r\n    }\r\n    this.fabClick.emit(btn);\r\n  }\r\n}\r\n","import {NgModule, Optional, SkipSelf} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\r\nimport {RouterModule} from '@angular/router';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\r\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\r\nimport {NgxMaterialTimepickerModule} from 'ngx-material-timepicker';\r\nimport {\r\n  MatAutocompleteModule,\r\n  MatBadgeModule,\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatCheckboxModule, MatChipsModule, MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatExpansionModule,\r\n  MatFormFieldModule, MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule, MatNativeDateModule,\r\n  MatPaginatorModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatSelectModule,\r\n  MatSidenavModule, MatSlideToggleModule,\r\n  MatStepperModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatTooltipModule\r\n} from '@angular/material';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\nimport {GooglePlaceService} from './services/google-place.service';\r\nimport {AgmCoreModule} from '@agm/core';\r\nimport {GooglePlaceDirective} from './directives/google-place.directive';\r\nimport {CenterService} from './services/center.service';\r\nimport {ConfirmDialogComponent} from './components/dialog/confirm-dialog/confirm-dialog.component';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {PsInfoService} from './services/ps-info.service';\r\nimport {LoadingComponent} from './components/loading/loading.component';\r\nimport {LoadingService} from './services/loading.service';\r\nimport {ConfigurationService} from './services/configuration.service';\r\nimport {MatMomentDateModule} from '@angular/material-moment-adapter';\r\nimport { PatientPipe } from './pipes/patient.pipe';\r\nimport { CenterPipe } from './pipes/center.pipe';\r\nimport { UserPipe } from './pipes/user.pipe';\r\nimport { VsePipe } from './pipes/vse.pipe';\r\nimport {ValueSetService} from './services/value-set.service';\r\nimport { DatetimePipe } from './pipes/datetime.pipe';\r\nimport { SpeedDialFabComponent } from './components/speed-dial-fab/speed-dial-fab.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatSidenavModule,\r\n    MatCardModule,\r\n    MatBadgeModule,\r\n    MatTabsModule,\r\n    MatTooltipModule,\r\n    FlexLayoutModule,\r\n    MatExpansionModule,\r\n    MatListModule,\r\n    MatProgressSpinnerModule,\r\n    RouterModule,\r\n    MatDialogModule,\r\n    NgxMaterialTimepickerModule.forRoot(),\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient]\r\n      }\r\n    }),\r\n    AgmCoreModule.forRoot({\r\n      apiKey: 'AIzaSyByAVVURZudjBg5ncvzbjlDOqNz02ZwIw0',\r\n      libraries: ['places']\r\n    }),\r\n  ],\r\n  exports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    CdkTableModule,\r\n    MatRadioModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatSidenavModule,\r\n    MatCardModule,\r\n    MatBadgeModule,\r\n    MatTabsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    MatMomentDateModule,\r\n    MatGridListModule,\r\n    FlexLayoutModule,\r\n    MatExpansionModule,\r\n    MatTooltipModule,\r\n    MatSlideToggleModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatListModule,\r\n    MatStepperModule,\r\n    MatChipsModule,\r\n    MatSelectModule,\r\n    ReactiveFormsModule,\r\n    TranslateModule,\r\n    GooglePlaceDirective,\r\n    MatDialogModule,\r\n    ConfirmDialogComponent,\r\n    FormsModule,\r\n    MatAutocompleteModule,\r\n    LoadingComponent,\r\n    NgxMaterialTimepickerModule,\r\n    CenterPipe,\r\n    PatientPipe,\r\n    UserPipe,\r\n    VsePipe,\r\n    DatetimePipe,\r\n    SpeedDialFabComponent\r\n  ],\r\n  declarations: [\r\n    GooglePlaceDirective, ConfirmDialogComponent, LoadingComponent, PatientPipe, CenterPipe, UserPipe, VsePipe, DatetimePipe, SpeedDialFabComponent\r\n  ],\r\n  providers: [\r\n    GooglePlaceService,\r\n    CenterService,\r\n    PsInfoService,\r\n    LoadingService,\r\n    ConfigurationService,\r\n    ValueSetService\r\n  ]\r\n})\r\nexport class CoreModule {\r\n\r\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\r\n    // Import guard\r\n    if (parentModule) {\r\n      throw new Error(`${parentModule} has already been loaded. Import Core module in the AppModule only.`);\r\n    }\r\n  }\r\n}\r\n\r\n// required for AOT compilation\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http);\r\n}\r\n\r\n","import {AfterContentInit, Directive, ElementRef, EventEmitter, Output} from '@angular/core';\r\nimport {NgControl} from '@angular/forms';\r\nimport {MapsAPILoader} from '@agm/core';\r\n\r\n\r\n@Directive({selector: '[appGooglePlace]'})\r\nexport class GooglePlaceDirective implements AfterContentInit {\r\n  @Output() setAddress: EventEmitter<google.maps.places.PlaceResult> = new EventEmitter();\r\n\r\n\r\n  constructor(private el: ElementRef, private control: NgControl, private mapsAPILoader: MapsAPILoader) {\r\n\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.mapsAPILoader.load().then(() => {\r\n      const autocomplete = new google.maps.places.Autocomplete(this.el.nativeElement, {\r\n        componentRestrictions: {country: 'fr'}\r\n      });\r\n      google.maps.event.addListener(autocomplete, 'place_changed', () => {\r\n\r\n        // get the place result\r\n        let place = autocomplete.getPlace();\r\n\r\n        // verify result\r\n        if (place.geometry === undefined || place.geometry === null) {\r\n          place = null;\r\n        }\r\n        this.control.control.setValue(this.el.nativeElement.value);\r\n        this.setAddress.emit(place);\r\n      });\r\n    });\r\n  }\r\n}\r\n","export const WILD_CARD = '*';\r\n\r\nexport class DrugCommercialName {\r\n  drugCommercialName: string;\r\n  sampling: Array<string>;\r\n}\r\n\r\nexport class Drug {\r\n  drug: string;\r\n  drugCommercialNames: Array<DrugCommercialName>;\r\n}\r\n\r\nexport class RouteOfAdministration {\r\n  roa: string;\r\n  drugs: Array<Drug>;\r\n}\r\n\r\nexport class Disease {\r\n  disease: string;\r\n  roas: Array<RouteOfAdministration>;\r\n}\r\n\r\n\r\nexport const AGE_LT18 = 'LT_18';\r\nexport const AGE_GT18 = 'GT_18';\r\n\r\nexport class Age {\r\n  age: string;\r\n  diseases: Array<Disease>;\r\n}\r\n\r\nexport class ConfigurationIndication {\r\n  indication: string;\r\n  ages: Array<Age>;\r\n}\r\n\r\nexport class Sampling {\r\n  sampling: string;\r\n  indications: Array<ConfigurationIndication>;\r\n}\r\n\r\nexport class RequestConfiguration {\r\n  sampling: Sampling;\r\n}\r\n","export class Identifiable {\r\n  id: string;\r\n  creationDate: Date;\r\n}\r\n\r\nexport class ValueSetEntry {\r\n  code: string;\r\n  vsCode: string;\r\n}\r\n\r\nexport class Address {\r\n  number: string;\r\n  street: string;\r\n  additional: string;\r\n  postalBox: string;\r\n  postalCode: string;\r\n  city: string;\r\n  cedex: string;\r\n  location: Location;\r\n  country: string;\r\n}\r\n\r\nexport class Location {\r\n  lat: number;\r\n  lng: number;\r\n}\r\n\r\nexport enum Profile {\r\n  PHARMACOLOGIST, CLINICIAN\r\n}\r\n\r\nexport class User extends Identifiable {\r\n  title: ValueSetEntry;\r\n  lastName: string;\r\n  firstName: string;\r\n  email: string;\r\n  department: string;\r\n  nationalId: string;\r\n  phone: string;\r\n  profile: Profile;\r\n  center: Center = new Center();\r\n  language: string;\r\n  specialty: string;\r\n  otpRequired: boolean;\r\n}\r\n\r\nexport class Center extends Identifiable {\r\n  name: string;\r\n  code: string;\r\n  contract: boolean;\r\n  phone: string;\r\n  vat: string;\r\n  address: Address = new Address;\r\n  fax: string;\r\n}\r\n\r\nexport class HealthInsurance {\r\n  registrationNumber: string;\r\n  codeOrganisation: string;\r\n}\r\n\r\n\r\nexport enum ConsentType {\r\n  TELE_EXPERTISE = 'TELE_EXPERTISE', TELE_MONITORING = 'TELE_MONITORING'\r\n}\r\n\r\nexport class Consent {\r\n  startDate: Date;\r\n  endDate: Date;\r\n  type: ConsentType;\r\n}\r\n\r\nexport class MedicalInformation {\r\n\r\n  indications: Array<Indication> = [];\r\n  otherIndications: Array<Indication> = [];\r\n  measurements: Array<Measurement> = [];\r\n  consents: Array<Consent> = [];\r\n}\r\n\r\nexport enum BodyMeasurementType {\r\n  WEIGHT, HEIGHT\r\n}\r\n\r\nexport class ValueUnit {\r\n  value: number;\r\n  unit: string;\r\n}\r\n\r\nexport class Measurement extends ValueUnit {\r\n  code: string;\r\n  date: Date;\r\n}\r\n\r\nexport class Patient extends Identifiable {\r\n  externalId: string;\r\n  birthName: string;\r\n  lastName: string;\r\n  firstName: string;\r\n  gender: ValueSetEntry;\r\n  birthDate: string;\r\n  email: string;\r\n  birthRank: number;\r\n  nationalId: string;\r\n  address: Address;\r\n  center: Center;\r\n  healthInsurance: HealthInsurance = new HealthInsurance();\r\n  medicalInformation: MedicalInformation = new MedicalInformation();\r\n}\r\n\r\nexport enum RequestStatus {\r\n  NEW, WAITING_TREATMENT, WAITING_VALIDATION, INFORMATION_REQUEST, VALIDATED, PRE_VALIDATED, CLOSED, ACCEPTED\r\n}\r\n\r\nexport class RequestContext {\r\n  reason: string;\r\n  additionalInformation: string;\r\n}\r\n\r\nexport class Treatment {\r\n  drug: ValueSetEntry;\r\n  drugCommercialName: ValueSetEntry;\r\n  numberOfTakes: number;\r\n  doses: Array<ValueUnit>;\r\n  administrationRoute: ValueSetEntry;\r\n  coTreatments: Array<ValueSetEntry>;\r\n}\r\n\r\n\r\nexport class Sample {\r\n  intervalDoseSampling: ValueUnit;\r\n  realSamplingTime: string;\r\n  optimalSamplingTime: number;\r\n  concentration: ValueUnit;\r\n}\r\n\r\nexport class BloodSample {\r\n  samplingDate: Date;\r\n  drugIntakeTime: string;\r\n  assayMethod: ValueSetEntry;\r\n  samples: Array<Sample>;\r\n}\r\n\r\nexport class FormattedDate {\r\n  date: string;\r\n  format: string;\r\n}\r\n\r\nexport class Indication extends ValueSetEntry {\r\n  date: string;\r\n  comment: string;\r\n  mucoviscidose: boolean;\r\n}\r\n\r\nexport class Comment {\r\n  date: Date;\r\n  content: string;\r\n  author: User;\r\n}\r\n\r\nexport class ValeurUnite {\r\n  valeur: number;\r\n  unite: string;\r\n}\r\n\r\nexport class ValeursUnite {\r\n  valeurs: Array<number>;\r\n  unite: string;\r\n}\r\n\r\nexport class Cinetic {\r\n  C0: ValeurUnite;\r\n  Cmax: ValeurUnite;\r\n  Freq: number;\r\n  AUC: ValeurUnite;\r\n  TargetAUC: ValeursUnite;\r\n  Poso: ValeursUnite;\r\n  dose: ValeurUnite;\r\n  AUCReg: ValeurUnite;\r\n}\r\n\r\nexport class RequestResult {\r\n  best: boolean;\r\n  selected: boolean;\r\n  log: string;\r\n  grf: string;\r\n  date: Date;\r\n  txt: string;\r\n  cinetic: Cinetic = new Cinetic();\r\n}\r\n\r\nexport class RequestResultGroup {\r\n  bloodSample: BloodSample;\r\n  treatment: Treatment;\r\n  date: Date;\r\n  results: Array<RequestResult>;\r\n}\r\n\r\nexport class Request extends Identifiable {\r\n  code: number;\r\n  status: RequestStatus;\r\n  requester: User;\r\n  prescriber: string;\r\n  center: Center;\r\n  patient: Patient;\r\n  context: RequestContext;\r\n  indication: Indication;\r\n  otherIndications: Array<Indication>;\r\n  treatment: Treatment;\r\n  bloodSample: BloodSample;\r\n  comments: Array<Comment>;\r\n  resultGroups: Array<RequestResultGroup>;\r\n}\r\n\r\nexport class PsInfo extends Identifiable {\r\n\r\n  identificationNationalePp: string;\r\n  nomExercice: string;\r\n  prenomExercice: string;\r\n  infos: Map<String, String>;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport {Center} from '../model/model';\r\n\r\n@Pipe({\r\n  name: 'center'\r\n})\r\nexport class CenterPipe implements PipeTransform {\r\n\r\n  transform(center: Center, args?: any): any {\r\n    return center.name;\r\n  }\r\n\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment' ;\r\n\r\n@Pipe({\r\n  name: 'datetime'\r\n})\r\nexport class DatetimePipe implements PipeTransform {\r\n\r\n  transform(value: any, args?: any): any {\r\n    if (args && args.length > 1) {\r\n      return moment(value).format(args[0]);\r\n    }\r\n    return moment(value).format('L');\r\n  }\r\n\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport {Patient} from '../model/model';\r\nimport * as moment from 'moment';\r\n\r\n\r\n/**\r\n * Display patient\r\n * use arg 'birthDate' to display birthdate\r\n */\r\n@Pipe({\r\n  name: 'patient'\r\n})\r\nexport class PatientPipe implements PipeTransform {\r\n\r\n  transform(patient: Patient, args?: any): string {\r\n    if (!patient) {\r\n      return '';\r\n    }\r\n    const result = patient.birthName + (patient.lastName ? ' (' + patient.lastName + ')' : '') + ' ' + patient.firstName;\r\n    if (args && args.indexOf('birthDate') > -1) {\r\n      return result + ' (' + moment(patient.birthDate).format('L') + ')';\r\n    }\r\n    return result;\r\n  }\r\n\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport {Patient, User} from '../model/model';\r\n\r\n@Pipe({\r\n  name: 'user'\r\n})\r\nexport class UserPipe implements PipeTransform {\r\n\r\n  transform(user: User, args?: any): string {\r\n    if (!user) {\r\n      return '';\r\n    }\r\n    return (user.title ? user.title.code : '') + ' ' + user.lastName + ' ' + user.firstName;\r\n  }\r\n\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport {User, ValueSetEntry} from '../model/model';\r\n\r\n@Pipe({\r\n  name: 'vse'\r\n})\r\nexport class VsePipe implements PipeTransform {\r\n\r\n  transform(vse: ValueSetEntry, args?: any): string {\r\n    if (!vse) {\r\n      return '';\r\n    }\r\n    return vse.vsCode + '.' + vse.code;\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Center} from '../model/model';\r\nimport {environment} from '../../../environments/environment';\r\n\r\nconst REQUESTS_DATA: any[] = [\r\n    {\r\n      name: 'Centre hospitalier universitaire de Limoges',\r\n      code: '001',\r\n      address: {\r\n        number: '2',\r\n        street: 'Avenue Martin Luther King',\r\n        additional: '',\r\n        postalBox: '',\r\n        postalCode: '87000',\r\n        city: 'Limoges',\r\n        cedex: '',\r\n        country: 'FRANCE'\r\n      }\r\n    }\r\n  ]\r\n;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CenterService {\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n\r\n  getCenters(): Observable<Array<Center>> {\r\n    return this.http.get(environment.oauth_url + '/center') as Observable<Array<Center>>;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Center} from '../model/model';\r\nimport {environment} from '../../../environments/environment';\r\nimport {RequestConfiguration} from '../model/configurationModel';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfigurationService {\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n\r\n  getRequestConfiguration(): Observable<RequestConfiguration> {\r\n    return this.http.get(environment.api_url + '/requestConfiguration') as Observable<RequestConfiguration>;\r\n  }\r\n}\r\n\r\n","import {Injectable} from '@angular/core';\r\n\r\n@Injectable()\r\nexport class GooglePlaceService {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  private find(address_components: google.maps.GeocoderAddressComponent[], query: string, val: string = null) {\r\n\r\n    for (let attr of address_components) {\r\n      for (let type of attr.types) {\r\n        if (type === query) {\r\n          return val ? attr[val] : attr;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  latitude(place: google.maps.places.PlaceResult) {\r\n    return place.geometry.location.lat();\r\n  }\r\n\r\n  longitude(place: google.maps.places.PlaceResult) {\r\n    return place.geometry.location.lng();\r\n  }\r\n\r\n  street_number(place: google.maps.places.PlaceResult) {\r\n    return this.find(place.address_components, 'street_number', 'long_name');\r\n  }\r\n\r\n  street(place: google.maps.places.PlaceResult) {\r\n    return this.find(place.address_components, 'route', 'long_name');\r\n  }\r\n\r\n  city(place: google.maps.places.PlaceResult) {\r\n    return this.find(place.address_components, 'locality', 'long_name');\r\n  }\r\n\r\n  state(place: google.maps.places.PlaceResult) {\r\n    return this.find(place.address_components, 'administrative_area_level_1', 'long_name');\r\n  }\r\n\r\n  postal_code(place: google.maps.places.PlaceResult) {\r\n    return this.find(place.address_components, 'postal_code', 'long_name');\r\n  }\r\n\r\n  country(place: google.maps.places.PlaceResult) {\r\n    return this.find(place.address_components, 'country', 'long_name');\r\n  }\r\n\r\n  administrative_area_level_2(place: google.maps.places.PlaceResult) {\r\n    return this.find(place.address_components, 'administrative_area_level_2', 'long_name');\r\n  }\r\n\r\n\r\n  // MORE NOT USED YET /////\r\n  intersection(place: google.maps.places.PlaceResult) {\r\n    return this.find(place.address_components, 'intersection');\r\n  }\r\n\r\n  political(place: google.maps.places.PlaceResult) {\r\n    return this.find(place.address_components, 'political');\r\n  }\r\n\r\n  administrative_area_level_3(place: google.maps.places.PlaceResult) {\r\n    return this.find(place.address_components, 'administrative_area_level_3');\r\n  }\r\n\r\n  administrative_area_level_4(place: google.maps.places.PlaceResult) {\r\n    return this.find(place.address_components, 'administrative_area_level_4');\r\n  }\r\n\r\n  administrative_area_level_5(place: google.maps.places.PlaceResult) {\r\n    return this.find(place.address_components, 'administrative_area_level_5');\r\n  }\r\n\r\n  colloquial_area(place: google.maps.places.PlaceResult) {\r\n    return this.find(place.address_components, 'colloquial_area');\r\n  }\r\n\r\n  ward(place: google.maps.places.PlaceResult) {\r\n    return this.find(place.address_components, 'ward');\r\n  }\r\n\r\n  sublocality(place: google.maps.places.PlaceResult) {\r\n    return this.find(place.address_components, 'sublocality');\r\n  }\r\n\r\n  sublocality_level_1(place: google.maps.places.PlaceResult) {\r\n    return this.find(place.address_components, 'sublocality_level_1');\r\n  }\r\n\r\n  sublocality_level_2(place: google.maps.places.PlaceResult) {\r\n    return this.find(place.address_components, 'sublocality_level_2');\r\n  }\r\n\r\n  sublocality_level_3(place: google.maps.places.PlaceResult) {\r\n    return this.find(place.address_components, 'sublocality_level_3');\r\n  }\r\n\r\n  sublocality_level_4(place: google.maps.places.PlaceResult) {\r\n    return this.find(place.address_components, 'sublocality_level_4');\r\n  }\r\n\r\n  sublocality_level_5(place: google.maps.places.PlaceResult) {\r\n    return this.find(place.address_components, 'sublocality_level_5');\r\n  }\r\n\r\n  neighborhood(place: google.maps.places.PlaceResult) {\r\n    return this.find(place.address_components, 'neighborhood');\r\n  }\r\n\r\n  premise(place: google.maps.places.PlaceResult) {\r\n    return this.find(place.address_components, 'premise');\r\n  }\r\n\r\n  subpremise(place: google.maps.places.PlaceResult) {\r\n    return this.find(place.address_components, 'subpremise');\r\n  }\r\n\r\n  natural_feature(place: google.maps.places.PlaceResult) {\r\n    return this.find(place.address_components, 'natural_feature');\r\n  }\r\n\r\n  airport(place: google.maps.places.PlaceResult) {\r\n    return this.find(place.address_components, 'airport');\r\n  }\r\n\r\n  park(place: google.maps.places.PlaceResult) {\r\n    return this.find(place.address_components, 'park');\r\n  }\r\n\r\n  point_of_interest(place: google.maps.places.PlaceResult) {\r\n    return this.find(place.address_components, 'point_of_interest');\r\n  }\r\n\r\n  floor(place: google.maps.places.PlaceResult) {\r\n    return this.find(place.address_components, 'floor');\r\n  }\r\n\r\n  establishment(place: google.maps.places.PlaceResult) {\r\n    return this.find(place.address_components, 'establishment');\r\n  }\r\n\r\n  parking(place: google.maps.places.PlaceResult) {\r\n    return this.find(place.address_components, 'parking');\r\n  }\r\n\r\n  name(place: google.maps.places.PlaceResult) {\r\n    return place.name;\r\n  }\r\n\r\n  post_box(place: google.maps.places.PlaceResult) {\r\n    return this.find(place.address_components, 'post_box');\r\n  }\r\n\r\n  postal_town(place: google.maps.places.PlaceResult) {\r\n    return this.find(place.address_components, 'postal_town');\r\n  }\r\n\r\n  room(place: google.maps.places.PlaceResult) {\r\n    return this.find(place.address_components, 'room');\r\n  }\r\n\r\n  bus_station(place: google.maps.places.PlaceResult) {\r\n    return this.find(place.address_components, 'bus_station');\r\n  }\r\n\r\n  train_station(place: google.maps.places.PlaceResult) {\r\n    return this.find(place.address_components, 'train_station');\r\n  }\r\n\r\n  transit_station(place: google.maps.places.PlaceResult) {\r\n    return this.find(place.address_components, 'transit_station');\r\n  }\r\n\r\n\r\n}\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {Subject} from 'rxjs';\r\n\r\n@Injectable()\r\nexport class LoadingService {\r\n  loadingSubject = new Subject<boolean>();\r\n\r\n  constructor() {\r\n  }\r\n\r\n  show() {\r\n    this.loadingSubject.next(true);\r\n  }\r\n\r\n  hide() {\r\n    this.loadingSubject.next(false);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {Patient, User} from '../model/model';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {environment} from '../../../environments/environment';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PatientService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n\r\n  getPatientsForCenter(centerId: string): Observable<Array<Patient>> {\r\n    return this.http.get(environment.api_url + '/patient/byCenter/' + centerId) as Observable<Array<Patient>>;\r\n  }\r\n\r\n  getPatients(): Observable<Array<Patient>> {\r\n    return this.http.get(environment.api_url + '/patient') as Observable<Array<Patient>>;\r\n  }\r\n\r\n  save(patient: Patient): Observable<any> {\r\n    return this.http.put(environment.api_url + '/patient', patient);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {PsInfo} from '../model/model';\r\nimport {environment} from '../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PsInfoService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n\r\n  getPsInfosByIdentifiant(id: string): Observable<Array<PsInfo>> {\r\n    return this.http.get(environment.oauth_url + '/psInfo/startsWith/' + id) as Observable<Array<PsInfo>>;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {ValueSetEntry} from '../model/model';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ValueSetService {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  values = {\r\n    INDICATION: ['T_HEART', 'T_HEPATIC', 'T_LUNG', 'T_KIDNEY', 'T_MARROW', 'A_LUPUS', 'A_OTHER'],\r\n\r\n    DRUG: [\r\n      'NONE',\r\n      'CICLOSPORIN',\r\n      'CORTICOSTEROIDS',\r\n      'EVEROLIMUS',\r\n      'MMF',\r\n      'SIROLIMUS',\r\n      'TACROLIMUS'],\r\n\r\n\r\n    DRUG_COMMERCIAL_NAME: [\r\n      'ADVAGRAF',\r\n      'CELLCEPT',\r\n      'ENVARUS',\r\n      'NEORAL',\r\n      'PROGRAF',\r\n      'OTHER'],\r\n\r\n\r\n    NUMBER_OF_TAKES: [\r\n      '0.25',\r\n      '0.33',\r\n      '0.5',\r\n      '1',\r\n      '2',\r\n      '3',\r\n      '4'],\r\n\r\n\r\n    ROUTE_OF_ADMINISTRATION: [\r\n      'DRINKABLE',\r\n      'TABLET',\r\n      'TABLET_DISPERSIBLE',\r\n      'IV'],\r\n\r\n    ASSAY_METHOD: [\r\n      'ACMIA',\r\n      'CMIA',\r\n      'EMIT',\r\n      'HPLC',\r\n      'FPIA',\r\n      'KIT_ROCHE',\r\n      'LCMS',\r\n      'MEIA',\r\n      'MPA_T'],\r\n\r\n    REASON: [\r\n      'Reason1',\r\n      'Reason2',\r\n      'Reason3',\r\n      'Reason4',\r\n      'Reason5',\r\n      'Reason6',\r\n      'Reason7',\r\n      'Reason8']\r\n\r\n\r\n  };\r\n\r\n\r\n  drugCommercialNamesTreatmentsLink = [\r\n    {drug: 'CICLOSPORIN', drugCommercialNames: ['NEORAL', 'OTHER']},\r\n    {drug: 'MMF', drugCommercialNames: ['CELLCEPT', 'OTHER']},\r\n    {\r\n      drug: 'TACROLIMUS',\r\n      drugCommercialNames: ['ADVAGRAF', 'ENVARUS', 'PROGRAF', 'OTHER']\r\n    }\r\n  ];\r\n\r\n  getValues(vsCode: string): Observable<Array<ValueSetEntry>> {\r\n    const values = this.values[vsCode] as Array<any>;\r\n    const result = values.map(value => {\r\n      return {code: value, vsCode: vsCode} as ValueSetEntry;\r\n    });\r\n    return new Observable(subscriber => {\r\n      subscriber.next(result);\r\n      subscriber.complete();\r\n    });\r\n  }\r\n\r\n  getDrugCommercialNames(code: string): Observable<Array<ValueSetEntry>> {\r\n    const link = this.drugCommercialNamesTreatmentsLink.find(link => link.drug === code);\r\n    let result = [];\r\n    if (link) {\r\n\r\n\r\n      result = link.drugCommercialNames.map(value => {\r\n        return {code: value, vsCode: 'DRUG_COMMERCIAL_NAME'} as ValueSetEntry;\r\n      });\r\n\r\n    }\r\n    return new Observable(subscriber => {\r\n      subscriber.next(result);\r\n      subscriber.complete();\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","export function getTimeFormat() {\r\n  const is24 = ((new Date(2014, 1, 1, 15, 0, 0, 0)).toLocaleTimeString().indexOf('15') > -1);\r\n  return is24 ? 24 : 12;\r\n}\r\n","import {AbstractControl, FormControl, Validators} from '@angular/forms';\r\n\r\n\r\nexport function RequiredIfOtherControlHasValue(otherControl: AbstractControl, otherControlValue: string) {\r\n  let thisControl: FormControl;\r\n\r\n  return function matchOtherValidate(control: FormControl) {\r\n\r\n\r\n    // Initializing the validator.\r\n    if (!thisControl) {\r\n      thisControl = control;\r\n      if (!otherControl) {\r\n        throw new Error('requiredIfOtherFieldHasValue(): other control is not found');\r\n      }\r\n      otherControl.valueChanges.subscribe(() => {\r\n        thisControl.updateValueAndValidity();\r\n      });\r\n    }\r\n\r\n    if (!otherControl) {\r\n      return null;\r\n    }\r\n\r\n    if (otherControl.value === otherControlValue) {\r\n      return Validators.required(control);\r\n    }\r\n\r\n    return null;\r\n\r\n  };\r\n}\r\nexport function RequiredIfOtherFieldHasValue(otherControlName: string, otherControlValue: string) {\r\n\r\n  let thisControl: FormControl;\r\n  let otherControl: FormControl;\r\n\r\n  return function matchOtherValidate(control: FormControl) {\r\n\r\n    if (!control.parent) {\r\n      return null;\r\n    }\r\n\r\n    // Initializing the validator.\r\n    if (!thisControl) {\r\n      thisControl = control;\r\n      otherControl = control.parent.get(otherControlName) as FormControl;\r\n      if (!otherControl) {\r\n        throw new Error('requiredIfOtherFieldHasValue(): other control is not found in parent group');\r\n      }\r\n      otherControl.valueChanges.subscribe(() => {\r\n        thisControl.updateValueAndValidity();\r\n      });\r\n    }\r\n\r\n    if (!otherControl) {\r\n      return null;\r\n    }\r\n\r\n    if (otherControl.value === otherControlValue) {\r\n      return Validators.required(control);\r\n    }\r\n\r\n    return null;\r\n\r\n  };\r\n\r\n}\r\n","module.exports = \"<mat-toolbar class=\\\"footer\\\" color=\\\"primary\\\" fxLayoutAlign=\\\"space-around center\\\"><span class=\\\"mat-caption\\\">© Optim'Care {{year}} </span></mat-toolbar>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n  year: number = new Date().getFullYear();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<mat-toolbar color=\\\"primary\\\" class=\\\"mat-elevation-z3\\\">\\r\\n\\r\\n\\r\\n  <img alt=\\\"Home\\\" src=\\\"assets/images/logo.svg\\\" title=\\\"Home\\\" height=\\\"42\\\"  routerLink=\\\"/teleexpertise/presentation\\\">\\r\\n\\r\\n  <span class=\\\"spacer\\\"></span>\\r\\n  <button mat-button [routerLinkActive]=\\\"['active']\\\" routerLink=\\\"/teleexpertise/home\\\">\\r\\n    <mat-icon class=\\\"mr-1\\\" matTooltip=\\\"{{'header.home' | translate}}\\\">home</mat-icon>\\r\\n    <span class=\\\"label\\\">{{'header.home' | translate}}</span>\\r\\n  </button>\\r\\n  <button mat-button [routerLinkActive]=\\\"['active']\\\" routerLink=\\\"/teleexpertise/patients\\\">\\r\\n    <mat-icon class=\\\"mr-1\\\" matTooltip=\\\"{{'header.patient' | translate}}\\\">accessibility</mat-icon>\\r\\n    <span class=\\\"label\\\">{{'header.patient' | translate}}</span>\\r\\n  </button>\\r\\n  <button mat-button [routerLinkActive]=\\\"['active']\\\" routerLink=\\\"/teleexpertise/requests\\\">\\r\\n    <mat-icon class=\\\"mr-1\\\" matTooltip=\\\"{{'header.teleexpertise' | translate}}\\\">assignment_ind</mat-icon>\\r\\n    <span class=\\\"label\\\">{{'header.teleexpertise' | translate}}</span>\\r\\n  </button>\\r\\n  <button mat-button [routerLinkActive]=\\\"['active']\\\" routerLink=\\\"/teleexpertise/dashboard\\\">\\r\\n    <mat-icon class=\\\"mr-1\\\" matTooltip=\\\"{{'header.telemonitoring' | translate}}\\\">important_devices</mat-icon>\\r\\n    <span class=\\\"label\\\">{{'header.telemonitoring' | translate}}</span>\\r\\n  </button>\\r\\n  <button mat-button [routerLinkActive]=\\\"['active']\\\" routerLink=\\\"/backoffice/users\\\">\\r\\n    <mat-icon class=\\\"mr-1\\\" matTooltip=\\\"{{'header.backoffice' | translate}}\\\">build</mat-icon>\\r\\n    <span class=\\\"label\\\">{{'header.backoffice' | translate}}</span>\\r\\n  </button>\\r\\n\\r\\n  <span class=\\\"spacer\\\"></span>\\r\\n  <button *ngIf=\\\"isAuthorized | async\\\" mat-icon-button (click)=\\\"navOpen(0)\\\" matTooltip=\\\"{{'header.notification' | translate}}\\\">\\r\\n    <mat-icon matBadge=\\\"3\\\" matBadgeColor=\\\"warn\\\">notification_important</mat-icon>\\r\\n  </button>\\r\\n  <button *ngIf=\\\"isAuthorized | async\\\" mat-icon-button (click)=\\\"navOpen(1)\\\" matTooltip=\\\"{{'header.alert' | translate}}\\\">\\r\\n    <mat-icon matBadge=\\\"6\\\" matBadgeColor=\\\"warn\\\">warning</mat-icon>\\r\\n  </button>\\r\\n  <button *ngIf=\\\"isAuthorized | async\\\" mat-icon-button class=\\\"mat-mini-fab mat-accent\\\" [matMenuTriggerFor]=\\\"profile\\\">\\r\\n\\r\\n    <mat-icon class=\\\"mat-icon material-icons\\\">perm_identity</mat-icon>\\r\\n  </button>\\r\\n  <mat-menu #profile=\\\"matMenu\\\" overlapTrigger=\\\"false\\\"  class=\\\"accent-menu\\\">\\r\\n    <button mat-menu-item>\\r\\n      <mat-icon>assignment_ind</mat-icon>\\r\\n      <span>{{'header.myProfile' | translate}}</span>\\r\\n    </button>\\r\\n    <button mat-menu-item (click)=\\\"logout()\\\">\\r\\n      <mat-icon>exit_to_app</mat-icon>\\r\\n      <span>{{'header.logout' | translate}}</span>\\r\\n    </button>\\r\\n  </mat-menu>\\r\\n</mat-toolbar>\\r\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\nbody {\\n  margin: 0; }\\n::ng-deep .accent-menu {\\n  background-color: #ea4873; }\\n::ng-deep .accent-menu .mat-menu-item {\\n    color: white; }\\n::ng-deep .accent-menu .mat-menu-item .mat-icon {\\n      color: white; }\\n.mat-toolbar > button {\\n  margin: 0 4px; }\\n.mat-toolbar > button:last-of-type {\\n  margin-left: 10px; }\\n@media screen and (max-width: 599px) {\\n  .mat-toolbar img {\\n    height: 32px; }\\n  .mat-toolbar > button:not(.mat-mini-fab) {\\n    padding: 0 4px;\\n    min-width: 30px;\\n    width: 30px; }\\n    .mat-toolbar > button:not(.mat-mini-fab) .label {\\n      display: none; } }\\n@media md {\\n  .mat-toolbar > button {\\n    padding: 0 10px; }\\n    .mat-toolbar > button .label {\\n      display: none; } }\\n\"","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {AuthenticationService} from '../../auth/services/authentication.service';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  @Output() navToggle = new EventEmitter<number>();\r\n\r\n  isAuthorized: Observable<boolean>;\r\n\r\n\r\n  constructor(private authenticationService: AuthenticationService) {\r\n    this.isAuthorized = authenticationService.isAuthorized();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n  navOpen(index:number) {\r\n    this.navToggle.emit(index);\r\n  }\r\n\r\n  logout() {\r\n    this.authenticationService.logout();\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {RouterModule} from '@angular/router';\r\nimport {FooterComponent} from './footer/footer.component';\r\nimport {HeaderComponent} from './header/header.component';\r\nimport {CoreModule} from '../core/core.module';\r\nimport {AuthModule} from '../auth/auth.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CoreModule,\r\n    AuthModule,\r\n    RouterModule,\r\n  ],\r\n  exports : [\r\n    FooterComponent,\r\n    HeaderComponent,\r\n  ],\r\n  declarations: [FooterComponent, HeaderComponent]\r\n})\r\nexport class SharedModule { }\r\n","module.exports = \"<h2 mat-dialog-title>{{'request.askForInformation.title' | translate}}</h2>\\r\\n\\r\\n<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <mat-dialog-content>\\r\\n    <mat-form-field>\\r\\n      <textarea matInput rows=\\\"5\\\" placeholder=\\\"{{'request.askForInformation.comment' | translate}}\\\" formControlName=\\\"comment\\\"></textarea>\\r\\n    </mat-form-field>\\r\\n  </mat-dialog-content>\\r\\n  <mat-card align=\\\"center\\\" *ngIf=\\\"errorMessage\\\" class=\\\"alert\\\">\\r\\n    {{errorMessage}}\\r\\n  </mat-card>\\r\\n  <mat-dialog-actions align=\\\"center\\\">\\r\\n    <button mat-raised-button (click)=\\\"close()\\\">{{'button.cancel'| translate}}</button>\\r\\n    <div fxFlex></div>\\r\\n    <button mat-raised-button color=\\\"accent\\\">{{'button.submit'| translate}}</button>\\r\\n  </mat-dialog-actions>\\r\\n</form>\\r\\n\"","module.exports = \"\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {RequestService} from '../../services/request.service';\r\nimport {Comment} from '../../../core/model/model';\r\nimport {LoadingService} from '../../../core/services/loading.service';\r\n\r\nexport interface Data {\r\n  requestId: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-request-ask-informations',\r\n  templateUrl: './request-ask-informations.component.html',\r\n  styleUrls: ['./request-ask-informations.component.scss']\r\n})\r\nexport class RequestAskInformationsComponent implements OnInit {\r\n  private data: Data;\r\n  form: FormGroup;\r\n  errorMessage: string;\r\n\r\n  constructor(public dialog: MatDialog, private fb: FormBuilder, private loadingService: LoadingService,\r\n              private translateService: TranslateService, private requestService: RequestService,\r\n              private dialogRef: MatDialogRef<RequestAskInformationsComponent>,\r\n              @Inject(MAT_DIALOG_DATA) data: Data) {\r\n    this.data = data;\r\n    this.form = this.fb.group({\r\n      comment: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.valid) {\r\n      const comment = new Comment();\r\n      comment.date = new Date();\r\n      comment.content = this.form.get('comment').value;\r\n      this.loadingService.show();\r\n      this.requestService.askForInformation(this.data.requestId, comment).subscribe(\r\n        result => {\r\n          this.loadingService.hide();\r\n          this.dialogRef.close(result);\r\n        },\r\n        error => {\r\n          this.loadingService.hide();\r\n          this.errorMessage = error.error.description;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"<h2 mat-dialog-title>{{'request.close.title' | translate}}</h2>\\r\\n\\r\\n<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <mat-dialog-content>\\r\\n    <mat-form-field>\\r\\n      <textarea matInput rows=\\\"5\\\" placeholder=\\\"{{'request.close.comment' | translate}}\\\" formControlName=\\\"comment\\\"></textarea>\\r\\n    </mat-form-field>\\r\\n  </mat-dialog-content>\\r\\n  <mat-card align=\\\"center\\\" *ngIf=\\\"errorMessage\\\" class=\\\"alert\\\">\\r\\n    {{errorMessage}}\\r\\n  </mat-card>\\r\\n  <mat-dialog-actions align=\\\"center\\\">\\r\\n    <button mat-raised-button (click)=\\\"close()\\\">{{'button.cancel'| translate}}</button>\\r\\n    <div fxFlex></div>\\r\\n    <button mat-raised-button color=\\\"accent\\\">{{'button.submit'| translate}}</button>\\r\\n  </mat-dialog-actions>\\r\\n</form>\\r\\n\"","module.exports = \"\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {RequestService} from '../../services/request.service';\r\nimport {Comment} from '../../../core/model/model';\r\nimport {LoadingService} from '../../../core/services/loading.service';\r\n\r\nexport interface Data {\r\n  requestId: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-request-close',\r\n  templateUrl: './request-close.component.html',\r\n  styleUrls: ['./request-close.component.scss']\r\n})\r\nexport class RequestCloseComponent implements OnInit {\r\n  private data: Data;\r\n  form: FormGroup;\r\n  errorMessage: string;\r\n\r\n  constructor(public dialog: MatDialog, private fb: FormBuilder, private loadingService: LoadingService,\r\n              private translateService: TranslateService, private requestService: RequestService,\r\n              private dialogRef: MatDialogRef<RequestCloseComponent>,\r\n              @Inject(MAT_DIALOG_DATA) data: Data) {\r\n    this.data = data;\r\n    this.form = this.fb.group({\r\n      comment: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.valid) {\r\n      const comment = new Comment();\r\n      comment.date = new Date();\r\n      comment.content = this.form.get('comment').value;\r\n      this.loadingService.show();\r\n      this.requestService.closeRequest(this.data.requestId, comment).subscribe(\r\n        result => {\r\n          this.loadingService.hide();\r\n          this.dialogRef.close(result);\r\n        },\r\n        error => {\r\n          this.loadingService.hide();\r\n          this.errorMessage = error.error.description;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"<h2 mat-dialog-title>{{'request.comments.title' | translate}}</h2>\\r\\n\\r\\n  <mat-dialog-content fxLayout=\\\"column\\\">\\r\\n    <mat-card fxFlex class=\\\"small\\\" *ngFor=\\\"let comment of comments.reverse()\\\">\\r\\n      <mat-card-header class=\\\"inline\\\">\\r\\n        <mat-card-title>{{comment.author | user}}</mat-card-title>\\r\\n        <mat-card-subtitle>{{comment.date | datetime}}</mat-card-subtitle>\\r\\n      </mat-card-header>\\r\\n      <mat-card-content>\\r\\n        <pre>{{comment.content}}</pre>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n  </mat-dialog-content>\\r\\n\\r\\n  <mat-dialog-actions align=\\\"center\\\">\\r\\n    <button mat-raised-button (click)=\\\"close()\\\">{{'button.close'| translate}}</button>\\r\\n  </mat-dialog-actions>\\r\\n\"","module.exports = \"\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material';\r\nimport {LoadingService} from '../../../core/services/loading.service';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {RequestService} from '../../services/request.service';\r\nimport {Comment} from '../../../core/model/model';\r\n\r\nexport interface Data {\r\n  comments: Array<Comment>;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-request-comments',\r\n  templateUrl: './request-comments.component.html',\r\n  styleUrls: ['./request-comments.component.scss']\r\n})\r\nexport class RequestCommentsComponent implements OnInit {\r\n  private data: Data;\r\n  comments: Array<Comment> = [];\r\n  form: FormGroup;\r\n  errorMessage: string;\r\n\r\n  constructor(public dialog: MatDialog, private translateService: TranslateService,\r\n              private dialogRef: MatDialogRef<RequestCommentsComponent>,\r\n              @Inject(MAT_DIALOG_DATA) data: Data) {\r\n    this.data = data;\r\n    if (data.comments) {\r\n      this.comments = data.comments;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"<div class=\\\"form\\\">\\r\\n  <div>\\r\\n    <div>{{'request.result.delai' | translate}}</div>\\r\\n    <div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n  <div>\\r\\n    <div>{{'request.result.tauxResiduel' | translate}}</div>\\r\\n    <div>\\r\\n      {{result.cinetic.C0.valeur}} {{result.cinetic.C0.unite}}\\r\\n    </div>\\r\\n  </div>\\r\\n  <div>\\r\\n    <div>{{'request.result.cMax' | translate}}</div>\\r\\n    <div>\\r\\n      {{result.cinetic.Cmax.valeur}} {{result.cinetic.Cmax.unite}}\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".form > div {\\n  display: flex;\\n  flex-direction: row !important;\\n  justify-content: space-between; }\\n  .form > div > div {\\n    flex: 1 1 100%;\\n    box-sizing: border-box;\\n    align-items: center;\\n    max-width: 80%; }\\n\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {RequestResult, RequestResultGroup} from '../../../core/model/model';\r\n\r\n@Component({\r\n  selector: 'app-request-result',\r\n  templateUrl: './request-result.component.html',\r\n  styleUrls: ['./request-result.component.scss']\r\n})\r\nexport class RequestResultComponent implements OnInit {\r\n\r\n  @Input('resultGroup') resultGroup: RequestResultGroup;\r\n  result: RequestResult = new RequestResult();\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.resultGroup) {\r\n      this.result = this.resultGroup.results.find(result => result.selected);\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"<h2 mat-dialog-title>{{'request.selectPopulation.title' | translate}}</h2>\\r\\n\\r\\n<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <mat-dialog-content>\\r\\n    <mat-form-field>\\r\\n      <mat-select placeholder=\\\"{{'request.selectPopulation.populations' | translate}}\\\" formControlName=\\\"populations\\\" multiple>\\r\\n        <mat-option *ngFor=\\\"let population of populations\\\" [value]=\\\"population.population\\\">{{population.population}}</mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n  </mat-dialog-content>\\r\\n  <mat-card align=\\\"center\\\" *ngIf=\\\"errorMessage\\\" class=\\\"alert\\\">\\r\\n    {{errorMessage}}\\r\\n  </mat-card>\\r\\n  <mat-dialog-actions align=\\\"center\\\">\\r\\n    <button class=\\\"mat-raised-button\\\" (click)=\\\"close()\\\">{{'button.cancel'| translate}}</button>\\r\\n    <div fxFlex></div>\\r\\n    <button mat-raised-button color=\\\"accent\\\">{{'button.submit'| translate}}</button>\\r\\n  </mat-dialog-actions>\\r\\n</form>\\r\\n\"","module.exports = \"\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material';\r\nimport {LoadingService} from '../../../core/services/loading.service';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {RequestService} from '../../services/request.service';\r\nimport {Comment} from '../../../core/model/model';\r\nimport {Data} from '../request-ask-informations/request-ask-informations.component';\r\n\r\nexport interface Data {\r\n  requestId: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-request-select-population',\r\n  templateUrl: './request-select-population.component.html',\r\n  styleUrls: ['./request-select-population.component.scss']\r\n})\r\nexport class RequestSelectPopulationComponent implements OnInit {\r\n  private data: Data;\r\n  form: FormGroup;\r\n  errorMessage: string;\r\n  populations: any;\r\n\r\n  constructor(public dialog: MatDialog, private fb: FormBuilder, private loadingService: LoadingService,\r\n              private translateService: TranslateService, private requestService: RequestService,\r\n              private dialogRef: MatDialogRef<RequestSelectPopulationComponent>,\r\n              @Inject(MAT_DIALOG_DATA) data: Data) {\r\n    this.data = data;\r\n    this.form = this.fb.group({\r\n      populations: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.requestService.getPopulations(this.data.requestId).subscribe(\r\n      data => this.populations = data\r\n    );\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.valid) {\r\n\r\n      this.loadingService.show();\r\n      const populations = this.form.get('populations').value;\r\n      this.requestService.launchCalculation(this.data.requestId, populations).subscribe(\r\n        result => {\r\n          this.loadingService.hide();\r\n          this.dialogRef.close(result);\r\n        },\r\n        error => {\r\n          this.loadingService.hide();\r\n          this.errorMessage = error.error.description;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"<p>\\r\\n  Dashboard works!\\r\\n</p>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<mat-card class=\\\"header\\\">\\r\\n  <mat-card-content>\\r\\n    <div fxLayout=\\\"row\\\">\\r\\n      <div class=\\\"homeImgDiv\\\"><img src=\\\"assets/images/home.svg\\\">\\r\\n        <img src=\\\"assets/images/home-transparent.svg\\\"\\r\\n             class=\\\"transparent-round\\\">\\r\\n      </div>\\r\\n      <div class=\\\"padding\\\">\\r\\n        <h1>Transplant Optim'Care</h1>\\r\\n        {{'presentation.welcome' | translate}}\\r\\n      </div>\\r\\n    </div>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n<div fxLayout=\\\"row\\\"\\r\\n     fxLayout.xs=\\\"column\\\"\\r\\n     fxLayout.sm=\\\"column\\\">\\r\\n\\r\\n  <mat-card fxFlex.gt-sm=\\\"40%\\\" class=\\\"mat-card-primary\\\">\\r\\n    <mat-card-header>\\r\\n      <mat-card-title>{{'presentation.publicationTitle' | translate}}</mat-card-title>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n      <div fxLayout=\\\"column\\\"\\r\\n           fxFlex class=\\\"contentResp\\\">\\r\\n\\r\\n        <mat-card fxFlex class=\\\"small\\\">\\r\\n          <mat-card-header class=\\\"inline\\\">\\r\\n            <mat-card-title>Pr Martin</mat-card-title>\\r\\n            <mat-card-subtitle>12/10/2018</mat-card-subtitle>\\r\\n          </mat-card-header>\\r\\n          <mat-card-content>\\r\\n            <p>\\r\\n              Lorem ipsum dolor sit amet, dico brute vel ad. Admodum antiopam interesset pri no, no vim admodum\\r\\n              vituperatoribus. Qui quis placerat iudicabit id, pri eu munere dolore. Sea no nominavi instructior, an est\\r\\n              probo\\r\\n              quaeque denique. Per scripta ceteros blandit et, mel accumsan albucius molestiae ut.\\r\\n\\r\\n            </p>\\r\\n          </mat-card-content>\\r\\n          <mat-card-actions align=\\\"right\\\">\\r\\n            <button mat-button color=\\\"accent\\\"><mat-icon>add</mat-icon>{{'commom.learnMore' | translate}}</button>\\r\\n          </mat-card-actions>\\r\\n        </mat-card>\\r\\n        <mat-card fxFlex class=\\\"small\\\">\\r\\n          <mat-card-header class=\\\"inline\\\">\\r\\n            <mat-card-title>Pr Martin</mat-card-title>\\r\\n            <mat-card-subtitle>12/10/2018</mat-card-subtitle>\\r\\n          </mat-card-header>\\r\\n          <mat-card-content>\\r\\n            <p>\\r\\n              Lorem ipsum dolor sit amet, dico brute vel ad. Admodum antiopam interesset pri no, no vim admodum\\r\\n              vituperatoribus. Qui quis placerat iudicabit id, pri eu munere dolore. Sea no nominavi instructior, an est\\r\\n              probo\\r\\n              quaeque denique. Per scripta ceteros blandit et, mel accumsan albucius molestiae ut.\\r\\n\\r\\n            </p>\\r\\n          </mat-card-content>\\r\\n          <mat-card-actions align=\\\"right\\\">\\r\\n            <button mat-button color=\\\"accent\\\"><mat-icon>add</mat-icon>{{'commom.learnMore' | translate}}</button>\\r\\n          </mat-card-actions>\\r\\n        </mat-card>\\r\\n      </div>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n  <mat-card fxFlex class=\\\"mat-card-primary\\\">\\r\\n    <mat-card-header>\\r\\n      <mat-card-title>{{'presentation.toolsTitle' | translate}}</mat-card-title>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n      <mat-card>\\r\\n        <mat-card-title-group >\\r\\n          <img src=\\\"assets/images/chart.svg\\\" class=\\\"padding\\\">\\r\\n          <div class=\\\"padding\\\">\\r\\n            <mat-card-title><h2>Outils pour le calcul de la posologie optimale</h2></mat-card-title>\\r\\n            <mat-card-subtitle>Lorem ipsum dolor sit amet, dico brute vel ad. Admodum antiopam interesset pri no, no vim admodum\\r\\n              vituperatoribus. Qui quis placerat iudicabit id, pri eu munere dolore. Sea no nominavi instructior, an est\\r\\n              probo\\r\\n              quaeque denique. Per scripta ceteros blandit et, mel accumsan albucius molestiae ut.\\r\\n            </mat-card-subtitle>\\r\\n            <div fxLayoutAlign=\\\"end\\\">\\r\\n              <button mat-button color=\\\"accent\\\"><mat-icon>add</mat-icon>En savoir plus</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-card-title-group>\\r\\n\\r\\n      </mat-card>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\nbody {\\n  margin: 0; }\\n.header {\\n  padding: 0px !important; }\\n.header .mat-card-content {\\n    padding: 0px; }\\n.header .padding {\\n    padding: 20px; }\\n.header img {\\n    z-index: 1;\\n    height: 147px;\\n    -o-object-fit: contain;\\n       object-fit: contain; }\\n.header .transparent-round {\\n    position: absolute;\\n    top: -20px;\\n    bottom: -50px;\\n    z-index: 2;\\n    -o-object-fit: contain;\\n    object-fit: contain;\\n    left: -60px;\\n    height: 240px; }\\n.header .homeImgDiv {\\n    background-image: linear-gradient(298deg, #699fd5, #f05b89); }\\n.tools {\\n  padding: 0 10px 0 10px; }\\n.tools .mat-card-content {\\n    padding: 0px; }\\n.tools .padding {\\n    padding-left: 20px; }\\n.tools img {\\n    z-index: 1;\\n    height: 125px; }\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-presentation',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<form class=\\\"patient-form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <mat-card class=\\\"mat-card-primary\\\">\\r\\n    <mat-card-header>\\r\\n      <mat-card-title>{{'patient.create.title' | translate}}</mat-card-title>\\r\\n    </mat-card-header>\\r\\n    <div [ngClass]=\\\"isModal ? 'mat-dialog-content':''\\\">\\r\\n      <mat-card-content fxLayout=\\\"column\\\">\\r\\n        <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\">\\r\\n          <mat-form-field>\\r\\n            <mat-label>\\r\\n              {{'patient.birthName' | translate}}*\\r\\n            </mat-label>\\r\\n            <input matInput formControlName=\\\"birthName\\\"/>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field>\\r\\n            <mat-label>\\r\\n              {{'patient.lastName' | translate}}\\r\\n            </mat-label>\\r\\n            <input matInput formControlName=\\\"lastName\\\"/>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field>\\r\\n            <mat-label>\\r\\n              {{'patient.firstName' | translate}}*\\r\\n            </mat-label>\\r\\n            <input matInput formControlName=\\\"firstName\\\"/>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\">\\r\\n          <mat-form-field>\\r\\n            <input matInput [matDatepicker]=\\\"picker\\\" formControlName=\\\"birthDate\\\" placeholder=\\\"{{'patient.birthDate' | translate}}*\\\">\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #picker></mat-datepicker>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field>\\r\\n            <mat-label>\\r\\n              {{'patient.rank' | translate}}*\\r\\n            </mat-label>\\r\\n            <input type=\\\"number\\\" matInput formControlName=\\\"birthRank\\\" min=\\\"1\\\"/>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field>\\r\\n            <mat-label>\\r\\n              {{'patient.gender' | translate}}*\\r\\n            </mat-label>\\r\\n            <mat-select formControlName=\\\"gender\\\">\\r\\n              <mat-option *ngFor=\\\"let gender of genders\\\" [value]=\\\"gender\\\">\\r\\n                {{gender | vse | translate}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\">\\r\\n          <mat-form-field>\\r\\n            <input matInput formControlName=\\\"externalId\\\" placeholder=\\\"{{'patient.externalId' | translate}}\\\"/>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field>\\r\\n            <input type=\\\"number\\\" matInput formControlName=\\\"nationalId\\\" placeholder=\\\"{{'patient.nationalId' | translate}}*\\\"/>\\r\\n            <mat-error *ngIf=\\\"form.get('nationalId').invalid\\\">{{'patient.error.nationalId' | translate}}</mat-error>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field>\\r\\n            <input matInput formControlName=\\\"email\\\" placeholder=\\\"{{'patient.email' | translate}}\\\"/>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" formGroupName=\\\"healthInsurance\\\">\\r\\n          <mat-form-field>\\r\\n            <input matInput formControlName=\\\"codeOrganisation\\\" placeholder=\\\"{{'patient.healthInsurance.codeOrganisation' | translate}}\\\"/>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <!--------------------  Centre ------------------------------------------>\\r\\n\\r\\n\\r\\n        <mat-form-field fxFlex>\\r\\n          <mat-label>\\r\\n            <mat-icon>local_hospital</mat-icon>\\r\\n            {{'patient.center.choice.info' | translate}}*\\r\\n          </mat-label>\\r\\n          <mat-select formControlName=\\\"center\\\">\\r\\n            <mat-option *ngIf=\\\"centers.length>1\\\">---</mat-option>\\r\\n            <mat-option *ngFor=\\\"let center of centers\\\" [value]=\\\"center\\\">\\r\\n              {{center.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-card>\\r\\n          <mat-card-header>\\r\\n            <mat-card-title>{{'address.title' | translate}}</mat-card-title>\\r\\n          </mat-card-header>\\r\\n          <mat-card-content>\\r\\n            <div formGroupName=\\\"address\\\" fxLayout.xs=\\\"column\\\">\\r\\n              <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\">\\r\\n                <mat-form-field fxFlex>\\r\\n                  <mat-label>\\r\\n                    <mat-icon>my_location</mat-icon>\\r\\n                    {{'patient.address.selection' | translate}}\\r\\n                  </mat-label>\\r\\n                  <input matInput formControlName=\\\"addressComplete\\\"\\r\\n                         [attr.placeholder]=\\\"'patient.address.selection.placeholder' | translate\\\"\\r\\n                         autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" autocomplete=\\\"off\\\"\\r\\n                         aria-autocomplete=\\\"list\\\"\\r\\n                         appGooglePlace (setAddress)=\\\"setAddressOnChange($event)\\\"/>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\">\\r\\n                <mat-form-field fxFlex.gt-xs=\\\"10%\\\">\\r\\n                  <mat-label>\\r\\n                    {{'address.number' | translate}}\\r\\n                  </mat-label>\\r\\n                  <input matInput formControlName=\\\"number\\\"/>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field fxFlex>\\r\\n                  <mat-label>\\r\\n                    {{'address.street' | translate}}\\r\\n                  </mat-label>\\r\\n                  <input matInput formControlName=\\\"street\\\"/>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\">\\r\\n                <mat-form-field fxFlex>\\r\\n                  <mat-label>\\r\\n                    {{'address.additional' | translate}}\\r\\n                  </mat-label>\\r\\n                  <input matInput formControlName=\\\"additional\\\"/>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\">\\r\\n                <mat-form-field fxFlex.gt-xs=\\\"30%\\\">\\r\\n                  <mat-label>\\r\\n                    {{'address.postalCode' | translate}}*\\r\\n                  </mat-label>\\r\\n                  <input matInput formControlName=\\\"postalCode\\\"/>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field fxFlex>\\r\\n                  <mat-label>\\r\\n                    {{'address.city' | translate}}*\\r\\n                  </mat-label>\\r\\n                  <input matInput formControlName=\\\"city\\\"/>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\">\\r\\n                <mat-form-field fxFlex>\\r\\n                  <mat-label>\\r\\n                    {{'address.country' | translate}}*\\r\\n                  </mat-label>\\r\\n                  <input matInput formControlName=\\\"country\\\"/>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n            </div>\\r\\n          </mat-card-content>\\r\\n        </mat-card>\\r\\n\\r\\n\\r\\n        <mat-card formGroupName=\\\"medicalInformation\\\">\\r\\n          <mat-card-header>\\r\\n            <mat-card-title>{{'patient.medicalInformation.title' | translate}}</mat-card-title>\\r\\n          </mat-card-header>\\r\\n          <mat-card-content formArrayName=\\\"indications\\\">\\r\\n            <div *ngFor=\\\"let item of indicationsCtrl.controls; let i = index;\\\" [formGroupName]=\\\"i\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxFlexFill=\\\"center\\\">\\r\\n              <mat-form-field>\\r\\n                <mat-select placeholder=\\\"{{'patient.medicalInformation.indication.name' | translate}}*\\\" formControlName=\\\"code\\\">\\r\\n                  <mat-option *ngFor=\\\"let indication of indications\\\" [value]=\\\"indication.code\\\">\\r\\n                    {{indication | vse | translate}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field>\\r\\n                <input matInput placeholder=\\\"{{'patient.medicalInformation.indication.comment' | translate}}\\\" formControlName=\\\"comment\\\"/>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field>\\r\\n                <input matInput [matDatepicker]=\\\"picker\\\" formControlName=\\\"date\\\" [placeholder]=\\\"getIndicationDateLabel(i)\\\"/>\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker #picker></mat-datepicker>\\r\\n              </mat-form-field>\\r\\n              <button mat-mini-fab matTooltip=\\\"{{'patient.medicalInformation.removeButton' | translate}}\\\" (click)=\\\"removeIndication(i)\\\">\\r\\n                <mat-icon>delete</mat-icon>\\r\\n              </button>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\">\\r\\n              <button mat-mini-fab matTooltip=\\\"{{'patient.medicalInformation.addButton' | translate}}\\\" (click)=\\\"addIndication()\\\">\\r\\n                <mat-icon>note_add</mat-icon>\\r\\n              </button>\\r\\n            </div>\\r\\n          </mat-card-content>\\r\\n        </mat-card>\\r\\n        <br/>\\r\\n        <div class=\\\"mat-form-field\\\">\\r\\n          <mat-checkbox formControlName=\\\"consentTeleexpertise\\\">\\r\\n            {{'patient.consent.teleexpertise' | translate}}\\r\\n          </mat-checkbox>\\r\\n        </div>\\r\\n        <div class=\\\"mat-form-field\\\">\\r\\n          <mat-checkbox formControlName=\\\"consentTelemonitoring\\\">\\r\\n            {{'patient.consent.Telemonitoring' | translate}}\\r\\n          </mat-checkbox>\\r\\n        </div>\\r\\n\\r\\n\\r\\n      </mat-card-content>\\r\\n    </div>\\r\\n    <mat-card align=\\\"center\\\" *ngIf=\\\"errorMessage\\\" class=\\\"alert\\\">\\r\\n      {{errorMessage}}\\r\\n    </mat-card>\\r\\n    <mat-card-actions align=\\\"center\\\">\\r\\n      <button mat-raised-button (click)=\\\"cancel()\\\">{{'button.cancel' | translate}}\\r\\n      </button>\\r\\n      <div fxFlex.gt-xs></div>\\r\\n      <button mat-raised-button color=\\\"accent\\\">{{'button.submit' | translate}}</button>\\r\\n    </mat-card-actions>\\r\\n  </mat-card>\\r\\n</form>\\r\\n\"","module.exports = \"\"","import {ChangeDetectorRef, Component, Inject, OnInit, Optional} from '@angular/core';\r\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {Address, Center, Consent, ConsentType, Location, Patient, ValueSetEntry} from '../../../../core/model/model';\r\nimport {GooglePlaceService} from '../../../../core/services/google-place.service';\r\nimport {Router} from '@angular/router';\r\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material';\r\nimport {CenterService} from '../../../../core/services/center.service';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {LoadingService} from '../../../../core/services/loading.service';\r\nimport {ConfirmDialogComponent} from '../../../../core/components/dialog/confirm-dialog/confirm-dialog.component';\r\nimport {PatientService} from '../../../../core/services/patient.service';\r\nimport {Location as LocationBrowser} from '@angular/common';\r\nimport {RequiredIfOtherFieldHasValue} from '../../../../core/validators/requiredIfOtherFIeldHasValue';\r\nimport {ValueSetService} from '../../../../core/services/value-set.service';\r\nimport {merge} from 'lodash';\r\n\r\n@Component({\r\n  selector: 'app-patient-create',\r\n  templateUrl: './patient-create.component.html',\r\n  styleUrls: ['./patient-create.component.scss']\r\n})\r\nexport class PatientCreateComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  errorMessage: String;\r\n  private place: google.maps.places.PlaceResult;\r\n  centers: Array<Center> = [];\r\n  genders = [{code: 'M', vsCode: 'GENDER'}, {code: 'F', vsCode: 'GENDER'}, {code: 'O', vsCode: 'GENDER'}];\r\n  private data: any;\r\n  isModal: boolean;\r\n  private patient = new Patient();\r\n  indicationsCtrl: FormArray;\r\n  indications: Array<ValueSetEntry>;\r\n\r\n  constructor(private googlePlaceService: GooglePlaceService, private router: Router, private cdr: ChangeDetectorRef, public dialog: MatDialog,\r\n              private fb: FormBuilder, private centerService: CenterService, private patientService: PatientService,\r\n              private translateService: TranslateService, private loadingService: LoadingService,\r\n              @Optional() private dialogRef: MatDialogRef<PatientCreateComponent>,\r\n              @Optional() @Inject(MAT_DIALOG_DATA) data = null, private location: LocationBrowser, private valueSetService: ValueSetService) {\r\n    this.data = data;\r\n    if (this.dialogRef && this.data) {\r\n      this.isModal = true;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      gender: ['', Validators.required],\r\n      lastName: [''],\r\n      birthName: ['', Validators.required],\r\n      firstName: ['', Validators.required],\r\n      birthDate: ['', Validators.required],\r\n      birthRank: ['', Validators.required],\r\n      externalId: [''],\r\n      nationalId: ['', [Validators.required, Validators.pattern('(1|2)[0-9]{12}')]],\r\n      email: ['', [Validators.email]],\r\n      center: ['', Validators.required],\r\n      medicalInformation: this.fb.group({\r\n        indications: this.fb.array([]),\r\n      }),\r\n      healthInsurance: this.fb.group({\r\n        codeOrganisation: ['']\r\n      }),\r\n      address: this.fb.group({\r\n        addressComplete: [''],\r\n        number: [''],\r\n        street: [''],\r\n        additional: [''],\r\n        postalCode: ['', Validators.required],\r\n        city: ['', Validators.required],\r\n        location: this.fb.group({\r\n          lat: '',\r\n          lng: '',\r\n        }),\r\n        country: ['', Validators.required],\r\n      }),\r\n      consentTeleexpertise: [''],\r\n      consentTelemonitoring: ['']\r\n    });\r\n    this.indicationsCtrl = this.form.get('medicalInformation.indications') as FormArray;\r\n    this.indicationsCtrl.push(this.createIndication());\r\n\r\n    this.loadData();\r\n  }\r\n\r\n\r\n  loadData() {\r\n    if (this.isModal && this.data.center) {\r\n      this.centers = [this.data.center];\r\n      this.patient.center = this.data.center;\r\n    } else {\r\n      this.centerService.getCenters().subscribe(centers => {\r\n        this.centers = centers;\r\n      });\r\n    }\r\n    this.form.patchValue(this.patient);\r\n    this.valueSetService.getValues('INDICATION').subscribe(values => this.indications = values);\r\n  }\r\n\r\n\r\n  getErrorMessage(field: string) {\r\n    return this.form.get(field).hasError('required') ? this.translateService.instant('form.field.required') :\r\n      this.form.get(field).hasError('email') ? this.translateService.instant('form.field.emailInvalid') :\r\n        '';\r\n  }\r\n\r\n\r\n  // ***********************************************************\r\n  // *******************        Action   ***********************\r\n  // ***********************************************************\r\n  cancel() {\r\n    if (this.isModal) {\r\n      this.dialogRef.close();\r\n    } else {\r\n      this.location.back();\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.valid) {\r\n      merge(this.patient, this.form.getRawValue());\r\n      if (this.patient['consentTeleexpertise']) {\r\n        const consent = new Consent();\r\n        consent.type = ConsentType.TELE_EXPERTISE;\r\n        consent.startDate = new Date();\r\n        this.patient.medicalInformation.consents.push(consent);\r\n        delete this.patient['consentTeleexpertise'];\r\n      }\r\n      if (this.patient['consentTelemonitoring']) {\r\n        const consent = new Consent();\r\n        consent.type = ConsentType.TELE_MONITORING;\r\n        consent.startDate = new Date();\r\n        this.patient.medicalInformation.consents.push(consent);\r\n        delete this.patient['consentTelemonitoring'];\r\n      }\r\n      this.loadingService.show();\r\n      this.patientService.save(this.patient as Patient).subscribe(\r\n        value => {\r\n          this.loadingService.hide();\r\n          if (this.isModal) {\r\n            this.dialogRef.close(value);\r\n          } else {\r\n            const dialogRef = this.dialog.open(ConfirmDialogComponent, {\r\n              data: {\r\n                title: this.translateService.instant('patient.create.confirm.title'),\r\n                content: this.translateService.instant('patient.create.confirm.content')\r\n              }\r\n            });\r\n\r\n            dialogRef.afterClosed().subscribe(result => {\r\n              this.router.navigateByUrl('/teleexpertise/patients');\r\n            });\r\n          }\r\n        },\r\n        error => {\r\n          this.loadingService.hide();\r\n          this.errorMessage = error.error.message;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  // ***********************************************************\r\n  // *******************FormGroup creator***********************\r\n  // ***********************************************************\r\n\r\n  createIndication(): FormGroup {\r\n    return this.fb.group({\r\n      date: ['', Validators.required],\r\n      code: ['', Validators.required],\r\n      comment: ['', RequiredIfOtherFieldHasValue('code', 'A_OTHER')],\r\n      vsCode: ['INDICATION', Validators.required],\r\n    });\r\n  }\r\n\r\n  addIndication(): void {\r\n    this.indicationsCtrl.push(this.createIndication());\r\n  }\r\n\r\n  removeIndication(index: number): void {\r\n    this.indicationsCtrl.removeAt(index);\r\n  }\r\n\r\n\r\n  getIndicationDateLabel(index: number) {\r\n    if (this.indicationsCtrl.at(index).get('code').value.startsWith('T')) {\r\n      return this.translateService.instant('patient.medicalInformation.indication.transplantation.date') + '*';\r\n    } else {\r\n      return this.translateService.instant('patient.medicalInformation.indication.treatment.date') + '*';\r\n    }\r\n  }\r\n\r\n\r\n  // ***********************************************************\r\n  // *******************Change event***********************\r\n  // ***********************************************************\r\n  setAddressOnChange(place: google.maps.places.PlaceResult) {\r\n    this.place = place;\r\n    if (this.place) {\r\n      // set latitude, longitude and zoom\r\n      const address: Address = new Address();\r\n      address.location = new Location();\r\n      address.location.lat = this.googlePlaceService.latitude(this.place);\r\n      address.location.lng = this.googlePlaceService.longitude(this.place);\r\n      address.number = this.googlePlaceService.street_number(this.place);\r\n      address.street = this.googlePlaceService.street(this.place);\r\n      address.postalCode = this.googlePlaceService.postal_code(this.place);\r\n      address.city = this.googlePlaceService.city(this.place);\r\n      address.postalBox = this.googlePlaceService.post_box(this.place);\r\n      const centerName = this.googlePlaceService.name(this.place);\r\n      address.additional = this.googlePlaceService.floor(this.place);\r\n      address.cedex = this.googlePlaceService.postal_town(this.place);\r\n      address.country = this.googlePlaceService.country(this.place);\r\n      address['adresseComplete'] = null;\r\n      this.form.get('address').patchValue(address);\r\n    } else {\r\n      this.form.get('address').get('location').setValue(new Location());\r\n    }\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"<p>\\r\\n  patient-edit works!\\r\\n</p>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-patient-edit',\r\n  templateUrl: './patient-edit.component.html',\r\n  styleUrls: ['./patient-edit.component.scss']\r\n})\r\nexport class PatientEditComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<mat-card fxFlex class=\\\"mat-card-primary\\\">\\r\\n  <mat-card-header class=\\\"inline\\\">\\r\\n    <mat-card-title>{{'patient.title' | translate}}</mat-card-title>\\r\\n    <button mat-mini-fab color=\\\"accent\\\" matTooltip=\\\"{{'patient.newPatientButton' | translate}}\\\" routerLink=\\\"/teleexpertise/patients/new\\\">\\r\\n      <mat-icon>add</mat-icon>\\r\\n    </button>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content>\\r\\n    <table mat-table mat-sort [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n\\r\\n      <ng-container matColumnDef=\\\"gender\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'patient.gender' | translate}}</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.gender | vse | translate}}</td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"lastName\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'patient.birthName' | translate}}</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.birthName}}</td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"firstName\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'patient.firstName' | translate}}</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.firstName}}</td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"birthDate\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'patient.birthDate' | translate}}</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.birthDate | datetime}}</td>\\r\\n      </ng-container>\\r\\n\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"['gender','lastName','firstName','birthDate']\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: ['gender','lastName','firstName','birthDate'];\\\" (click)=\\\"selectPatient(row)\\\"></tr>\\r\\n    </table>\\r\\n  </mat-card-content>\\r\\n  <mat-card-actions>\\r\\n    <mat-paginator [length]=\\\"100\\\"\\r\\n                   [pageSize]=\\\"10\\\"\\r\\n                   [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\r\\n    </mat-paginator>\\r\\n  </mat-card-actions>\\r\\n</mat-card>\\r\\n\"","module.exports = \"\"","import {Component, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {PatientService} from '../../../../core/services/patient.service';\r\nimport {AuthenticationService} from '../../../../auth/services/authentication.service';\r\nimport {Patient} from '../../../../core/model/model';\r\n\r\n@Component({\r\n  selector: 'app-patient-list',\r\n  templateUrl: './patient-list.component.html',\r\n  styleUrls: ['./patient-list.component.scss']\r\n})\r\nexport class PatientListComponent implements OnInit {\r\n\r\n\r\n  dataSource = [];\r\n\r\n  constructor(private patientService: PatientService, private router: Router, private authService: AuthenticationService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.patientService.getPatients().subscribe(value => this.dataSource = value);\r\n  }\r\n\r\n  selectPatient(patient: Patient) {\r\n    this.router.navigateByUrl('/teleexpertise/patients/' + patient.id);\r\n  }\r\n\r\n}\r\n\r\n\r\n","module.exports = \"<p>\\r\\n  publication works!\\r\\n</p>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-publication',\r\n  templateUrl: './publication.component.html',\r\n  styleUrls: ['./publication.component.scss']\r\n})\r\nexport class PublicationComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<mat-vertical-stepper #stepper linear=\\\"false\\\" (selectionChange)=\\\"stepChange($event)\\\">\\r\\n\\r\\n  <------------------------- Center ---------------------------------->\\r\\n  <mat-step [stepControl]=\\\"centerFormGroup\\\">\\r\\n    <form [formGroup]=\\\"centerFormGroup\\\">\\r\\n      <ng-template matStepLabel>{{centerStepLabel}}</ng-template>\\r\\n      <div fxLayoutAlign=\\\"row\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-label>\\r\\n            {{'request.center.label' | translate}}*\\r\\n          </mat-label>\\r\\n          <mat-select formControlName=\\\"center\\\" (selectionChange)=\\\"centerChange($event.value)\\\">\\r\\n            <mat-option>---</mat-option>\\r\\n            <mat-option *ngFor=\\\"let center of centers\\\" [value]=\\\"center\\\">\\r\\n              {{center.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxLayoutAlign=\\\"row\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-label>{{'request.prescriber' | translate}}*</mat-label>\\r\\n          <input matInput formControlName=\\\"prescriber\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-evenly\\\">\\r\\n        <button mat-button mat-raised-button matStepperNext color=\\\"accent\\\">{{'button.next' | translate}} ></button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </mat-step>\\r\\n  <------------------------- Patient ---------------------------------->\\r\\n  <mat-step [stepControl]=\\\"patientFormGroup\\\">\\r\\n    <form [formGroup]=\\\"patientFormGroup\\\">\\r\\n      <ng-template matStepLabel>{{patientStepLabel}}</ng-template>\\r\\n      <div fxLayoutAlign=\\\"row\\\">\\r\\n        <mat-form-field fxFlex>\\r\\n          <input type=\\\"text\\\" placeholder=\\\"{{'request.patient.label' | translate}}*\\\" matInput formControlName=\\\"patient\\\" [matAutocomplete]=\\\"auto\\\">\\r\\n          <mat-autocomplete #auto=\\\"matAutocomplete\\\" [displayWith]=\\\"getPatientLabel\\\" (optionSelected)=\\\"patientChange($event.option.value)\\\">\\r\\n            <mat-option *ngFor=\\\"let patient of filteredPatients | async\\\" [value]=\\\"patient\\\">\\r\\n              {{patient | patient:'birthDate'}}\\r\\n            </mat-option>\\r\\n          </mat-autocomplete>\\r\\n          <mat-hint>{{'request.create.patient.explanation' | translate}}</mat-hint>\\r\\n        </mat-form-field>\\r\\n        <button mat-mini-fab color=\\\"accent\\\" matTooltip=\\\"{{'request.patient.create.button' | translate}}\\\" (click)=\\\"createPatient()\\\">\\r\\n          <mat-icon>add</mat-icon>\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-evenly\\\">\\r\\n        <button mat-button mat-raised-button matStepperPrevious color=\\\"accent\\\">< {{'button.back' | translate}}</button>\\r\\n        <button mat-button mat-raised-button matStepperNext color=\\\"accent\\\">{{'button.next' | translate}} ></button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </mat-step>\\r\\n  <------------------------- Indication ---------------------------------->\\r\\n  <mat-step [stepControl]=\\\"indicationFormGroup\\\">\\r\\n    <form [formGroup]=\\\"indicationFormGroup\\\">\\r\\n      <ng-template matStepLabel>{{indicationStepLabel}}</ng-template>\\r\\n      <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder=\\\"{{'request.indication.name' | translate}}*\\\" formControlName=\\\"code\\\"\\r\\n                      (selectionChange)=\\\"indicationChange($event.value)\\\">\\r\\n            <mat-option *ngFor=\\\"let indication of indications\\\" [value]=\\\"indication.code\\\">\\r\\n              {{indication | vse | translate}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"{{'request.indication.comment' | translate}}\\\" formControlName=\\\"comment\\\"/>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\">\\r\\n        <mat-form-field>\\r\\n          <input matInput [matDatepicker]=\\\"picker\\\" formControlName=\\\"date\\\" placeholder=\\\"{{indicationDateLabel}}*\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #picker></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n        <div class=\\\"mat-form-field\\\">\\r\\n          <mat-checkbox\\r\\n            *ngIf=\\\"indicationFormGroup.get('code').value==='T_LUNG'\\\"\\r\\n            formControlName=\\\"mucoviscidose\\\"\\r\\n            indeterminate=true>\\r\\n            {{'request.mucoviscidose' | translate}}\\r\\n          </mat-checkbox>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-evenly\\\">\\r\\n        <button mat-button mat-raised-button matStepperPrevious color=\\\"accent\\\">< {{'button.back' | translate}}</button>\\r\\n        <button mat-button mat-raised-button matStepperNext color=\\\"accent\\\">{{'button.next' | translate}} ></button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </mat-step>\\r\\n\\r\\n  <------------------------- Treatment ---------------------------------->\\r\\n  <mat-step [stepControl]=\\\"treatmentFormGroup\\\">\\r\\n    <form [formGroup]=\\\"treatmentFormGroup\\\">\\r\\n      <ng-template matStepLabel>{{treatmentStepLabel}}</ng-template>\\r\\n      <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder=\\\"{{'request.treatment.drug' | translate}}*\\\" formControlName=\\\"drug\\\" (selectionChange)=\\\"drugChange($event.value.code)\\\">\\r\\n            <mat-option *ngFor=\\\"let drug of drugs\\\" [value]=\\\"drug\\\">\\r\\n              {{drug | vse | translate}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field *ngIf=\\\"drugCommercialNamesFiltered.length>0\\\">\\r\\n          <mat-select placeholder=\\\"{{'request.treatment.drugCommercialName' | translate}}\\\" formControlName=\\\"drugCommercialName\\\">\\r\\n            <mat-option *ngFor=\\\"let drugCommercialName of drugCommercialNamesFiltered\\\" [value]=\\\"drugCommercialName\\\">\\r\\n              {{drugCommercialName | vse | translate}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder=\\\"{{'request.treatment.numberOfTakes' | translate}}*\\\" formControlName=\\\"numberOfTakes\\\"\\r\\n                      (selectionChange)=\\\"numberOfTakesChange($event.value.code)\\\">\\r\\n            <mat-option *ngFor=\\\"let numberOfTake of numberOfTakesValues\\\" [value]=\\\"numberOfTake\\\">\\r\\n              {{numberOfTake | vse | translate}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n        <div formArrayName=\\\"doses\\\">\\r\\n          <div *ngFor=\\\"let item of this.dosesCtrl.controls; let i = index;\\\" [formGroupName]=\\\"i\\\">\\r\\n            <mat-form-field>\\r\\n              <mat-label>{{'request.treatment.doses' | translate}} {{i+1}} ({{item.value.unit}})*</mat-label>\\r\\n              <input type=\\\"number\\\" matInput formControlName=\\\"value\\\">\\r\\n            </mat-form-field>\\r\\n            <br/>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder=\\\"{{'request.treatment.administrationRoute' | translate}}\\\" formControlName=\\\"administrationRoute\\\">\\r\\n            <mat-option *ngFor=\\\"let route of routes\\\" [value]=\\\"route\\\">\\r\\n              {{route | vse | translate}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder=\\\"{{'request.treatment.coTreatments' | translate}}\\\" formControlName=\\\"coTreatments\\\" multiple>\\r\\n            <mat-option *ngFor=\\\"let cotreatment of drugs\\\" [value]=\\\"cotreatment\\\">\\r\\n              {{cotreatment | vse | translate}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-evenly\\\">\\r\\n        <button mat-button mat-raised-button matStepperPrevious color=\\\"accent\\\">< {{'button.back' | translate}}</button>\\r\\n        <button mat-button mat-raised-button matStepperNext color=\\\"accent\\\">{{'button.next' | translate}} ></button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </mat-step>\\r\\n\\r\\n  <------------------------- Context ---------------------------------->\\r\\n  <mat-step [stepControl]=\\\"contextFormGroup\\\">\\r\\n    <form [formGroup]=\\\"contextFormGroup\\\">\\r\\n      <ng-template matStepLabel>{{contextStepLabel}}</ng-template>\\r\\n      <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder=\\\"{{'request.context.reason' | translate}}*\\\" formControlName=\\\"reason\\\">\\r\\n            <mat-option *ngFor=\\\"let reason of reasons\\\" [value]=\\\"reason\\\">\\r\\n              {{reason | vse | translate}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field>\\r\\n          <textarea matInput rows=\\\"3\\\" placeholder=\\\"{{'request.context.additionalInformation' | translate}}\\\" formControlName=\\\"additionalInformation\\\"></textarea>\\r\\n        </mat-form-field>\\r\\n\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-evenly\\\">\\r\\n        <button mat-button mat-raised-button matStepperPrevious color=\\\"accent\\\">< {{'button.back' | translate}}</button>\\r\\n        <button mat-button mat-raised-button matStepperNext color=\\\"accent\\\">{{'button.next' | translate}} ></button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </mat-step>\\r\\n\\r\\n  <------------------------- Sampling ---------------------------------->\\r\\n  <mat-step [stepControl]=\\\"samplingFormGroup\\\">\\r\\n    <form [formGroup]=\\\"samplingFormGroup\\\">\\r\\n      <ng-template matStepLabel>{{samplingStepLabel}}</ng-template>\\r\\n      <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\">\\r\\n        <mat-form-field>\\r\\n          <input matInput [ngxTimepicker]=\\\"drugIntakeTimePicker\\\" [format]=\\\"timeFormat\\\" readonly\\r\\n                 placeholder=\\\"{{'request.bloodSample.drugIntakeTime' | translate}}*\\\" formControlName=\\\"drugIntakeTime\\\"/>\\r\\n          <ngx-material-timepicker #drugIntakeTimePicker [cancelBtnTmpl]=\\\"cancelBtn\\\" (timeSet)=\\\"drugIntakeTimePickerChange($event)\\\"\\r\\n                                   [confirmBtnTmpl]=\\\"confirmBtn\\\"></ngx-material-timepicker>\\r\\n          <ng-template #cancelBtn>\\r\\n            <button mat-button mat-raised-button>{{'button.cancel' | translate}}</button>\\r\\n          </ng-template>\\r\\n          <ng-template #confirmBtn>\\r\\n            <button mat-button mat-raised-button color=\\\"accent\\\">{{'button.ok' | translate}}</button>\\r\\n          </ng-template>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field>\\r\\n          <input matInput [matDatepicker]=\\\"samplingDatePicker\\\" formControlName=\\\"samplingDate\\\" placeholder=\\\"{{'request.bloodSample.samplingDate' | translate}}*\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"samplingDatePicker\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #samplingDatePicker></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder=\\\"{{'request.bloodSample.assayMethod' | translate}}*\\\" formControlName=\\\"assayMethod\\\">\\r\\n            <mat-option *ngFor=\\\"let method of assayMethod\\\" [value]=\\\"method\\\">\\r\\n              {{method | vse | translate}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n      </div>\\r\\n      <mat-card>\\r\\n        <mat-card-header>\\r\\n          <mat-card-title>{{'request.create.samples.title' | translate}}</mat-card-title>\\r\\n          <mat-card-subtitle>{{'request.create.samples.subtitle' | translate}}</mat-card-subtitle>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content formArrayName=\\\"samples\\\">\\r\\n          <div *ngFor=\\\"let item of samplesCtrl.controls; let i = index;\\\" [formGroupName]=\\\"i\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxFlexFill=\\\"center\\\">\\r\\n            <div><b>{{i+1}}. </b></div>\\r\\n            <mat-form-field formGroupName=\\\"intervalDoseSampling\\\">\\r\\n              <input type=\\\"number\\\" matInput formControlName=\\\"value\\\" placeholder=\\\"{{'request.bloodSample.samples.intervalDoseSampling' | translate}}\\\"\\r\\n                     (change)=\\\"calculateTime(item)\\\">\\r\\n              <mat-hint *ngIf=\\\"item.value.optimalSamplingTime\\\">{{'request.bloodSample.samples.optimalSamplingTime' | translate}}\\r\\n                {{item.value.optimalSamplingTime}}\\r\\n              </mat-hint>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field>\\r\\n              <input matInput formControlName=\\\"realSamplingTime\\\" readonly=\\\"true\\\"\\r\\n                     placeholder=\\\"{{'request.bloodSample.samples.realSamplingTime' | translate}}\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field formGroupName=\\\"concentration\\\">\\r\\n              <input matInput formControlName=\\\"value\\\" placeholder=\\\"{{'request.bloodSample.samples.concentration' | translate}} (mg/l)\\\">\\r\\n            </mat-form-field>\\r\\n            <button mat-mini-fab matTooltip=\\\"{{'request.create.samples.removeButton' | translate}}\\\" (click)=\\\"removeSample(i)\\\" disabled=\\\"{{i<minSample}}\\\">\\r\\n              <mat-icon>delete</mat-icon>\\r\\n            </button>\\r\\n          </div>\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\">\\r\\n            <button mat-mini-fab matTooltip=\\\"{{'request.create.samples.addButton' | translate}}\\\" (click)=\\\"addSample()\\\">\\r\\n              <mat-icon>note_add</mat-icon>\\r\\n            </button>\\r\\n          </div>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n      <br/><br/>\\r\\n      <mat-checkbox formControlName=\\\"consent\\\">\\r\\n        {{'request.consent' | translate}}\\r\\n      </mat-checkbox>\\r\\n\\r\\n      <mat-card align=\\\"center\\\" *ngIf=\\\"errorMessage\\\" class=\\\"alert\\\">\\r\\n        {{errorMessage}}\\r\\n      </mat-card>\\r\\n      &nbsp;\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-evenly\\\">\\r\\n        <button mat-button mat-raised-button matStepperPrevious color=\\\"accent\\\">< {{'button.back' | translate}}</button>\\r\\n        <button mat-mat-button mat-raised-button color=\\\"accent\\\" (click)=\\\"submit()\\\">{{'button.submit' | translate}}</button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </mat-step>\\r\\n</mat-vertical-stepper>\\r\\n\"","module.exports = \"\"","import {Component, OnInit} from '@angular/core';\r\nimport {AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators} from '@angular/forms';\r\nimport {PatientService} from '../../../../core/services/patient.service';\r\nimport {Center, ConsentType, Indication, Patient, Request, Sample} from '../../../../core/model/model';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {StepperSelectionEvent} from '@angular/cdk/stepper/typings/stepper';\r\nimport {CenterService} from '../../../../core/services/center.service';\r\nimport {ConfigurationService} from '../../../../core/services/configuration.service';\r\nimport {AGE_GT18, RequestConfiguration, WILD_CARD} from '../../../../core/model/configurationModel';\r\nimport {getTimeFormat} from '../../../../core/utils/DateUtils';\r\nimport {RequiredIfOtherControlHasValue, RequiredIfOtherFieldHasValue} from '../../../../core/validators/requiredIfOtherFIeldHasValue';\r\nimport {ConfirmDialogComponent} from '../../../../core/components/dialog/confirm-dialog/confirm-dialog.component';\r\nimport {RequestService} from '../../../services/request.service';\r\nimport {LoadingService} from '../../../../core/services/loading.service';\r\nimport {MatDialog} from '@angular/material';\r\nimport {Router} from '@angular/router';\r\nimport * as moment from 'moment';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport {PatientCreateComponent} from '../../patient/patient-create/patient-create.component';\r\nimport {ValueSetService} from '../../../../core/services/value-set.service';\r\n\r\n@Component({\r\n  selector: 'app-request-new',\r\n  templateUrl: './request-create.component.html',\r\n  styleUrls: ['./request-create.component.scss']\r\n})\r\nexport class RequestCreateComponent implements OnInit {\r\n\r\n  errorMessage: String;\r\n  treatmentFormGroup: FormGroup;\r\n  patientFormGroup: FormGroup;\r\n  indicationFormGroup: FormGroup;\r\n  contextFormGroup: FormGroup;\r\n  centerFormGroup: FormGroup;\r\n  samplingFormGroup: FormGroup;\r\n  dosesCtrl: FormArray;\r\n  samplesCtrl: FormArray;\r\n  treatmentStepLabel = '';\r\n  patientStepLabel = '';\r\n  contextStepLabel = '';\r\n  centerStepLabel = '';\r\n  indicationStepLabel = '';\r\n  samplingStepLabel = '';\r\n  numberOfTakes = 1;\r\n  indicationDateLabel = '';\r\n  timeFormat = getTimeFormat();\r\n\r\n  indications = [];\r\n  drugs = [];\r\n  drugCommercialNamesFiltered = [];\r\n  numberOfTakesValues = [];\r\n  routes = [];\r\n  assayMethod = [];\r\n  reasons = [];\r\n\r\n  patients: Array<Patient> = [];\r\n  filteredPatients: Observable<Patient[]>;\r\n  centers: Array<Center>;\r\n  configuration: RequestConfiguration;\r\n  minSample = 3;\r\n  private center: Center;\r\n\r\n  constructor(private _formBuilder: FormBuilder, private patientService: PatientService, private translateService: TranslateService,\r\n              private centerService: CenterService, private configurationService: ConfigurationService,\r\n              private requestService: RequestService, private loadingService: LoadingService,\r\n              private translate: TranslateService, public dialog: MatDialog, private router: Router, private valueSetService: ValueSetService) {\r\n\r\n    translateService.get('request.create.treatmentStepTitle').subscribe((text: string) => {\r\n      this.treatmentStepLabel = this.translateService.instant('request.create.treatmentStepTitle');\r\n      this.patientStepLabel = this.translateService.instant('request.create.patientStepTitle');\r\n      this.indicationStepLabel = this.translateService.instant('request.create.indicationStepTitle');\r\n      this.contextStepLabel = this.translateService.instant('request.create.contextStepTitle');\r\n      this.centerStepLabel = this.translateService.instant('request.create.centerStepTitle');\r\n      this.samplingStepLabel = this.translateService.instant('request.create.samplingStepTitle');\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.centerFormGroup = this._formBuilder.group({\r\n      center: [null, Validators.required],\r\n      prescriber: [null, Validators.required]\r\n    });\r\n    this.indicationFormGroup = this._formBuilder.group({\r\n      code: [null, Validators.required],\r\n      vsCode: ['INDICATION', Validators.required],\r\n      date: [null, Validators.required],\r\n      comment: ['', RequiredIfOtherFieldHasValue('code', 'A_OTHER')],\r\n      mucoviscidose: ['', RequiredIfOtherFieldHasValue('code', 'T_LUNG')],\r\n    });\r\n    this.treatmentFormGroup = this._formBuilder.group({\r\n      drug: [null, Validators.required],\r\n      drugCommercialName: [null],\r\n      numberOfTakes: [null, Validators.required],\r\n      administrationRoute: [null, RequiredIfOtherControlHasValue(this.indicationFormGroup.get('code'), 'T_MARROW')],\r\n      coTreatments: [null],\r\n      doses: this._formBuilder.array([]),\r\n    });\r\n    this.dosesCtrl = this.treatmentFormGroup.get('doses') as FormArray;\r\n    this.patientFormGroup = this._formBuilder.group({\r\n      patient: [null, this.patientRequired()]\r\n    });\r\n    this.contextFormGroup = this._formBuilder.group({\r\n      reason: [null, Validators.required],\r\n      additionalInformation: [null]\r\n    });\r\n    this.samplingFormGroup = this._formBuilder.group({\r\n      drugIntakeTime: [null, Validators.required],\r\n      samplingDate: [null, Validators.required],\r\n      assayMethod: [null, Validators.required],\r\n      samples: this._formBuilder.array([]),\r\n      consent: [false, Validators.required],\r\n    });\r\n    this.samplesCtrl = this.samplingFormGroup.get('samples') as FormArray;\r\n    this.samplesCtrl.push(this.createSample(true));\r\n    this.samplesCtrl.push(this.createSample(true));\r\n    this.samplesCtrl.push(this.createSample(true));\r\n    this.loadData();\r\n\r\n    this.filteredPatients = this.patientFormGroup.get('patient').valueChanges\r\n      .pipe(\r\n        startWith<string | Patient>(''),\r\n        map(value => typeof value === 'string' ? value : this.getPatientLabel(value)),\r\n        map(name => name ? this._filterPatient(name) : this.patients.slice())\r\n      );\r\n\r\n  }\r\n\r\n  patientRequired(): ValidatorFn {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n      const value = control.value;\r\n      if (value && !value.birthName && !value.lastName) {\r\n        return {patientRequired: true};\r\n      }\r\n      return Validators.required(control);\r\n    };\r\n  }\r\n\r\n\r\n  private loadData() {\r\n    this.centerService.getCenters().subscribe((centers) => this.centers = centers);\r\n    this.configurationService.getRequestConfiguration().subscribe((config) => this.configuration = config);\r\n\r\n    this.valueSetService.getValues('DRUG').subscribe(values => this.drugs = values);\r\n    this.valueSetService.getValues('INDICATION').subscribe(values => this.indications = values);\r\n    this.valueSetService.getValues('NUMBER_OF_TAKES').subscribe(values => this.numberOfTakesValues = values);\r\n    this.valueSetService.getValues('ROUTE_OF_ADMINISTRATION').subscribe(values => this.routes = values);\r\n    this.valueSetService.getValues('ASSAY_METHOD').subscribe(values => this.assayMethod = values);\r\n    this.valueSetService.getValues('REASON').subscribe(values => this.reasons = values);\r\n  }\r\n\r\n  /**\r\n   * Autocomplete filter for patient\r\n   * @param name\r\n   * @private\r\n   */\r\n  private _filterPatient(name: any) {\r\n    const filterValue = name.toLocaleLowerCase();\r\n    const tokens = filterValue.split(' ');\r\n    return this.patients.filter(patient => {\r\n      const patientLabel = this.getPatientLabel(patient).toLocaleLowerCase();\r\n      const tokensMatch = tokens.filter(token => patientLabel.indexOf(token) > -1);\r\n      return tokensMatch && tokensMatch.length === tokens.length;\r\n    });\r\n  }\r\n\r\n\r\n  // ***********************************************************\r\n  // ************************ Submit ***************************\r\n  // ***********************************************************\r\n  submit() {\r\n    this.errorMessage = '';\r\n    const request = new Request();\r\n    if (this.samplingFormGroup.valid) {\r\n      request.center = new Center();\r\n      request.center.id = this.centerFormGroup.getRawValue().center.id;\r\n      request.prescriber = this.centerFormGroup.getRawValue().prescriber;\r\n      request.patient = new Patient();\r\n      request.patient.id = this.patientFormGroup.getRawValue().patient.id;\r\n      request.context = this.contextFormGroup.getRawValue();\r\n      request.treatment = this.treatmentFormGroup.getRawValue();\r\n      request.indication = this.indicationFormGroup.getRawValue();\r\n      if (request.indication.code === 'T_LUMP' && request.indication['muscoviscidose']) {\r\n        const ind = new Indication();\r\n        ind.code = 'MUCOVISCIDOSE';\r\n        ind.vsCode = 'OTHER_INDICATION';\r\n        request.otherIndications.push(ind);\r\n      }\r\n      delete request.indication['muscoviscidose'];\r\n      request.bloodSample = this.samplingFormGroup.getRawValue();\r\n      delete request.bloodSample['consent'];\r\n      this.loadingService.show();\r\n      this.requestService.sendRequest(request).subscribe(\r\n        value => {\r\n          this.loadingService.hide();\r\n          const dialogRef = this.dialog.open(ConfirmDialogComponent, {\r\n            data: {\r\n              title: this.translate.instant('request.confirm.title'),\r\n              content: this.translate.instant('request.confirm.content')\r\n            }\r\n          });\r\n\r\n          dialogRef.afterClosed().subscribe(result => {\r\n            this.router.navigateByUrl('/teleexpertise/requests');\r\n          });\r\n        },\r\n        error => {\r\n          this.loadingService.hide();\r\n          this.errorMessage = error.error.message;\r\n        }\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n  // ***********************************************************\r\n  // ******************* Change Handlers ***********************\r\n  // ***********************************************************\r\n\r\n\r\n  stepChange(event: StepperSelectionEvent) {\r\n    if (event.previouslySelectedIndex === 0) {\r\n      const cen: Center = this.centerFormGroup.get('center').value;\r\n      this.centerStepLabel = cen.name + ' - ' + this.centerFormGroup.get('prescriber').value;\r\n    } else if (event.previouslySelectedIndex === 1) {\r\n      const pat: Patient = this.patientFormGroup.get('patient').value;\r\n      this.patientStepLabel = this.getPatientLabel(pat);\r\n    } else if (event.previouslySelectedIndex === 2) {\r\n      this.indicationStepLabel = this.translate.instant(this.indicationFormGroup.get('vsCode').value + '.' + this.indicationFormGroup.get('code').value) +\r\n        ' - ' + this.indicationDateLabel + ': ' + moment(this.indicationFormGroup.get('date').value).format('L');\r\n    } else if (event.previouslySelectedIndex === 3) {\r\n      this.treatmentStepLabel = this.treatmentFormGroup.get('drug').value.code +\r\n        ' - ' + this.translateService.instant('request.treatment.numberOfTakes') + ': ' + this.treatmentFormGroup.get('numberOfTakes').value.code;\r\n      if (this.treatmentFormGroup.get('administrationRoute').value) {\r\n        this.treatmentStepLabel += ' - ' + this.translateService.instant('request.treatment.administrationRoute') +\r\n          ': ' + this.treatmentFormGroup.get('administrationRoute').value.code;\r\n      }\r\n    } else if (event.previouslySelectedIndex === 4) {\r\n      this.contextStepLabel = this.contextFormGroup.get('reason').value.code;\r\n    }\r\n\r\n    if (event.selectedIndex === 0) {\r\n      this.centerStepLabel = this.translateService.instant('request.create.centerStepTitle');\r\n    } else if (event.selectedIndex === 1) {\r\n      this.patientStepLabel = this.translateService.instant('request.create.patientStepTitle');\r\n    } else if (event.selectedIndex === 2) {\r\n      this.indicationStepLabel = this.translateService.instant('request.create.indicationStepTitle');\r\n    } else if (event.selectedIndex === 3) {\r\n      this.treatmentStepLabel = this.translateService.instant('request.create.treatmentStepTitle');\r\n    } else if (event.selectedIndex === 4) {\r\n      this.contextStepLabel = this.translateService.instant('request.create.contextStepTitle');\r\n    } else if (event.selectedIndex === 5) {\r\n      this.handleSampleConfiguration();\r\n    }\r\n  }\r\n\r\n  getPatientLabel(pat?: Patient) {\r\n    return pat ? pat.birthName + (pat.lastName ? ' (' + pat.lastName + ')' : '') + ' ' + pat.firstName + ' (' + moment(pat.birthDate).format('L') + ')' : '';\r\n  }\r\n\r\n  indicationChange(code: string) {\r\n    if (code.startsWith('T')) {\r\n      this.indicationDateLabel = this.translateService.instant('request.indication.transplantation.date');\r\n    } else {\r\n      this.indicationDateLabel = this.translateService.instant('request.indication.treatment.date');\r\n    }\r\n  }\r\n\r\n  drugChange(code: string) {\r\n    this.drugCommercialNamesFiltered = [];\r\n    this.valueSetService.getDrugCommercialNames(code).subscribe(values => this.drugCommercialNamesFiltered = values);\r\n  }\r\n\r\n  centerChange(center: Center) {\r\n    this.center = center;\r\n    this.patientService.getPatientsForCenter(center.id).subscribe((patients) => {\r\n      this.patients = patients;\r\n      this.patientFormGroup.get('patient').setValue('');\r\n    });\r\n  }\r\n\r\n  patientChange(pat: Patient) {\r\n    this.requestService.initRequest(pat.id, this.centerFormGroup.get('center').value.id).subscribe((request) => {\r\n      if (request.treatment) {\r\n        this.treatmentFormGroup.patchValue(request.treatment);\r\n      }\r\n      if (request.indication) {\r\n        this.indicationFormGroup.patchValue(request.indication);\r\n        this.indicationChange(request.indication.code);\r\n      }\r\n      this.samplingFormGroup.get('consent').setValue(false);\r\n      if (request.patient.medicalInformation && request.patient.medicalInformation.consents) {\r\n        request.patient.medicalInformation.consents.forEach(consent => {\r\n          if (consent.type === ConsentType.TELE_EXPERTISE && (!consent.endDate || moment(consent.endDate).isAfter(moment()))) {\r\n            this.samplingFormGroup.get('consent').setValue(true);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  numberOfTakesChange(code: string) {\r\n    this.dosesCtrl.controls = [];\r\n    this.numberOfTakes = parseInt(code, 10);\r\n    if (this.numberOfTakes < 1) {\r\n      this.numberOfTakes = 1;\r\n    }\r\n    for (let i = 0; i < this.numberOfTakes; i++) {\r\n      this.dosesCtrl.push(this.createDose());\r\n    }\r\n  }\r\n\r\n  calculateTime(ctrl: AbstractControl, time: string = null) {\r\n    const item: Sample = ctrl.value;\r\n    const drugIntakeTime = time ? time : this.samplingFormGroup.get('drugIntakeTime').value;\r\n    if (drugIntakeTime && item && item.intervalDoseSampling && item.intervalDoseSampling.value) {\r\n      const currentHour = moment(drugIntakeTime, 'LT');\r\n      const realSamplingTime = currentHour.add(item.intervalDoseSampling.value, 'minutes').format('LT');\r\n      ctrl.patchValue({realSamplingTime: realSamplingTime});\r\n    }\r\n  }\r\n\r\n  drugIntakeTimePickerChange(time: string) {\r\n    this.samplesCtrl.controls.forEach(ctrl => this.calculateTime(ctrl, time));\r\n  }\r\n\r\n\r\n  // ***********************************************************\r\n  // *******************FormGroup creator***********************\r\n  // ***********************************************************\r\n\r\n  createDose(): FormGroup {\r\n    return this._formBuilder.group({value: ['', Validators.required], unit: ['mg']});\r\n  }\r\n\r\n  createSample(required: boolean): FormGroup {\r\n    return this._formBuilder.group({\r\n      intervalDoseSampling: this._formBuilder.group({\r\n        value: ['', Validators.required],\r\n        unit: ['min']\r\n      }),\r\n      realSamplingTime: ['', Validators.required],\r\n      optimalSamplingTime: ['', Validators.required],\r\n      concentration: this._formBuilder.group({\r\n        value: ['', Validators.required],\r\n        unit: ['mg/l']\r\n      })\r\n    });\r\n  }\r\n\r\n  addSample(): void {\r\n    this.samplesCtrl.push(this.createSample(false));\r\n  }\r\n\r\n  removeSample(index: number): void {\r\n    this.samplesCtrl.removeAt(index);\r\n  }\r\n\r\n  // ***********************************************************\r\n  // *****************createPatient*********************\r\n  // ***********************************************************\r\n  createPatient() {\r\n    const dialogRef = this.dialog.open(PatientCreateComponent, {data: {center: this.center}});\r\n\r\n    dialogRef.afterClosed().subscribe(patient => {\r\n      if (patient) {\r\n        this.patientService.getPatientsForCenter(this.center.id).subscribe((patients) => {\r\n          this.patients = patients;\r\n          this.patientFormGroup.get('patient').setValue(patient);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  // ***********************************************************\r\n  // *****************Request Configuration*********************\r\n  // ***********************************************************\r\n\r\n  handleSampleConfiguration() {\r\n    let indication = this.configuration.sampling.indications.find(ind => ind.indication === this.indicationFormGroup.get('code').value);\r\n    if (!indication) {\r\n      indication = this.configuration.sampling.indications.find(ind => ind.indication === WILD_CARD);\r\n    }\r\n    let age = indication.ages.find(ageValue => ageValue.age === AGE_GT18);\r\n    if (!age) {\r\n      age = indication.ages.find(ageValue => ageValue.age === WILD_CARD);\r\n    }\r\n    let disease = age.diseases.find(dis => dis.disease === WILD_CARD);\r\n    if (!disease) {\r\n      disease = age.diseases.find(dis => dis.disease === WILD_CARD);\r\n    }\r\n    let routeOfAdministration;\r\n    if (this.treatmentFormGroup.get('administrationRoute').value) {\r\n      routeOfAdministration = disease.roas.find(roa => roa.roa === this.treatmentFormGroup.get('administrationRoute').value.code);\r\n    }\r\n    if (!routeOfAdministration) {\r\n      routeOfAdministration = disease.roas.find(roa => roa.roa === WILD_CARD);\r\n    }\r\n    let drug = routeOfAdministration.drugs.find(dr => dr.drug === this.treatmentFormGroup.get('drug').value.code);\r\n    if (!drug) {\r\n      drug = routeOfAdministration.drugs.find(dr => dr.drug === WILD_CARD);\r\n    }\r\n    let drugCommercialName;\r\n    if (this.treatmentFormGroup.get('drugCommercialName').value) {\r\n      drugCommercialName = drug.drugCommercialNames.find(dcn => dcn.drugCommercialName === this.treatmentFormGroup.get('drugCommercialName').value.code);\r\n    }\r\n    if (!drugCommercialName) {\r\n      drugCommercialName = drug.drugCommercialNames.find(dr => dr.drugCommercialName === WILD_CARD);\r\n    }\r\n    const sampling: Array<string> = drugCommercialName.sampling;\r\n    this.minSample = Math.min(3, sampling.length);\r\n    for (let i = 0; i < sampling.length; i++) {\r\n      let control = this.samplesCtrl.controls[i];\r\n      if (!control) {\r\n        this.samplesCtrl.push(this.createSample(false));\r\n      }\r\n      control = this.samplesCtrl.controls[i];\r\n      control.patchValue({optimalSamplingTime: sampling[i]});\r\n    }\r\n    while (this.samplesCtrl.controls.length > sampling.length) {\r\n      this.samplesCtrl.removeAt(this.samplesCtrl.controls.length - 1);\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"<div *ngIf=\\\"request\\\">\\r\\n  <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\">\\r\\n    <div fxFlex.gt-sm=\\\"60%\\\" fxFlexOrder.lt-md=\\\"2\\\">\\r\\n      <mat-card class=\\\"mat-card-primary\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card-title>{{'request.edit.title' | translate}}</mat-card-title>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content>\\r\\n          <div class=\\\"form\\\">\\r\\n            <h3 mat-subheader>request.create.indicationStepTitle</h3>\\r\\n            <div>\\r\\n              <div>{{'request.indication.name' | translate}}</div>\\r\\n              <div>\\r\\n                <mat-chip>{{request.indication | vse | translate}}</mat-chip>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div>\\r\\n              <div>{{'request.indication.date' | translate}}</div>\\r\\n              <div>{{request.indication.date | date}}</div>\\r\\n            </div>\\r\\n            <div>\\r\\n              <div>{{'request.indication.comment' | translate}}</div>\\r\\n              <div>{{request.indication.comment}}</div>\\r\\n            </div>\\r\\n            <h3 mat-subheader>request.create.treatmentStepTitle</h3>\\r\\n            <div>\\r\\n              <div>{{'request.treatment.drug' | translate}}</div>\\r\\n              <div>\\r\\n                <mat-chip>{{request.treatment.drug | vse | translate}}</mat-chip>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div>\\r\\n              <div>{{'request.treatment.drugCommercialName' | translate}}</div>\\r\\n              <div>{{request.treatment.drugCommercialName | vse | translate}}</div>\\r\\n            </div>\\r\\n            <div>\\r\\n              <div>{{'request.treatment.numberOfTakes' | translate}}</div>\\r\\n              <div>{{request.treatment.numberOfTakes | vse | translate}}\\r\\n                <div *ngFor=\\\"let dose of request.treatment.doses; let i = index;\\\">\\r\\n                  {{'request.treatment.doses' | translate}} {{i+1}} : {{dose.value+\\\" \\\"+dose.unit}}\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div>\\r\\n              <div>{{'request.treatment.administrationRoute' | translate}}</div>\\r\\n              <div>{{request.treatment.administrationRoute| vse | translate}}</div>\\r\\n            </div>\\r\\n            <div>\\r\\n              <div>{{'request.treatment.coTreatments' | translate}}</div>\\r\\n              <div>\\r\\n                <mat-chip-list>\\r\\n                  <mat-chip *ngFor=\\\"let treat of request.treatment.coTreatments\\\">{{treat | vse | translate}}</mat-chip>\\r\\n                </mat-chip-list>\\r\\n              </div>\\r\\n            </div>\\r\\n            <h3 mat-subheader>request.create.contextStepTitle</h3>\\r\\n            <div>\\r\\n              <div>{{'request.context.reason' | translate}}</div>\\r\\n              <div>{{request.context.reason | vse | translate}}</div>\\r\\n            </div>\\r\\n            <div>\\r\\n              <div>{{'request.context.additionalInformation' | translate}}</div>\\r\\n              <div>{{request.context.additionalInformation}}</div>\\r\\n            </div>\\r\\n            <h3 mat-subheader>request.create.samplingStepTitle</h3>\\r\\n            <div>\\r\\n              <div>{{'request.bloodSample.drugIntakeTime' | translate}}</div>\\r\\n              <div>{{request.bloodSample.drugIntakeTime}}</div>\\r\\n            </div>\\r\\n            <div>\\r\\n              <div>{{'request.bloodSample.samplingDate' | translate}}</div>\\r\\n              <div>{{request.bloodSample.samplingDate | date}}</div>\\r\\n            </div>\\r\\n            <div>\\r\\n              <div>{{'request.bloodSample.assayMethod' | translate}}</div>\\r\\n              <div>{{request.bloodSample.assayMethod | vse | translate}}</div>\\r\\n            </div>\\r\\n            <mat-table [dataSource]=\\\"request.bloodSample.samples\\\">\\r\\n              <ng-container cdkColumnDef=\\\"intervalDoseSampling\\\">\\r\\n                <mat-header-cell *cdkHeaderCellDef>{{'request.bloodSample.samples.intervalDoseSampling' | translate}}</mat-header-cell>\\r\\n                <mat-cell *cdkCellDef=\\\"let row\\\"> {{row.intervalDoseSampling.value+\\\" \\\"+row.intervalDoseSampling.unit}} ({{row.optimalSamplingTime}})</mat-cell>\\r\\n              </ng-container>\\r\\n\\r\\n              <ng-container cdkColumnDef=\\\"realSamplingTime\\\">\\r\\n                <mat-header-cell *cdkHeaderCellDef> {{'request.bloodSample.samples.realSamplingTime' | translate}}</mat-header-cell>\\r\\n                <mat-cell *cdkCellDef=\\\"let row\\\"> {{row.realSamplingTime}}</mat-cell>\\r\\n              </ng-container>\\r\\n\\r\\n              <ng-container cdkColumnDef=\\\"concentration\\\">\\r\\n                <mat-header-cell *cdkHeaderCellDef> {{'request.bloodSample.samples.concentration' | translate}}</mat-header-cell>\\r\\n                <mat-cell *cdkCellDef=\\\"let row\\\"> {{row.concentration.value+\\\" \\\"+row.concentration.unit}}</mat-cell>\\r\\n              </ng-container>\\r\\n\\r\\n              <mat-header-row *cdkHeaderRowDef=\\\"['intervalDoseSampling', 'realSamplingTime', 'concentration']\\\"></mat-header-row>\\r\\n              <mat-row *cdkRowDef=\\\"let row; columns: ['intervalDoseSampling', 'realSamplingTime', 'concentration']\\\"></mat-row>\\r\\n            </mat-table>\\r\\n\\r\\n          </div>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n\\r\\n    <mat-card fxFlex.gt-sm=\\\"40%\\\" class=\\\"mat-card-primary\\\">\\r\\n      <mat-card-content>\\r\\n        <div fxLayout=\\\"column\\\">\\r\\n          <h2>{{'request.administrativeInformation' | translate}}</h2>\\r\\n          <mat-list>\\r\\n            <mat-list-item>\\r\\n              <mat-icon matListIcon>add_box</mat-icon>\\r\\n              <span matLine>{{request.center.name}}</span>\\r\\n            </mat-list-item>\\r\\n            <mat-list-item>\\r\\n              <mat-icon matListIcon>personn</mat-icon>\\r\\n              <span matLine>{{'request.prescriber' | translate}} : {{request.prescriber}}</span>\\r\\n              <span matLine>{{'request.requester' | translate}} : {{request.requester | user}}</span>\\r\\n            </mat-list-item>\\r\\n            <mat-list-item>\\r\\n              <mat-icon matListIcon>accessibility</mat-icon>\\r\\n              <span matLine>{{request.patient | patient:'birthDate'}}</span>\\r\\n              <mat-chip-list matLine>\\r\\n                <mat-chip color=\\\"accent\\\" selected *ngIf=\\\"!request.indication.mucoviscidose\\\">{{'request.mucoviscidose' | translate}}</mat-chip>\\r\\n              </mat-chip-list>\\r\\n            </mat-list-item>\\r\\n          </mat-list>\\r\\n          <br/><br/>\\r\\n          <h2><span matBadge=\\\"{{request.comments.length}}\\\" matBadgeOverlap=\\\"false\\\">{{'request.lastComments.title' | translate}}</span></h2>\\r\\n          <mat-card fxFlex class=\\\"small\\\" *ngFor=\\\"let comment of request.comments.reverse() | slice:0:2\\\">\\r\\n            <mat-card-header class=\\\"inline\\\">\\r\\n              <mat-card-title>{{comment.author | user}}</mat-card-title>\\r\\n              <mat-card-subtitle>{{comment.date | datetime}}</mat-card-subtitle>\\r\\n            </mat-card-header>\\r\\n            <mat-card-content>\\r\\n              <pre>{{comment.content}}</pre>\\r\\n            </mat-card-content>\\r\\n          </mat-card>\\r\\n\\r\\n          <div *ngIf=\\\"!request.comments || request.comments.length === 0\\\">\\r\\n            {{'request.lastComments.noComment' | translate}}\\r\\n          </div>\\r\\n          <div align=\\\"right\\\">\\r\\n            <button mat-button color=\\\"accent\\\" (click)=\\\"openComments()\\\">\\r\\n              <mat-icon>add</mat-icon>\\r\\n              {{'request.lastComments.displayAll' | translate}}\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n  <mat-card class=\\\"mat-card-primary\\\">\\r\\n    <mat-card-header>\\r\\n      <mat-card-title>{{'request.result.title' | translate}}</mat-card-title>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n      <app-request-result [resultGroup]=\\\"request.resultGroups ? request.resultGroups.reverse()[0] : null\\\"></app-request-result>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n</div>\\r\\n<mat-card align=\\\"center\\\" *ngIf=\\\"errorMessage\\\" class=\\\"alert\\\">\\r\\n  {{errorMessage}}\\r\\n</mat-card>\\r\\n<speed-dial-fab [position]=\\\"speedDialFabPosition\\\" [buttons]=\\\"speedDialFabButtons\\\"></speed-dial-fab>\\r\\n\\r\\n\"","module.exports = \".form > div {\\n  display: flex;\\n  flex-direction: row !important;\\n  justify-content: space-between; }\\n  .form > div > div {\\n    flex: 1 1 100%;\\n    box-sizing: border-box;\\n    align-items: center;\\n    max-width: 80%; }\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {RequestService} from '../../../services/request.service';\r\nimport {Center, Comment, Patient, Request} from '../../../../core/model/model';\r\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {PatientService} from '../../../../core/services/patient.service';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {CenterService} from '../../../../core/services/center.service';\r\nimport {ConfigurationService} from '../../../../core/services/configuration.service';\r\nimport {LoadingService} from '../../../../core/services/loading.service';\r\nimport {MatDialog} from '@angular/material';\r\nimport {RequiredIfOtherControlHasValue, RequiredIfOtherFieldHasValue} from '../../../../core/validators/requiredIfOtherFIeldHasValue';\r\nimport {SpeedDialFabPosition} from '../../../../core/components/speed-dial-fab/speed-dial-fab.component';\r\nimport {Location} from '@angular/common';\r\nimport {PatientCreateComponent} from '../../patient/patient-create/patient-create.component';\r\nimport {RequestAskInformationsComponent} from '../../../components/request-ask-informations/request-ask-informations.component';\r\nimport {RequestSelectPopulationComponent} from '../../../components/request-select-population/request-select-population.component';\r\nimport {ConfirmDialogComponent} from '../../../../core/components/dialog/confirm-dialog/confirm-dialog.component';\r\nimport {RequestCloseComponent} from '../../../components/request-close/request-close.component';\r\nimport {RequestCommentsComponent} from '../../../components/request-comments/request-comments.component';\r\n\r\n@Component({\r\n  selector: 'app-request-edit',\r\n  templateUrl: './request-edit.component.html',\r\n  styleUrls: ['./request-edit.component.scss']\r\n})\r\nexport class RequestEditComponent implements OnInit {\r\n  request: Request;\r\n  errorMessage: String;\r\n  speedDialFabPosition = SpeedDialFabPosition.Bottom;\r\n\r\n  speedDialFabButtons = [\r\n    {\r\n      icon: 'settings',\r\n      tooltip: 'request.button.launchCalculation',\r\n      clickHandler: () => {\r\n        const dialogRef = this.dialog.open(RequestSelectPopulationComponent, {data: {requestId: this.request.id}});\r\n        dialogRef.afterClosed().subscribe(result => {\r\n          if (result) {\r\n            this.loadRequest(this.request.id);\r\n          }\r\n        });\r\n      }\r\n    },\r\n    {\r\n      icon: 'comment',\r\n      tooltip: 'request.button.askInformation',\r\n      clickHandler: () => {\r\n        const dialogRef = this.dialog.open(RequestAskInformationsComponent, {data: {requestId: this.request.id}});\r\n        dialogRef.afterClosed().subscribe(result => {\r\n          if (result) {\r\n            this.location.back();\r\n          }\r\n        });\r\n      }\r\n    },\r\n    {\r\n      icon: 'check',\r\n      tooltip: 'request.button.validate',\r\n      clickHandler: () => {\r\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\r\n          data: {\r\n            confirm: true,\r\n            title: 'request.validate.title',\r\n            content: 'request.validate.content'\r\n          }\r\n        });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n          if (result) {\r\n            this.loadingService.show();\r\n            this.requestService.validateRequest(this.request.id, null).subscribe(\r\n              request => {\r\n                this.location.back();\r\n                this.loadingService.hide();\r\n              },\r\n              error => {\r\n                this.loadingService.hide();\r\n                this.errorMessage = error.error.description;\r\n              }\r\n            );\r\n          }\r\n        });\r\n      }\r\n    },\r\n    {\r\n      icon: 'block',\r\n      tooltip: 'request.button.close',\r\n      clickHandler: () => {\r\n        const dialogRef = this.dialog.open(RequestCloseComponent, {data: {requestId: this.request.id}});\r\n        dialogRef.afterClosed().subscribe(result => {\r\n          if (result) {\r\n            this.location.back();\r\n          }\r\n        });\r\n      }\r\n    },\r\n    {\r\n      icon: 'backspace',\r\n      tooltip: 'request.button.back',\r\n      clickHandler: () => this.location.back()\r\n    }\r\n  ];\r\n\r\n  constructor(private route: ActivatedRoute, private _formBuilder: FormBuilder, private patientService: PatientService,\r\n              private translateService: TranslateService, private centerService: CenterService, private configurationService: ConfigurationService,\r\n              private requestService: RequestService, private loadingService: LoadingService, private location: Location,\r\n              private translate: TranslateService, public dialog: MatDialog, private router: Router) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe(\r\n      params => {\r\n        const id = params['id'];\r\n        this.loadRequest(id);\r\n      });\r\n\r\n\r\n  }\r\n\r\n  openComments(){\r\n    this.dialog.open(RequestCommentsComponent, {data: {comments: this.request.comments}});\r\n  }\r\n\r\n\r\n  private loadRequest(id: string) {\r\n    this.loadingService.show();\r\n    this.requestService.getRequest(id).subscribe((request) => {\r\n      this.loadingService.hide();\r\n      this.request = request;\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"<mat-card fxFlex class=\\\"mat-card-primary\\\">\\r\\n  <mat-card-header class=\\\"inline\\\">\\r\\n      <mat-card-title>{{'request.title' | translate}}</mat-card-title>\\r\\n      <button mat-mini-fab color=\\\"accent\\\" matTooltip=\\\"{{'request.newRequestButton' | translate}}\\\" routerLink=\\\"/teleexpertise/requests/new\\\">\\r\\n        <mat-icon>add</mat-icon>\\r\\n      </button>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content>\\r\\n    <table mat-table mat-sort [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n      <!--- Note that these columns can be defined in any order.\\r\\n            The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n\\r\\n      <!-- number Column -->\\r\\n      <ng-container matColumnDef=\\\"code\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'request.number' | translate}}</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.code}}</td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- status Column -->\\r\\n      <ng-container matColumnDef=\\\"status\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'request.status' | translate}}</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.status}}</td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- patientName Column -->\\r\\n      <ng-container matColumnDef=\\\"patient.lastName\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'request.patient.label' | translate}}</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.patient | patient}}</td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- diseaseInformation Column -->\\r\\n      <ng-container matColumnDef=\\\"indication\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'request.indication.name' | translate}}</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.indication | vse | translate}}</td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- drugAssociated Column -->\\r\\n      <ng-container matColumnDef=\\\"treatment.drug\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'request.treatment.drug' | translate}}</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.treatment.drug | vse | translate}}</td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- dosageMethod Column -->\\r\\n      <ng-container matColumnDef=\\\"assayMethod\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'request.bloodSample.assayMethod' | translate}}</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.bloodSample.assayMethod | vse | translate}}</td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- transplantDate Column -->\\r\\n      <ng-container matColumnDef=\\\"indication.date\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'request.indication.date' | translate}}</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.indication.date | datetime}}</td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- creationDate Column -->\\r\\n      <ng-container matColumnDef=\\\"creationDate\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'request.creationDate' | translate}}</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.creationDate | datetime}}</td>\\r\\n      </ng-container>\\r\\n\\r\\n\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"selectRequest(row)\\\"></tr>\\r\\n    </table>\\r\\n  </mat-card-content>\\r\\n  <mat-card-actions>\\r\\n    <mat-paginator [length]=\\\"100\\\"\\r\\n                   [pageSize]=\\\"10\\\"\\r\\n                   [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\r\\n    </mat-paginator>\\r\\n  </mat-card-actions>\\r\\n</mat-card>\\r\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {RequestService} from '../../../services/request.service';\r\nimport {Router} from '@angular/router';\r\nimport {Request} from '../../../../core/model/model';\r\n\r\n@Component({\r\n  selector: 'app-request',\r\n  templateUrl: './request-list.component.html',\r\n  styleUrls: ['./request-list.component.scss']\r\n})\r\nexport class RequestListComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = [\r\n    'code',\r\n    'status',\r\n    'patient.lastName',\r\n    'indication',\r\n    'treatment.drug',\r\n    'assayMethod',\r\n    'indication.date',\r\n    'creationDate'];\r\n  dataSource = [];\r\n\r\n  constructor(private requestService: RequestService, private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.requestService.getRequests().subscribe(value => this.dataSource = value);\r\n\r\n    // this.requestService.getResources().subscribe(obj => console.log(JSON.stringify(obj)));\r\n  }\r\n\r\n  selectRequest(request: Request) {\r\n    this.router.navigateByUrl('/teleexpertise/requests/' + request.id);\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {Observable, throwError} from 'rxjs';\r\nimport {Request, RequestStatus, User, Indication, Comment} from '../../core/model/model';\r\nimport {environment} from '../../../environments/environment';\r\nimport {catchError, tap} from 'rxjs/operators';\r\n\r\nconst author = {email: 'stp@chu-limoges.fr'} as User;\r\n\r\nconst REQUESTS_DATA: any[] = [\r\n  {\r\n    code: 1,\r\n    status: RequestStatus.NEW,\r\n    diseaseInformation: {\r\n      transplantInformation: {type: {label: 'Greffe rénale (Adulte)'}, treatment: {label: 'Tacrolimus'}},\r\n      dosageInformation: {analyticMethod: {label: 'H.P.L.C'}}\r\n    },\r\n    type: 'MMF',\r\n    patient: {lastname: 'TES', diseaseData: {date: '01/01/2017'}},\r\n    creationDate: new Date()\r\n  },\r\n  {\r\n    code: 2,\r\n    status: 'Résultat',\r\n    diseaseInformation: {\r\n      transplantInformation: {type: {label: 'Greffe rénale (Adulte)'}, treatment: {label: 'Tacrolimus'}},\r\n      dosageInformation: {analyticMethod: {label: 'H.P.L.C'}}\r\n    },\r\n    type: 'MMF',\r\n    patient: {lastname: 'TES', diseaseData: {date: '01/01/2017'}},\r\n    creationDate: new Date()\r\n  },\r\n  {\r\n    code: 3,\r\n    status: 'Résultat',\r\n    diseaseInformation: {\r\n      transplantInformation: {type: {label: 'Greffe rénale (Adulte)'}, treatment: {label: 'Tacrolimus'}},\r\n      dosageInformation: {analyticMethod: {label: 'H.P.L.C'}}\r\n    },\r\n    type: 'MMF',\r\n    patient: {lastname: 'TES', diseaseData: {date: '01/01/2017'}},\r\n    creationDate: new Date()\r\n  },\r\n  {\r\n    code: 4,\r\n    status: 'Résultat',\r\n    diseaseInformation: {\r\n      transplantInformation: {type: {label: 'Greffe rénale (Adulte)'}, treatment: {label: 'Tacrolimus'}},\r\n      dosageInformation: {analyticMethod: {label: 'H.P.L.C'}}\r\n    },\r\n    type: 'MMF',\r\n    patient: {lastname: 'TES', diseaseData: {date: '01/01/2017'}},\r\n    creationDate: new Date()\r\n  },\r\n  {\r\n    code: 5,\r\n    status: 'Résultat',\r\n    diseaseInformation: {\r\n      transplantInformation: {type: {label: 'Greffe rénale (Adulte)'}, treatment: {label: 'Tacrolimus'}},\r\n      dosageInformation: {analyticMethod: {label: 'H.P.L.C'}}\r\n    },\r\n    type: 'MMF',\r\n    patient: {lastname: 'TES', diseaseData: {date: '01/01/2017'}},\r\n    creationDate: new Date()\r\n  },\r\n  {\r\n    code: 6,\r\n    status: 'Résultat',\r\n    diseaseInformation: {\r\n      transplantInformation: {type: {label: 'Greffe rénale (Adulte)'}, treatment: {label: 'Tacrolimus'}},\r\n      dosageInformation: {analyticMethod: {label: 'H.P.L.C'}}\r\n    },\r\n    type: 'MMF',\r\n    patient: {lastname: 'TES', diseaseData: {date: '01/01/2017'}},\r\n    creationDate: new Date()\r\n  },\r\n  {\r\n    code: 7,\r\n    status: 'Résultat',\r\n    diseaseInformation: {\r\n      transplantInformation: {type: {label: 'Greffe rénale (Adulte)'}, treatment: {label: 'Tacrolimus'}},\r\n      dosageInformation: {analyticMethod: {label: 'H.P.L.C'}}\r\n    },\r\n    type: 'MMF',\r\n    patient: {lastname: 'TES', diseaseData: {date: '01/01/2017'}},\r\n    creationDate: new Date()\r\n  },\r\n];\r\n\r\n@Injectable({\r\n\r\n  providedIn: 'root'\r\n})\r\nexport class RequestService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  sendRequest(request: Request): Observable<any> {\r\n    return this.http.put(environment.api_url + '/request', request);\r\n  }\r\n\r\n  getRequests(): Observable<Array<Request>> {\r\n    return this.http.get(environment.api_url + '/request') as Observable<Array<Request>>;\r\n  }\r\n\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n    }\r\n    // return an observable with a user-facing error message\r\n    return throwError(\r\n      'Something bad happened; please try again later.');\r\n  }\r\n\r\n  initRequest(patientId: string, centerId: string): Observable<Request> {\r\n    return this.http.get(environment.api_url + '/request/init/' + patientId + '/' + centerId) as Observable<Request>;\r\n    // return new Observable(subscriber => {\r\n    //   const req = new Request();\r\n    //   req.indication = new Indication();\r\n    //   req.indication.code = 'T_LUNG';\r\n    //   subscriber.next(req);\r\n    //   subscriber.complete();\r\n    // });\r\n  }\r\n\r\n  getRequest(id: string): Observable<Request> {\r\n    return this.http.get(environment.api_url + '/request/' + id) as Observable<Request>;\r\n  }\r\n\r\n  askForInformation(requestId: string, comment: Comment): Observable<any> {\r\n    return this.http.post(environment.api_url + '/request/' + requestId + '/comment', comment);\r\n  }\r\n\r\n  launchCalculation(requestId: string, populations: string[]): Observable<any> {\r\n    return this.http.post(environment.api_url + '/request/' + requestId + '/launchCalculation', populations);\r\n  }\r\n\r\n  closeRequest(requestId: string, comment: Comment): Observable<any> {\r\n    return this.http.post(environment.api_url + '/request/' + requestId + '/close', comment) as Observable<Request>;\r\n  }\r\n\r\n  validateRequest(requestId: string, comment: Comment): Observable<any> {\r\n    return this.http.post(environment.api_url + '/request/' + requestId + '/validate', comment) as Observable<Request>;\r\n  }\r\n\r\n  acceptRequest(requestId: string, comment: Comment): Observable<any> {\r\n    return this.http.post(environment.api_url + '/request/' + requestId + '/accept', comment) as Observable<Request>;\r\n  }\r\n\r\n  getPopulations(requestId: string): Observable<Array<any>> {\r\n    return this.http.get(environment.api_url + '/population/forRequest/' + requestId) as Observable<Array<any>>;\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {ProtectedGuard, PublicGuard} from 'ngx-auth';\r\nimport {CommonModule} from '@angular/common';\r\nimport {TeleexpertiseComponent} from './teleexpertise.component';\r\nimport {DashboardComponent} from './pages/dashboard/dashboard.component';\r\nimport {RequestListComponent} from './pages/request/request-list/request-list.component';\r\nimport {PublicationComponent} from './pages/publication/publication.component';\r\nimport {HomeComponent} from './pages/home/home.component';\r\nimport {RequestCreateComponent} from './pages/request/request-create/request-create.component';\r\nimport {RequestEditComponent} from './pages/request/request-edit/request-edit.component';\r\nimport {PatientListComponent} from './pages/patient/patient-list/patient-list.component';\r\nimport {PatientCreateComponent} from './pages/patient/patient-create/patient-create.component';\r\nimport {PatientEditComponent} from './pages/patient/patient-edit/patient-edit.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/teleexpertise/home', pathMatch: 'full'},\r\n  { path: 'teleexpertise', component: TeleexpertiseComponent,\r\n    children: [\r\n      { path: '', redirectTo: 'home', pathMatch: 'full' },\r\n      { path: 'home', component: HomeComponent },\r\n      { path: 'dashboard', component: DashboardComponent,  canActivate: [ ProtectedGuard ] },\r\n      { path: 'requests', component: RequestListComponent,  canActivate: [ ProtectedGuard ] },\r\n      { path: 'requests/new', component: RequestCreateComponent,  canActivate: [ ProtectedGuard ] },\r\n      { path: 'requests/:id', component: RequestEditComponent,  canActivate: [ ProtectedGuard ] },\r\n      { path: 'patients', component: PatientListComponent,  canActivate: [ ProtectedGuard ] },\r\n      { path: 'patients/new', component: PatientCreateComponent,  canActivate: [ ProtectedGuard ] },\r\n      { path: 'patients/:id', component: PatientEditComponent,  canActivate: [ ProtectedGuard ] },\r\n      { path: 'publication', component: PublicationComponent }\r\n      ]\r\n  },\r\n\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule, RouterModule.forRoot(routes)\r\n  ],\r\n  declarations: [],\r\n  exports: [RouterModule]\r\n})\r\nexport class TeleexpertiseRoutingModule { }\r\n","module.exports = \"<app-header (navToggle)=\\\"notificationSideNav.open();notificationsTabSelectedIndex=$event\\\"></app-header>\\r\\n\\r\\n<mat-sidenav-container id=\\\"container\\\">\\r\\n  <mat-sidenav #notificationSideNav mode=\\\"over\\\" position=\\\"end\\\">\\r\\n    <mat-tab-group dynamicHeight [(selectedIndex)]=\\\"notificationsTabSelectedIndex\\\">\\r\\n      <mat-tab [label]=\\\"'commom.notifications' | translate\\\">\\r\\n          <div class=\\\"scroll ng-star-inserted\\\" style=\\\"\\\">\\r\\n            <mat-nav-list class=\\\"mat-nav-list\\\" role=\\\"navigation\\\">\\r\\n              <mat-list-item class=\\\"mat-list-item mat-2-line mat-list-item-avatar mat-list-item-with-avatar\\\">\\r\\n                <div class=\\\"mat-list-item-content\\\">\\r\\n                  <div class=\\\"mat-list-item-ripple mat-ripple\\\" mat-ripple=\\\"\\\"></div>\\r\\n                  <mat-icon class=\\\"mat-text-primary mat-icon mat-list-avatar material-icons\\\" mat-list-avatar=\\\"\\\"\\r\\n                            role=\\\"img\\\" aria-hidden=\\\"true\\\">people\\r\\n                  </mat-icon>\\r\\n                  <div class=\\\"mat-list-text\\\"><h4 class=\\\"mat-line\\\" matline=\\\"\\\">Notification 1</h4>\\r\\n                    <p class=\\\"mat-line\\\" matline=\\\"\\\">Ligula Purus Adipiscing</p></div>\\r\\n                </div>\\r\\n              </mat-list-item>\\r\\n              <mat-list-item class=\\\"mat-list-item mat-2-line mat-list-item-avatar mat-list-item-with-avatar\\\">\\r\\n                <div class=\\\"mat-list-item-content\\\">\\r\\n                  <div class=\\\"mat-list-item-ripple mat-ripple\\\" mat-ripple=\\\"\\\"></div>\\r\\n                  <mat-icon class=\\\"mat-text-warn mat-icon mat-list-avatar material-icons\\\" mat-list-avatar=\\\"\\\" role=\\\"img\\\"\\r\\n                            aria-hidden=\\\"true\\\">local_offer\\r\\n                  </mat-icon>\\r\\n                  <div class=\\\"mat-list-text\\\"><h4 class=\\\"mat-line\\\" matline=\\\"\\\">Notification 2</h4>\\r\\n                    <p class=\\\"mat-line\\\" matline=\\\"\\\">Etiam Ligula Dapibus</p></div>\\r\\n                </div>\\r\\n              </mat-list-item>\\r\\n              <mat-list-item class=\\\"mat-list-item mat-2-line mat-list-item-avatar mat-list-item-with-avatar\\\">\\r\\n                <div class=\\\"mat-list-item-content\\\">\\r\\n                  <div class=\\\"mat-list-item-ripple mat-ripple\\\" mat-ripple=\\\"\\\"></div>\\r\\n                  <mat-icon class=\\\"mat-text-accent mat-icon mat-list-avatar material-icons\\\" mat-list-avatar=\\\"\\\"\\r\\n                            role=\\\"img\\\" aria-hidden=\\\"true\\\">info\\r\\n                  </mat-icon>\\r\\n                  <div class=\\\"mat-list-text\\\"><h4 class=\\\"mat-line\\\" matline=\\\"\\\">Notification 3</h4>\\r\\n                    <p class=\\\"mat-line\\\" matline=\\\"\\\">Sollicitudin Euismod Fringilla</p></div>\\r\\n                </div>\\r\\n              </mat-list-item>\\r\\n\\r\\n            </mat-nav-list>\\r\\n          </div>\\r\\n      </mat-tab>\\r\\n      <mat-tab [label]=\\\"'commom.alerts' | translate\\\">\\r\\n          <mat-nav-list>\\r\\n            <mat-list-item class=\\\"mat-list-item mat-2-line mat-list-item-avatar mat-list-item-with-avatar\\\">\\r\\n              <div class=\\\"mat-list-item-content\\\">\\r\\n                <div class=\\\"mat-list-item-ripple mat-ripple\\\" mat-ripple=\\\"\\\"></div>\\r\\n                <mat-icon class=\\\"mat-indigo mat-icon mat-list-avatar material-icons\\\" mat-list-avatar=\\\"\\\" role=\\\"img\\\"\\r\\n                          aria-hidden=\\\"true\\\">delete_sweep\\r\\n                </mat-icon>\\r\\n                <div class=\\\"mat-list-text\\\"><h4 class=\\\"mat-line\\\" matline=\\\"\\\">Alerte 1</h4><span\\r\\n                  class=\\\"text-md mat-text-muted mat-line\\\" matline=\\\"\\\">Tuesday, March 24, 2015</span></div>\\r\\n              </div>\\r\\n            </mat-list-item>\\r\\n            <mat-list-item class=\\\"mat-list-item mat-2-line mat-list-item-avatar mat-list-item-with-avatar\\\">\\r\\n              <div class=\\\"mat-list-item-content\\\">\\r\\n                <div class=\\\"mat-list-item-ripple mat-ripple\\\" mat-ripple=\\\"\\\"></div>\\r\\n                <mat-icon class=\\\"mat-icon mat-list-avatar material-icons\\\" mat-list-avatar=\\\"\\\" role=\\\"img\\\"\\r\\n                          aria-hidden=\\\"true\\\">check_circle\\r\\n                </mat-icon>\\r\\n                <div class=\\\"mat-list-text\\\"><h4 class=\\\"mat-line\\\" matline=\\\"\\\">Alerte 2</h4><span\\r\\n                  class=\\\"text-md mat-text-muted mat-line\\\" matline=\\\"\\\">Friday, March 27, 2015</span></div>\\r\\n              </div>\\r\\n            </mat-list-item>\\r\\n            <mat-list-item class=\\\"mat-list-item mat-2-line mat-list-item-avatar mat-list-item-with-avatar\\\">\\r\\n              <div class=\\\"mat-list-item-content\\\">\\r\\n                <div class=\\\"mat-list-item-ripple mat-ripple\\\" mat-ripple=\\\"\\\"></div>\\r\\n                <mat-icon class=\\\"mat-icon mat-list-avatar material-icons\\\" mat-list-avatar=\\\"\\\" role=\\\"img\\\"\\r\\n                          aria-hidden=\\\"true\\\">notifications_paused\\r\\n                </mat-icon>\\r\\n                <div class=\\\"mat-list-text\\\"><h4 class=\\\"mat-line\\\" matline=\\\"\\\">Alerte 3</h4><span\\r\\n                  class=\\\"text-md mat-text-muted mat-line\\\" matline=\\\"\\\">Saturday, March 28, 2015</span></div>\\r\\n              </div>\\r\\n            </mat-list-item>\\r\\n            <mat-list-item class=\\\"mat-list-item mat-2-line mat-list-item-avatar mat-list-item-with-avatar\\\">\\r\\n              <div class=\\\"mat-list-item-content\\\">\\r\\n                <div class=\\\"mat-list-item-ripple mat-ripple\\\" mat-ripple=\\\"\\\"></div>\\r\\n                <mat-icon class=\\\"mat-icon mat-list-avatar material-icons\\\" mat-list-avatar=\\\"\\\" role=\\\"img\\\"\\r\\n                          aria-hidden=\\\"true\\\">person_add\\r\\n                </mat-icon>\\r\\n                <div class=\\\"mat-list-text\\\"><h4 class=\\\"mat-line\\\" matline=\\\"\\\">Alerte 4</h4><span\\r\\n                  class=\\\"text-md mat-text-muted mat-line\\\" matline=\\\"\\\">Monday, April 6, 2015</span></div>\\r\\n              </div>\\r\\n            </mat-list-item>\\r\\n            <mat-list-item class=\\\"mat-list-item mat-2-line mat-list-item-avatar mat-list-item-with-avatar\\\">\\r\\n              <div class=\\\"mat-list-item-content\\\">\\r\\n                <div class=\\\"mat-list-item-ripple mat-ripple\\\" mat-ripple=\\\"\\\"></div>\\r\\n                <mat-icon class=\\\"mat-icon mat-list-avatar material-icons\\\" mat-list-avatar=\\\"\\\" role=\\\"img\\\"\\r\\n                          aria-hidden=\\\"true\\\">phone_missed\\r\\n                </mat-icon>\\r\\n                <div class=\\\"mat-list-text\\\"><h4 class=\\\"mat-line\\\" matline=\\\"\\\">Alerte 5</h4><span\\r\\n                  class=\\\"text-md mat-text-muted mat-line\\\" matline=\\\"\\\">Sunday, April 12, 2015</span></div>\\r\\n              </div>\\r\\n            </mat-list-item>\\r\\n            <mat-list-item class=\\\"mat-list-item mat-2-line mat-list-item-avatar mat-list-item-with-avatar\\\">\\r\\n              <div class=\\\"mat-list-item-content\\\">\\r\\n                <div class=\\\"mat-list-item-ripple mat-ripple\\\" mat-ripple=\\\"\\\"></div>\\r\\n                <mat-icon class=\\\"mat-icon mat-list-avatar material-icons\\\" mat-list-avatar=\\\"\\\" role=\\\"img\\\"\\r\\n                          aria-hidden=\\\"true\\\">group_add\\r\\n                </mat-icon>\\r\\n                <div class=\\\"mat-list-text\\\"><h4 class=\\\"mat-line\\\" matline=\\\"\\\">Alerte 6</h4><span\\r\\n                  class=\\\"text-md mat-text-muted mat-line\\\" matline=\\\"\\\">Saturday, April 18, 2015</span></div>\\r\\n              </div>\\r\\n            </mat-list-item>\\r\\n          </mat-nav-list>\\r\\n      </mat-tab>\\r\\n    </mat-tab-group>\\r\\n  </mat-sidenav>\\r\\n\\r\\n  <mat-sidenav-content>\\r\\n\\r\\n    <router-outlet></router-outlet>\\r\\n    <!--<mat-card class=\\\"example-card\\\">-->\\r\\n      <!--<mat-card-header>-->\\r\\n        <!--<div class=icon>-->\\r\\n          <!--<mat-icon color=\\\"primary\\\">dialpad</mat-icon>-->\\r\\n        <!--</div>-->\\r\\n        <!--<mat-card-title>Shiba Inu</mat-card-title>-->\\r\\n        <!--<mat-card-subtitle>Dog Breed</mat-card-subtitle>-->\\r\\n      <!--</mat-card-header>-->\\r\\n      <!--<mat-card-content>-->\\r\\n        <!--<p class=\\\"card-text\\\">Better than last week (25%)</p>-->\\r\\n      <!--</mat-card-content>-->\\r\\n      <!--<mat-card-actions>-->\\r\\n        <!--<button mat-button>LIKE</button>-->\\r\\n        <!--<button mat-button>SHARE</button>-->\\r\\n      <!--</mat-card-actions>-->\\r\\n    <!--</mat-card>-->\\r\\n  </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n\\r\\n\\r\\n\\r\\n<app-footer></app-footer>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-teleexpertise',\r\n  templateUrl: './teleexpertise.component.html',\r\n  styleUrls: ['./teleexpertise.component.scss']\r\n})\r\nexport class TeleexpertiseComponent implements OnInit {\r\n\r\n  notificationsTabSelectedIndex: number = 0;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\n\r\nimport {TeleexpertiseRoutingModule} from './teleexpertise-routing.module';\r\nimport {TeleexpertiseComponent} from './teleexpertise.component';\r\nimport {AuthModule} from '../auth/auth.module';\r\nimport {CoreModule} from '../core/core.module';\r\nimport {CommonModule} from '@angular/common';\r\nimport {HomeComponent} from './pages/home/home.component';\r\nimport {RequestListComponent} from './pages/request/request-list/request-list.component';\r\nimport {PublicationComponent} from './pages/publication/publication.component';\r\nimport {DashboardComponent} from './pages/dashboard/dashboard.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\nimport {RequestCreateComponent} from './pages/request/request-create/request-create.component';\r\nimport {RequestService} from './services/request.service';\r\nimport {RequestEditComponent} from './pages/request/request-edit/request-edit.component';\r\nimport {PatientCreateComponent} from './pages/patient/patient-create/patient-create.component';\r\nimport {PatientListComponent} from './pages/patient/patient-list/patient-list.component';\r\nimport {PatientEditComponent} from './pages/patient/patient-edit/patient-edit.component';\r\nimport {RequestSelectPopulationComponent} from './components/request-select-population/request-select-population.component';\r\nimport {RequestAskInformationsComponent} from './components/request-ask-informations/request-ask-informations.component';\r\nimport { RequestCommentsComponent } from './components/request-comments/request-comments.component';\r\nimport { RequestCloseComponent } from './components/request-close/request-close.component';\r\nimport { RequestResultComponent } from './components/request-result/request-result.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CoreModule,\r\n    SharedModule,\r\n    AuthModule,\r\n    TeleexpertiseRoutingModule\r\n  ],\r\n  providers: [\r\n    RequestService\r\n  ],\r\n  entryComponents: [RequestSelectPopulationComponent, RequestAskInformationsComponent, RequestCloseComponent, RequestCommentsComponent],\r\n  declarations: [TeleexpertiseComponent, HomeComponent, RequestListComponent, PublicationComponent, DashboardComponent,\r\n    RequestCreateComponent, RequestEditComponent, PatientCreateComponent, PatientListComponent, PatientEditComponent,\r\n    RequestSelectPopulationComponent, RequestAskInformationsComponent, RequestCommentsComponent, RequestCloseComponent, RequestResultComponent]\r\n})\r\nexport class TeleexpertiseModule {\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  api_url: 'https://optimis-api-demo.herokuapp.com',\r\n  oauth_url: 'https://optimis-auth-demo.herokuapp.com'\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\nimport 'hammerjs';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}